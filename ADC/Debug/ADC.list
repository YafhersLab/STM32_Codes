
ADC.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00003be4  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000374  08003d88  08003d88  00013d88  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080040fc  080040fc  000201c8  2**0
                  CONTENTS
  4 .ARM          00000000  080040fc  080040fc  000201c8  2**0
                  CONTENTS
  5 .preinit_array 00000000  080040fc  080040fc  000201c8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080040fc  080040fc  000140fc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08004100  08004100  00014100  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001c8  20000000  08004104  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000017c  200001c8  080042cc  000201c8  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000344  080042cc  00020344  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000201c8  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  000201f8  2**0
                  CONTENTS, READONLY
 13 .debug_info   000024df  00000000  00000000  0002023b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 0000089f  00000000  00000000  0002271a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000248  00000000  00000000  00022fc0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 0000019f  00000000  00000000  00023208  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0000e188  00000000  00000000  000233a7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00002702  00000000  00000000  0003152f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00056301  00000000  00000000  00033c31  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  000017d8  00000000  00000000  00089f34  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000004b  00000000  00000000  0008b70c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	200001c8 	.word	0x200001c8
 80001bc:	00000000 	.word	0x00000000
 80001c0:	08003d6c 	.word	0x08003d6c

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	200001cc 	.word	0x200001cc
 80001dc:	08003d6c 	.word	0x08003d6c

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <strlen>:
 8000280:	4603      	mov	r3, r0
 8000282:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000286:	2a00      	cmp	r2, #0
 8000288:	d1fb      	bne.n	8000282 <strlen+0x2>
 800028a:	1a18      	subs	r0, r3, r0
 800028c:	3801      	subs	r0, #1
 800028e:	4770      	bx	lr

08000290 <__aeabi_drsub>:
 8000290:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000294:	e002      	b.n	800029c <__adddf3>
 8000296:	bf00      	nop

08000298 <__aeabi_dsub>:
 8000298:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800029c <__adddf3>:
 800029c:	b530      	push	{r4, r5, lr}
 800029e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002a2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002a6:	ea94 0f05 	teq	r4, r5
 80002aa:	bf08      	it	eq
 80002ac:	ea90 0f02 	teqeq	r0, r2
 80002b0:	bf1f      	itttt	ne
 80002b2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002b6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ba:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002be:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002c2:	f000 80e2 	beq.w	800048a <__adddf3+0x1ee>
 80002c6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ca:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002ce:	bfb8      	it	lt
 80002d0:	426d      	neglt	r5, r5
 80002d2:	dd0c      	ble.n	80002ee <__adddf3+0x52>
 80002d4:	442c      	add	r4, r5
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	ea82 0000 	eor.w	r0, r2, r0
 80002e2:	ea83 0101 	eor.w	r1, r3, r1
 80002e6:	ea80 0202 	eor.w	r2, r0, r2
 80002ea:	ea81 0303 	eor.w	r3, r1, r3
 80002ee:	2d36      	cmp	r5, #54	; 0x36
 80002f0:	bf88      	it	hi
 80002f2:	bd30      	pophi	{r4, r5, pc}
 80002f4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80002f8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002fc:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000300:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000304:	d002      	beq.n	800030c <__adddf3+0x70>
 8000306:	4240      	negs	r0, r0
 8000308:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800030c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000310:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000314:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000318:	d002      	beq.n	8000320 <__adddf3+0x84>
 800031a:	4252      	negs	r2, r2
 800031c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000320:	ea94 0f05 	teq	r4, r5
 8000324:	f000 80a7 	beq.w	8000476 <__adddf3+0x1da>
 8000328:	f1a4 0401 	sub.w	r4, r4, #1
 800032c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000330:	db0d      	blt.n	800034e <__adddf3+0xb2>
 8000332:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000336:	fa22 f205 	lsr.w	r2, r2, r5
 800033a:	1880      	adds	r0, r0, r2
 800033c:	f141 0100 	adc.w	r1, r1, #0
 8000340:	fa03 f20e 	lsl.w	r2, r3, lr
 8000344:	1880      	adds	r0, r0, r2
 8000346:	fa43 f305 	asr.w	r3, r3, r5
 800034a:	4159      	adcs	r1, r3
 800034c:	e00e      	b.n	800036c <__adddf3+0xd0>
 800034e:	f1a5 0520 	sub.w	r5, r5, #32
 8000352:	f10e 0e20 	add.w	lr, lr, #32
 8000356:	2a01      	cmp	r2, #1
 8000358:	fa03 fc0e 	lsl.w	ip, r3, lr
 800035c:	bf28      	it	cs
 800035e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000362:	fa43 f305 	asr.w	r3, r3, r5
 8000366:	18c0      	adds	r0, r0, r3
 8000368:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800036c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000370:	d507      	bpl.n	8000382 <__adddf3+0xe6>
 8000372:	f04f 0e00 	mov.w	lr, #0
 8000376:	f1dc 0c00 	rsbs	ip, ip, #0
 800037a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800037e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000382:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000386:	d31b      	bcc.n	80003c0 <__adddf3+0x124>
 8000388:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800038c:	d30c      	bcc.n	80003a8 <__adddf3+0x10c>
 800038e:	0849      	lsrs	r1, r1, #1
 8000390:	ea5f 0030 	movs.w	r0, r0, rrx
 8000394:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000398:	f104 0401 	add.w	r4, r4, #1
 800039c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003a0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003a4:	f080 809a 	bcs.w	80004dc <__adddf3+0x240>
 80003a8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003ac:	bf08      	it	eq
 80003ae:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003b2:	f150 0000 	adcs.w	r0, r0, #0
 80003b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ba:	ea41 0105 	orr.w	r1, r1, r5
 80003be:	bd30      	pop	{r4, r5, pc}
 80003c0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003c4:	4140      	adcs	r0, r0
 80003c6:	eb41 0101 	adc.w	r1, r1, r1
 80003ca:	3c01      	subs	r4, #1
 80003cc:	bf28      	it	cs
 80003ce:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80003d2:	d2e9      	bcs.n	80003a8 <__adddf3+0x10c>
 80003d4:	f091 0f00 	teq	r1, #0
 80003d8:	bf04      	itt	eq
 80003da:	4601      	moveq	r1, r0
 80003dc:	2000      	moveq	r0, #0
 80003de:	fab1 f381 	clz	r3, r1
 80003e2:	bf08      	it	eq
 80003e4:	3320      	addeq	r3, #32
 80003e6:	f1a3 030b 	sub.w	r3, r3, #11
 80003ea:	f1b3 0220 	subs.w	r2, r3, #32
 80003ee:	da0c      	bge.n	800040a <__adddf3+0x16e>
 80003f0:	320c      	adds	r2, #12
 80003f2:	dd08      	ble.n	8000406 <__adddf3+0x16a>
 80003f4:	f102 0c14 	add.w	ip, r2, #20
 80003f8:	f1c2 020c 	rsb	r2, r2, #12
 80003fc:	fa01 f00c 	lsl.w	r0, r1, ip
 8000400:	fa21 f102 	lsr.w	r1, r1, r2
 8000404:	e00c      	b.n	8000420 <__adddf3+0x184>
 8000406:	f102 0214 	add.w	r2, r2, #20
 800040a:	bfd8      	it	le
 800040c:	f1c2 0c20 	rsble	ip, r2, #32
 8000410:	fa01 f102 	lsl.w	r1, r1, r2
 8000414:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000418:	bfdc      	itt	le
 800041a:	ea41 010c 	orrle.w	r1, r1, ip
 800041e:	4090      	lslle	r0, r2
 8000420:	1ae4      	subs	r4, r4, r3
 8000422:	bfa2      	ittt	ge
 8000424:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000428:	4329      	orrge	r1, r5
 800042a:	bd30      	popge	{r4, r5, pc}
 800042c:	ea6f 0404 	mvn.w	r4, r4
 8000430:	3c1f      	subs	r4, #31
 8000432:	da1c      	bge.n	800046e <__adddf3+0x1d2>
 8000434:	340c      	adds	r4, #12
 8000436:	dc0e      	bgt.n	8000456 <__adddf3+0x1ba>
 8000438:	f104 0414 	add.w	r4, r4, #20
 800043c:	f1c4 0220 	rsb	r2, r4, #32
 8000440:	fa20 f004 	lsr.w	r0, r0, r4
 8000444:	fa01 f302 	lsl.w	r3, r1, r2
 8000448:	ea40 0003 	orr.w	r0, r0, r3
 800044c:	fa21 f304 	lsr.w	r3, r1, r4
 8000450:	ea45 0103 	orr.w	r1, r5, r3
 8000454:	bd30      	pop	{r4, r5, pc}
 8000456:	f1c4 040c 	rsb	r4, r4, #12
 800045a:	f1c4 0220 	rsb	r2, r4, #32
 800045e:	fa20 f002 	lsr.w	r0, r0, r2
 8000462:	fa01 f304 	lsl.w	r3, r1, r4
 8000466:	ea40 0003 	orr.w	r0, r0, r3
 800046a:	4629      	mov	r1, r5
 800046c:	bd30      	pop	{r4, r5, pc}
 800046e:	fa21 f004 	lsr.w	r0, r1, r4
 8000472:	4629      	mov	r1, r5
 8000474:	bd30      	pop	{r4, r5, pc}
 8000476:	f094 0f00 	teq	r4, #0
 800047a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800047e:	bf06      	itte	eq
 8000480:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000484:	3401      	addeq	r4, #1
 8000486:	3d01      	subne	r5, #1
 8000488:	e74e      	b.n	8000328 <__adddf3+0x8c>
 800048a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800048e:	bf18      	it	ne
 8000490:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000494:	d029      	beq.n	80004ea <__adddf3+0x24e>
 8000496:	ea94 0f05 	teq	r4, r5
 800049a:	bf08      	it	eq
 800049c:	ea90 0f02 	teqeq	r0, r2
 80004a0:	d005      	beq.n	80004ae <__adddf3+0x212>
 80004a2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004a6:	bf04      	itt	eq
 80004a8:	4619      	moveq	r1, r3
 80004aa:	4610      	moveq	r0, r2
 80004ac:	bd30      	pop	{r4, r5, pc}
 80004ae:	ea91 0f03 	teq	r1, r3
 80004b2:	bf1e      	ittt	ne
 80004b4:	2100      	movne	r1, #0
 80004b6:	2000      	movne	r0, #0
 80004b8:	bd30      	popne	{r4, r5, pc}
 80004ba:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004be:	d105      	bne.n	80004cc <__adddf3+0x230>
 80004c0:	0040      	lsls	r0, r0, #1
 80004c2:	4149      	adcs	r1, r1
 80004c4:	bf28      	it	cs
 80004c6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004ca:	bd30      	pop	{r4, r5, pc}
 80004cc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80004d0:	bf3c      	itt	cc
 80004d2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80004d6:	bd30      	popcc	{r4, r5, pc}
 80004d8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004dc:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80004e0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80004e4:	f04f 0000 	mov.w	r0, #0
 80004e8:	bd30      	pop	{r4, r5, pc}
 80004ea:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004ee:	bf1a      	itte	ne
 80004f0:	4619      	movne	r1, r3
 80004f2:	4610      	movne	r0, r2
 80004f4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004f8:	bf1c      	itt	ne
 80004fa:	460b      	movne	r3, r1
 80004fc:	4602      	movne	r2, r0
 80004fe:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000502:	bf06      	itte	eq
 8000504:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000508:	ea91 0f03 	teqeq	r1, r3
 800050c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000510:	bd30      	pop	{r4, r5, pc}
 8000512:	bf00      	nop

08000514 <__aeabi_ui2d>:
 8000514:	f090 0f00 	teq	r0, #0
 8000518:	bf04      	itt	eq
 800051a:	2100      	moveq	r1, #0
 800051c:	4770      	bxeq	lr
 800051e:	b530      	push	{r4, r5, lr}
 8000520:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000524:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000528:	f04f 0500 	mov.w	r5, #0
 800052c:	f04f 0100 	mov.w	r1, #0
 8000530:	e750      	b.n	80003d4 <__adddf3+0x138>
 8000532:	bf00      	nop

08000534 <__aeabi_i2d>:
 8000534:	f090 0f00 	teq	r0, #0
 8000538:	bf04      	itt	eq
 800053a:	2100      	moveq	r1, #0
 800053c:	4770      	bxeq	lr
 800053e:	b530      	push	{r4, r5, lr}
 8000540:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000544:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000548:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800054c:	bf48      	it	mi
 800054e:	4240      	negmi	r0, r0
 8000550:	f04f 0100 	mov.w	r1, #0
 8000554:	e73e      	b.n	80003d4 <__adddf3+0x138>
 8000556:	bf00      	nop

08000558 <__aeabi_f2d>:
 8000558:	0042      	lsls	r2, r0, #1
 800055a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800055e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000562:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000566:	bf1f      	itttt	ne
 8000568:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800056c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000570:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000574:	4770      	bxne	lr
 8000576:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800057a:	bf08      	it	eq
 800057c:	4770      	bxeq	lr
 800057e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000582:	bf04      	itt	eq
 8000584:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000588:	4770      	bxeq	lr
 800058a:	b530      	push	{r4, r5, lr}
 800058c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000590:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000594:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000598:	e71c      	b.n	80003d4 <__adddf3+0x138>
 800059a:	bf00      	nop

0800059c <__aeabi_ul2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f04f 0500 	mov.w	r5, #0
 80005aa:	e00a      	b.n	80005c2 <__aeabi_l2d+0x16>

080005ac <__aeabi_l2d>:
 80005ac:	ea50 0201 	orrs.w	r2, r0, r1
 80005b0:	bf08      	it	eq
 80005b2:	4770      	bxeq	lr
 80005b4:	b530      	push	{r4, r5, lr}
 80005b6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005ba:	d502      	bpl.n	80005c2 <__aeabi_l2d+0x16>
 80005bc:	4240      	negs	r0, r0
 80005be:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005c2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005c6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005ca:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005ce:	f43f aed8 	beq.w	8000382 <__adddf3+0xe6>
 80005d2:	f04f 0203 	mov.w	r2, #3
 80005d6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005da:	bf18      	it	ne
 80005dc:	3203      	addne	r2, #3
 80005de:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005e2:	bf18      	it	ne
 80005e4:	3203      	addne	r2, #3
 80005e6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005ea:	f1c2 0320 	rsb	r3, r2, #32
 80005ee:	fa00 fc03 	lsl.w	ip, r0, r3
 80005f2:	fa20 f002 	lsr.w	r0, r0, r2
 80005f6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005fa:	ea40 000e 	orr.w	r0, r0, lr
 80005fe:	fa21 f102 	lsr.w	r1, r1, r2
 8000602:	4414      	add	r4, r2
 8000604:	e6bd      	b.n	8000382 <__adddf3+0xe6>
 8000606:	bf00      	nop

08000608 <__aeabi_dmul>:
 8000608:	b570      	push	{r4, r5, r6, lr}
 800060a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800060e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000612:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000616:	bf1d      	ittte	ne
 8000618:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800061c:	ea94 0f0c 	teqne	r4, ip
 8000620:	ea95 0f0c 	teqne	r5, ip
 8000624:	f000 f8de 	bleq	80007e4 <__aeabi_dmul+0x1dc>
 8000628:	442c      	add	r4, r5
 800062a:	ea81 0603 	eor.w	r6, r1, r3
 800062e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000632:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000636:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800063a:	bf18      	it	ne
 800063c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000640:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000644:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000648:	d038      	beq.n	80006bc <__aeabi_dmul+0xb4>
 800064a:	fba0 ce02 	umull	ip, lr, r0, r2
 800064e:	f04f 0500 	mov.w	r5, #0
 8000652:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000656:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800065a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800065e:	f04f 0600 	mov.w	r6, #0
 8000662:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000666:	f09c 0f00 	teq	ip, #0
 800066a:	bf18      	it	ne
 800066c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000670:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000674:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000678:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800067c:	d204      	bcs.n	8000688 <__aeabi_dmul+0x80>
 800067e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000682:	416d      	adcs	r5, r5
 8000684:	eb46 0606 	adc.w	r6, r6, r6
 8000688:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800068c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000690:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000694:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000698:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800069c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006a0:	bf88      	it	hi
 80006a2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006a6:	d81e      	bhi.n	80006e6 <__aeabi_dmul+0xde>
 80006a8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006ac:	bf08      	it	eq
 80006ae:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006b2:	f150 0000 	adcs.w	r0, r0, #0
 80006b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ba:	bd70      	pop	{r4, r5, r6, pc}
 80006bc:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006c0:	ea46 0101 	orr.w	r1, r6, r1
 80006c4:	ea40 0002 	orr.w	r0, r0, r2
 80006c8:	ea81 0103 	eor.w	r1, r1, r3
 80006cc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006d0:	bfc2      	ittt	gt
 80006d2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006d6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006da:	bd70      	popgt	{r4, r5, r6, pc}
 80006dc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80006e0:	f04f 0e00 	mov.w	lr, #0
 80006e4:	3c01      	subs	r4, #1
 80006e6:	f300 80ab 	bgt.w	8000840 <__aeabi_dmul+0x238>
 80006ea:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80006ee:	bfde      	ittt	le
 80006f0:	2000      	movle	r0, #0
 80006f2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80006f6:	bd70      	pople	{r4, r5, r6, pc}
 80006f8:	f1c4 0400 	rsb	r4, r4, #0
 80006fc:	3c20      	subs	r4, #32
 80006fe:	da35      	bge.n	800076c <__aeabi_dmul+0x164>
 8000700:	340c      	adds	r4, #12
 8000702:	dc1b      	bgt.n	800073c <__aeabi_dmul+0x134>
 8000704:	f104 0414 	add.w	r4, r4, #20
 8000708:	f1c4 0520 	rsb	r5, r4, #32
 800070c:	fa00 f305 	lsl.w	r3, r0, r5
 8000710:	fa20 f004 	lsr.w	r0, r0, r4
 8000714:	fa01 f205 	lsl.w	r2, r1, r5
 8000718:	ea40 0002 	orr.w	r0, r0, r2
 800071c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000720:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000724:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000728:	fa21 f604 	lsr.w	r6, r1, r4
 800072c:	eb42 0106 	adc.w	r1, r2, r6
 8000730:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000734:	bf08      	it	eq
 8000736:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800073a:	bd70      	pop	{r4, r5, r6, pc}
 800073c:	f1c4 040c 	rsb	r4, r4, #12
 8000740:	f1c4 0520 	rsb	r5, r4, #32
 8000744:	fa00 f304 	lsl.w	r3, r0, r4
 8000748:	fa20 f005 	lsr.w	r0, r0, r5
 800074c:	fa01 f204 	lsl.w	r2, r1, r4
 8000750:	ea40 0002 	orr.w	r0, r0, r2
 8000754:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000758:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800075c:	f141 0100 	adc.w	r1, r1, #0
 8000760:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000764:	bf08      	it	eq
 8000766:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f1c4 0520 	rsb	r5, r4, #32
 8000770:	fa00 f205 	lsl.w	r2, r0, r5
 8000774:	ea4e 0e02 	orr.w	lr, lr, r2
 8000778:	fa20 f304 	lsr.w	r3, r0, r4
 800077c:	fa01 f205 	lsl.w	r2, r1, r5
 8000780:	ea43 0302 	orr.w	r3, r3, r2
 8000784:	fa21 f004 	lsr.w	r0, r1, r4
 8000788:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800078c:	fa21 f204 	lsr.w	r2, r1, r4
 8000790:	ea20 0002 	bic.w	r0, r0, r2
 8000794:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000798:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800079c:	bf08      	it	eq
 800079e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007a2:	bd70      	pop	{r4, r5, r6, pc}
 80007a4:	f094 0f00 	teq	r4, #0
 80007a8:	d10f      	bne.n	80007ca <__aeabi_dmul+0x1c2>
 80007aa:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007ae:	0040      	lsls	r0, r0, #1
 80007b0:	eb41 0101 	adc.w	r1, r1, r1
 80007b4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007b8:	bf08      	it	eq
 80007ba:	3c01      	subeq	r4, #1
 80007bc:	d0f7      	beq.n	80007ae <__aeabi_dmul+0x1a6>
 80007be:	ea41 0106 	orr.w	r1, r1, r6
 80007c2:	f095 0f00 	teq	r5, #0
 80007c6:	bf18      	it	ne
 80007c8:	4770      	bxne	lr
 80007ca:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007ce:	0052      	lsls	r2, r2, #1
 80007d0:	eb43 0303 	adc.w	r3, r3, r3
 80007d4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80007d8:	bf08      	it	eq
 80007da:	3d01      	subeq	r5, #1
 80007dc:	d0f7      	beq.n	80007ce <__aeabi_dmul+0x1c6>
 80007de:	ea43 0306 	orr.w	r3, r3, r6
 80007e2:	4770      	bx	lr
 80007e4:	ea94 0f0c 	teq	r4, ip
 80007e8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007ec:	bf18      	it	ne
 80007ee:	ea95 0f0c 	teqne	r5, ip
 80007f2:	d00c      	beq.n	800080e <__aeabi_dmul+0x206>
 80007f4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007f8:	bf18      	it	ne
 80007fa:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007fe:	d1d1      	bne.n	80007a4 <__aeabi_dmul+0x19c>
 8000800:	ea81 0103 	eor.w	r1, r1, r3
 8000804:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000808:	f04f 0000 	mov.w	r0, #0
 800080c:	bd70      	pop	{r4, r5, r6, pc}
 800080e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000812:	bf06      	itte	eq
 8000814:	4610      	moveq	r0, r2
 8000816:	4619      	moveq	r1, r3
 8000818:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800081c:	d019      	beq.n	8000852 <__aeabi_dmul+0x24a>
 800081e:	ea94 0f0c 	teq	r4, ip
 8000822:	d102      	bne.n	800082a <__aeabi_dmul+0x222>
 8000824:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000828:	d113      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800082a:	ea95 0f0c 	teq	r5, ip
 800082e:	d105      	bne.n	800083c <__aeabi_dmul+0x234>
 8000830:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000834:	bf1c      	itt	ne
 8000836:	4610      	movne	r0, r2
 8000838:	4619      	movne	r1, r3
 800083a:	d10a      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800083c:	ea81 0103 	eor.w	r1, r1, r3
 8000840:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000844:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000848:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800084c:	f04f 0000 	mov.w	r0, #0
 8000850:	bd70      	pop	{r4, r5, r6, pc}
 8000852:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000856:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800085a:	bd70      	pop	{r4, r5, r6, pc}

0800085c <__aeabi_ddiv>:
 800085c:	b570      	push	{r4, r5, r6, lr}
 800085e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000862:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000866:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800086a:	bf1d      	ittte	ne
 800086c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000870:	ea94 0f0c 	teqne	r4, ip
 8000874:	ea95 0f0c 	teqne	r5, ip
 8000878:	f000 f8a7 	bleq	80009ca <__aeabi_ddiv+0x16e>
 800087c:	eba4 0405 	sub.w	r4, r4, r5
 8000880:	ea81 0e03 	eor.w	lr, r1, r3
 8000884:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000888:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800088c:	f000 8088 	beq.w	80009a0 <__aeabi_ddiv+0x144>
 8000890:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000894:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000898:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800089c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008a0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008a4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008a8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008ac:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008b0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008b4:	429d      	cmp	r5, r3
 80008b6:	bf08      	it	eq
 80008b8:	4296      	cmpeq	r6, r2
 80008ba:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008be:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008c2:	d202      	bcs.n	80008ca <__aeabi_ddiv+0x6e>
 80008c4:	085b      	lsrs	r3, r3, #1
 80008c6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ca:	1ab6      	subs	r6, r6, r2
 80008cc:	eb65 0503 	sbc.w	r5, r5, r3
 80008d0:	085b      	lsrs	r3, r3, #1
 80008d2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008d6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80008da:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80008de:	ebb6 0e02 	subs.w	lr, r6, r2
 80008e2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008e6:	bf22      	ittt	cs
 80008e8:	1ab6      	subcs	r6, r6, r2
 80008ea:	4675      	movcs	r5, lr
 80008ec:	ea40 000c 	orrcs.w	r0, r0, ip
 80008f0:	085b      	lsrs	r3, r3, #1
 80008f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008f6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008fa:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008fe:	bf22      	ittt	cs
 8000900:	1ab6      	subcs	r6, r6, r2
 8000902:	4675      	movcs	r5, lr
 8000904:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000908:	085b      	lsrs	r3, r3, #1
 800090a:	ea4f 0232 	mov.w	r2, r2, rrx
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000920:	085b      	lsrs	r3, r3, #1
 8000922:	ea4f 0232 	mov.w	r2, r2, rrx
 8000926:	ebb6 0e02 	subs.w	lr, r6, r2
 800092a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092e:	bf22      	ittt	cs
 8000930:	1ab6      	subcs	r6, r6, r2
 8000932:	4675      	movcs	r5, lr
 8000934:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000938:	ea55 0e06 	orrs.w	lr, r5, r6
 800093c:	d018      	beq.n	8000970 <__aeabi_ddiv+0x114>
 800093e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000942:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000946:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800094a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800094e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000952:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000956:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800095a:	d1c0      	bne.n	80008de <__aeabi_ddiv+0x82>
 800095c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000960:	d10b      	bne.n	800097a <__aeabi_ddiv+0x11e>
 8000962:	ea41 0100 	orr.w	r1, r1, r0
 8000966:	f04f 0000 	mov.w	r0, #0
 800096a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800096e:	e7b6      	b.n	80008de <__aeabi_ddiv+0x82>
 8000970:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000974:	bf04      	itt	eq
 8000976:	4301      	orreq	r1, r0
 8000978:	2000      	moveq	r0, #0
 800097a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800097e:	bf88      	it	hi
 8000980:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000984:	f63f aeaf 	bhi.w	80006e6 <__aeabi_dmul+0xde>
 8000988:	ebb5 0c03 	subs.w	ip, r5, r3
 800098c:	bf04      	itt	eq
 800098e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000992:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000996:	f150 0000 	adcs.w	r0, r0, #0
 800099a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800099e:	bd70      	pop	{r4, r5, r6, pc}
 80009a0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009a4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009a8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009ac:	bfc2      	ittt	gt
 80009ae:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009b2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009b6:	bd70      	popgt	{r4, r5, r6, pc}
 80009b8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009bc:	f04f 0e00 	mov.w	lr, #0
 80009c0:	3c01      	subs	r4, #1
 80009c2:	e690      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009c4:	ea45 0e06 	orr.w	lr, r5, r6
 80009c8:	e68d      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009ca:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009ce:	ea94 0f0c 	teq	r4, ip
 80009d2:	bf08      	it	eq
 80009d4:	ea95 0f0c 	teqeq	r5, ip
 80009d8:	f43f af3b 	beq.w	8000852 <__aeabi_dmul+0x24a>
 80009dc:	ea94 0f0c 	teq	r4, ip
 80009e0:	d10a      	bne.n	80009f8 <__aeabi_ddiv+0x19c>
 80009e2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009e6:	f47f af34 	bne.w	8000852 <__aeabi_dmul+0x24a>
 80009ea:	ea95 0f0c 	teq	r5, ip
 80009ee:	f47f af25 	bne.w	800083c <__aeabi_dmul+0x234>
 80009f2:	4610      	mov	r0, r2
 80009f4:	4619      	mov	r1, r3
 80009f6:	e72c      	b.n	8000852 <__aeabi_dmul+0x24a>
 80009f8:	ea95 0f0c 	teq	r5, ip
 80009fc:	d106      	bne.n	8000a0c <__aeabi_ddiv+0x1b0>
 80009fe:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a02:	f43f aefd 	beq.w	8000800 <__aeabi_dmul+0x1f8>
 8000a06:	4610      	mov	r0, r2
 8000a08:	4619      	mov	r1, r3
 8000a0a:	e722      	b.n	8000852 <__aeabi_dmul+0x24a>
 8000a0c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a10:	bf18      	it	ne
 8000a12:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a16:	f47f aec5 	bne.w	80007a4 <__aeabi_dmul+0x19c>
 8000a1a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a1e:	f47f af0d 	bne.w	800083c <__aeabi_dmul+0x234>
 8000a22:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a26:	f47f aeeb 	bne.w	8000800 <__aeabi_dmul+0x1f8>
 8000a2a:	e712      	b.n	8000852 <__aeabi_dmul+0x24a>

08000a2c <__gedf2>:
 8000a2c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a30:	e006      	b.n	8000a40 <__cmpdf2+0x4>
 8000a32:	bf00      	nop

08000a34 <__ledf2>:
 8000a34:	f04f 0c01 	mov.w	ip, #1
 8000a38:	e002      	b.n	8000a40 <__cmpdf2+0x4>
 8000a3a:	bf00      	nop

08000a3c <__cmpdf2>:
 8000a3c:	f04f 0c01 	mov.w	ip, #1
 8000a40:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a44:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a48:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a50:	bf18      	it	ne
 8000a52:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a56:	d01b      	beq.n	8000a90 <__cmpdf2+0x54>
 8000a58:	b001      	add	sp, #4
 8000a5a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a5e:	bf0c      	ite	eq
 8000a60:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a64:	ea91 0f03 	teqne	r1, r3
 8000a68:	bf02      	ittt	eq
 8000a6a:	ea90 0f02 	teqeq	r0, r2
 8000a6e:	2000      	moveq	r0, #0
 8000a70:	4770      	bxeq	lr
 8000a72:	f110 0f00 	cmn.w	r0, #0
 8000a76:	ea91 0f03 	teq	r1, r3
 8000a7a:	bf58      	it	pl
 8000a7c:	4299      	cmppl	r1, r3
 8000a7e:	bf08      	it	eq
 8000a80:	4290      	cmpeq	r0, r2
 8000a82:	bf2c      	ite	cs
 8000a84:	17d8      	asrcs	r0, r3, #31
 8000a86:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a8a:	f040 0001 	orr.w	r0, r0, #1
 8000a8e:	4770      	bx	lr
 8000a90:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a98:	d102      	bne.n	8000aa0 <__cmpdf2+0x64>
 8000a9a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a9e:	d107      	bne.n	8000ab0 <__cmpdf2+0x74>
 8000aa0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000aa4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000aa8:	d1d6      	bne.n	8000a58 <__cmpdf2+0x1c>
 8000aaa:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000aae:	d0d3      	beq.n	8000a58 <__cmpdf2+0x1c>
 8000ab0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ab4:	4770      	bx	lr
 8000ab6:	bf00      	nop

08000ab8 <__aeabi_cdrcmple>:
 8000ab8:	4684      	mov	ip, r0
 8000aba:	4610      	mov	r0, r2
 8000abc:	4662      	mov	r2, ip
 8000abe:	468c      	mov	ip, r1
 8000ac0:	4619      	mov	r1, r3
 8000ac2:	4663      	mov	r3, ip
 8000ac4:	e000      	b.n	8000ac8 <__aeabi_cdcmpeq>
 8000ac6:	bf00      	nop

08000ac8 <__aeabi_cdcmpeq>:
 8000ac8:	b501      	push	{r0, lr}
 8000aca:	f7ff ffb7 	bl	8000a3c <__cmpdf2>
 8000ace:	2800      	cmp	r0, #0
 8000ad0:	bf48      	it	mi
 8000ad2:	f110 0f00 	cmnmi.w	r0, #0
 8000ad6:	bd01      	pop	{r0, pc}

08000ad8 <__aeabi_dcmpeq>:
 8000ad8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000adc:	f7ff fff4 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000ae0:	bf0c      	ite	eq
 8000ae2:	2001      	moveq	r0, #1
 8000ae4:	2000      	movne	r0, #0
 8000ae6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aea:	bf00      	nop

08000aec <__aeabi_dcmplt>:
 8000aec:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000af0:	f7ff ffea 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000af4:	bf34      	ite	cc
 8000af6:	2001      	movcc	r0, #1
 8000af8:	2000      	movcs	r0, #0
 8000afa:	f85d fb08 	ldr.w	pc, [sp], #8
 8000afe:	bf00      	nop

08000b00 <__aeabi_dcmple>:
 8000b00:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b04:	f7ff ffe0 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000b08:	bf94      	ite	ls
 8000b0a:	2001      	movls	r0, #1
 8000b0c:	2000      	movhi	r0, #0
 8000b0e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b12:	bf00      	nop

08000b14 <__aeabi_dcmpge>:
 8000b14:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b18:	f7ff ffce 	bl	8000ab8 <__aeabi_cdrcmple>
 8000b1c:	bf94      	ite	ls
 8000b1e:	2001      	movls	r0, #1
 8000b20:	2000      	movhi	r0, #0
 8000b22:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b26:	bf00      	nop

08000b28 <__aeabi_dcmpgt>:
 8000b28:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b2c:	f7ff ffc4 	bl	8000ab8 <__aeabi_cdrcmple>
 8000b30:	bf34      	ite	cc
 8000b32:	2001      	movcc	r0, #1
 8000b34:	2000      	movcs	r0, #0
 8000b36:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b3a:	bf00      	nop

08000b3c <__aeabi_dcmpun>:
 8000b3c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b44:	d102      	bne.n	8000b4c <__aeabi_dcmpun+0x10>
 8000b46:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b4a:	d10a      	bne.n	8000b62 <__aeabi_dcmpun+0x26>
 8000b4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b50:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b54:	d102      	bne.n	8000b5c <__aeabi_dcmpun+0x20>
 8000b56:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b5a:	d102      	bne.n	8000b62 <__aeabi_dcmpun+0x26>
 8000b5c:	f04f 0000 	mov.w	r0, #0
 8000b60:	4770      	bx	lr
 8000b62:	f04f 0001 	mov.w	r0, #1
 8000b66:	4770      	bx	lr

08000b68 <__aeabi_d2iz>:
 8000b68:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b6c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b70:	d215      	bcs.n	8000b9e <__aeabi_d2iz+0x36>
 8000b72:	d511      	bpl.n	8000b98 <__aeabi_d2iz+0x30>
 8000b74:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b78:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b7c:	d912      	bls.n	8000ba4 <__aeabi_d2iz+0x3c>
 8000b7e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b82:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b86:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b8a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000b8e:	fa23 f002 	lsr.w	r0, r3, r2
 8000b92:	bf18      	it	ne
 8000b94:	4240      	negne	r0, r0
 8000b96:	4770      	bx	lr
 8000b98:	f04f 0000 	mov.w	r0, #0
 8000b9c:	4770      	bx	lr
 8000b9e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000ba2:	d105      	bne.n	8000bb0 <__aeabi_d2iz+0x48>
 8000ba4:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000ba8:	bf08      	it	eq
 8000baa:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000bae:	4770      	bx	lr
 8000bb0:	f04f 0000 	mov.w	r0, #0
 8000bb4:	4770      	bx	lr
 8000bb6:	bf00      	nop

08000bb8 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8000bb8:	b480      	push	{r7}
 8000bba:	b083      	sub	sp, #12
 8000bbc:	af00      	add	r7, sp, #0
 8000bbe:	4603      	mov	r3, r0
 8000bc0:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8000bc2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000bc6:	2b00      	cmp	r3, #0
 8000bc8:	db0b      	blt.n	8000be2 <__NVIC_EnableIRQ+0x2a>
  {
    __COMPILER_BARRIER();
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000bca:	79fb      	ldrb	r3, [r7, #7]
 8000bcc:	f003 021f 	and.w	r2, r3, #31
 8000bd0:	4907      	ldr	r1, [pc, #28]	; (8000bf0 <__NVIC_EnableIRQ+0x38>)
 8000bd2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000bd6:	095b      	lsrs	r3, r3, #5
 8000bd8:	2001      	movs	r0, #1
 8000bda:	fa00 f202 	lsl.w	r2, r0, r2
 8000bde:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
    __COMPILER_BARRIER();
  }
}
 8000be2:	bf00      	nop
 8000be4:	370c      	adds	r7, #12
 8000be6:	46bd      	mov	sp, r7
 8000be8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000bec:	4770      	bx	lr
 8000bee:	bf00      	nop
 8000bf0:	e000e100 	.word	0xe000e100

08000bf4 <__NVIC_ClearPendingIRQ>:
  \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
 8000bf4:	b480      	push	{r7}
 8000bf6:	b083      	sub	sp, #12
 8000bf8:	af00      	add	r7, sp, #0
 8000bfa:	4603      	mov	r3, r0
 8000bfc:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8000bfe:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000c02:	2b00      	cmp	r3, #0
 8000c04:	db0c      	blt.n	8000c20 <__NVIC_ClearPendingIRQ+0x2c>
  {
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000c06:	79fb      	ldrb	r3, [r7, #7]
 8000c08:	f003 021f 	and.w	r2, r3, #31
 8000c0c:	4907      	ldr	r1, [pc, #28]	; (8000c2c <__NVIC_ClearPendingIRQ+0x38>)
 8000c0e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000c12:	095b      	lsrs	r3, r3, #5
 8000c14:	2001      	movs	r0, #1
 8000c16:	fa00 f202 	lsl.w	r2, r0, r2
 8000c1a:	3360      	adds	r3, #96	; 0x60
 8000c1c:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  }
}
 8000c20:	bf00      	nop
 8000c22:	370c      	adds	r7, #12
 8000c24:	46bd      	mov	sp, r7
 8000c26:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000c2a:	4770      	bx	lr
 8000c2c:	e000e100 	.word	0xe000e100

08000c30 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8000c30:	b480      	push	{r7}
 8000c32:	b083      	sub	sp, #12
 8000c34:	af00      	add	r7, sp, #0
 8000c36:	4603      	mov	r3, r0
 8000c38:	6039      	str	r1, [r7, #0]
 8000c3a:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8000c3c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000c40:	2b00      	cmp	r3, #0
 8000c42:	db0a      	blt.n	8000c5a <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8000c44:	683b      	ldr	r3, [r7, #0]
 8000c46:	b2da      	uxtb	r2, r3
 8000c48:	490c      	ldr	r1, [pc, #48]	; (8000c7c <__NVIC_SetPriority+0x4c>)
 8000c4a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000c4e:	0112      	lsls	r2, r2, #4
 8000c50:	b2d2      	uxtb	r2, r2
 8000c52:	440b      	add	r3, r1
 8000c54:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 8000c58:	e00a      	b.n	8000c70 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8000c5a:	683b      	ldr	r3, [r7, #0]
 8000c5c:	b2da      	uxtb	r2, r3
 8000c5e:	4908      	ldr	r1, [pc, #32]	; (8000c80 <__NVIC_SetPriority+0x50>)
 8000c60:	79fb      	ldrb	r3, [r7, #7]
 8000c62:	f003 030f 	and.w	r3, r3, #15
 8000c66:	3b04      	subs	r3, #4
 8000c68:	0112      	lsls	r2, r2, #4
 8000c6a:	b2d2      	uxtb	r2, r2
 8000c6c:	440b      	add	r3, r1
 8000c6e:	761a      	strb	r2, [r3, #24]
}
 8000c70:	bf00      	nop
 8000c72:	370c      	adds	r7, #12
 8000c74:	46bd      	mov	sp, r7
 8000c76:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000c7a:	4770      	bx	lr
 8000c7c:	e000e100 	.word	0xe000e100
 8000c80:	e000ed00 	.word	0xe000ed00

08000c84 <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 8000c84:	b580      	push	{r7, lr}
 8000c86:	b082      	sub	sp, #8
 8000c88:	af00      	add	r7, sp, #0
 8000c8a:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8000c8c:	687b      	ldr	r3, [r7, #4]
 8000c8e:	3b01      	subs	r3, #1
 8000c90:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8000c94:	d301      	bcc.n	8000c9a <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
 8000c96:	2301      	movs	r3, #1
 8000c98:	e00f      	b.n	8000cba <SysTick_Config+0x36>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8000c9a:	4a0a      	ldr	r2, [pc, #40]	; (8000cc4 <SysTick_Config+0x40>)
 8000c9c:	687b      	ldr	r3, [r7, #4]
 8000c9e:	3b01      	subs	r3, #1
 8000ca0:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 8000ca2:	210f      	movs	r1, #15
 8000ca4:	f04f 30ff 	mov.w	r0, #4294967295
 8000ca8:	f7ff ffc2 	bl	8000c30 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8000cac:	4b05      	ldr	r3, [pc, #20]	; (8000cc4 <SysTick_Config+0x40>)
 8000cae:	2200      	movs	r2, #0
 8000cb0:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8000cb2:	4b04      	ldr	r3, [pc, #16]	; (8000cc4 <SysTick_Config+0x40>)
 8000cb4:	2207      	movs	r2, #7
 8000cb6:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 8000cb8:	2300      	movs	r3, #0
}
 8000cba:	4618      	mov	r0, r3
 8000cbc:	3708      	adds	r7, #8
 8000cbe:	46bd      	mov	sp, r7
 8000cc0:	bd80      	pop	{r7, pc}
 8000cc2:	bf00      	nop
 8000cc4:	e000e010 	.word	0xe000e010

08000cc8 <ITM_SendChar>:
           \li Is blocking when a debugger is connected, but the previous character sent has not been transmitted.
  \param [in]     ch  Character to transmit.
  \returns            Character to transmit.
 */
__STATIC_INLINE uint32_t ITM_SendChar (uint32_t ch)
{
 8000cc8:	b480      	push	{r7}
 8000cca:	b083      	sub	sp, #12
 8000ccc:	af00      	add	r7, sp, #0
 8000cce:	6078      	str	r0, [r7, #4]
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 8000cd0:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 8000cd4:	f8d3 3e80 	ldr.w	r3, [r3, #3712]	; 0xe80
 8000cd8:	f003 0301 	and.w	r3, r3, #1
 8000cdc:	2b00      	cmp	r3, #0
 8000cde:	d013      	beq.n	8000d08 <ITM_SendChar+0x40>
      ((ITM->TER & 1UL               ) != 0UL)   )     /* ITM Port #0 enabled */
 8000ce0:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 8000ce4:	f8d3 3e00 	ldr.w	r3, [r3, #3584]	; 0xe00
 8000ce8:	f003 0301 	and.w	r3, r3, #1
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 8000cec:	2b00      	cmp	r3, #0
 8000cee:	d00b      	beq.n	8000d08 <ITM_SendChar+0x40>
  {
    while (ITM->PORT[0U].u32 == 0UL)
 8000cf0:	e000      	b.n	8000cf4 <ITM_SendChar+0x2c>
    {
      __NOP();
 8000cf2:	bf00      	nop
    while (ITM->PORT[0U].u32 == 0UL)
 8000cf4:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 8000cf8:	681b      	ldr	r3, [r3, #0]
 8000cfa:	2b00      	cmp	r3, #0
 8000cfc:	d0f9      	beq.n	8000cf2 <ITM_SendChar+0x2a>
    }
    ITM->PORT[0U].u8 = (uint8_t)ch;
 8000cfe:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 8000d02:	687a      	ldr	r2, [r7, #4]
 8000d04:	b2d2      	uxtb	r2, r2
 8000d06:	701a      	strb	r2, [r3, #0]
  }
  return (ch);
 8000d08:	687b      	ldr	r3, [r7, #4]
}
 8000d0a:	4618      	mov	r0, r3
 8000d0c:	370c      	adds	r7, #12
 8000d0e:	46bd      	mov	sp, r7
 8000d10:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d14:	4770      	bx	lr

08000d16 <main>:
uint8_t button_read(uint8_t current);
uint16_t ADC_getData(uint8_t ch);
uint32_t getTicks();
void USART2_IRQHandler(void);

int main(void){
 8000d16:	b580      	push	{r7, lr}
 8000d18:	af00      	add	r7, sp, #0
	//Setup
	//PLL_Config(); //48MHz
	GPIO_Config();
 8000d1a:	f000 f80b 	bl	8000d34 <GPIO_Config>
	SysTick_Config(16000);
 8000d1e:	f44f 507a 	mov.w	r0, #16000	; 0x3e80
 8000d22:	f7ff ffaf 	bl	8000c84 <SysTick_Config>
	USART2_Config();
 8000d26:	f000 f873 	bl	8000e10 <USART2_Config>
	Timer5_Config();
 8000d2a:	f000 f8e3 	bl	8000ef4 <Timer5_Config>
	ADC_Config();
 8000d2e:	f000 f911 	bl	8000f54 <ADC_Config>

	//Loop
	for(;;){
 8000d32:	e7fe      	b.n	8000d32 <main+0x1c>

08000d34 <GPIO_Config>:
	printf("Hola Mundo desde STM32 Cortex M4\r\n");
	printf("Yafhers Mendoza C.\r\n");
	printf("%s  %s\r\n",__TIME__,__DATE__);
}

void GPIO_Config(void){
 8000d34:	b480      	push	{r7}
 8000d36:	af00      	add	r7, sp, #0
	//Outputs: PA9 (Verde), PA8 (Azul), PB6 (Rojo), PB5 (Naranja), PB4 (Buzzer), PA5 (Led Interno)
	//Inputs: PC3 (Down), PC2 (Up), PC13 (Boton Interno)

	//1. Habilitamos el reloj del GPIOA, GPIOB, GPIOC (en las STM32F4 GPIO esta en AHB1)
	RCC -> AHB1ENR |= RCC_AHB1ENR_GPIOAEN | RCC_AHB1ENR_GPIOBEN | RCC_AHB1ENR_GPIOCEN;
 8000d38:	4b31      	ldr	r3, [pc, #196]	; (8000e00 <GPIO_Config+0xcc>)
 8000d3a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000d3c:	4a30      	ldr	r2, [pc, #192]	; (8000e00 <GPIO_Config+0xcc>)
 8000d3e:	f043 0307 	orr.w	r3, r3, #7
 8000d42:	6313      	str	r3, [r2, #48]	; 0x30

	//2. Configuramos el modo del pin
	//Outputs
	GPIOA -> MODER &=~ (GPIO_MODER_MODE8 | GPIO_MODER_MODE9 | GPIO_MODER_MODE5);						//restablecer el modo del pin PA8, PA9, PA5
 8000d44:	4b2f      	ldr	r3, [pc, #188]	; (8000e04 <GPIO_Config+0xd0>)
 8000d46:	681b      	ldr	r3, [r3, #0]
 8000d48:	4a2e      	ldr	r2, [pc, #184]	; (8000e04 <GPIO_Config+0xd0>)
 8000d4a:	f423 2370 	bic.w	r3, r3, #983040	; 0xf0000
 8000d4e:	f423 6340 	bic.w	r3, r3, #3072	; 0xc00
 8000d52:	6013      	str	r3, [r2, #0]
	GPIOB -> MODER &=~ (GPIO_MODER_MODE6 | GPIO_MODER_MODE4 | GPIO_MODER_MODE5);						//restablecer el modo del pin PB6, PB4 y PB5
 8000d54:	4b2c      	ldr	r3, [pc, #176]	; (8000e08 <GPIO_Config+0xd4>)
 8000d56:	681b      	ldr	r3, [r3, #0]
 8000d58:	4a2b      	ldr	r2, [pc, #172]	; (8000e08 <GPIO_Config+0xd4>)
 8000d5a:	f423 537c 	bic.w	r3, r3, #16128	; 0x3f00
 8000d5e:	6013      	str	r3, [r2, #0]
	GPIOA -> MODER |= (GPIO_MODER_MODE8_0 | GPIO_MODER_MODE9_0 | GPIO_MODER_MODE5_0);					//PA8, PA9 y PA5 salida
 8000d60:	4b28      	ldr	r3, [pc, #160]	; (8000e04 <GPIO_Config+0xd0>)
 8000d62:	681b      	ldr	r3, [r3, #0]
 8000d64:	4a27      	ldr	r2, [pc, #156]	; (8000e04 <GPIO_Config+0xd0>)
 8000d66:	f443 23a0 	orr.w	r3, r3, #327680	; 0x50000
 8000d6a:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8000d6e:	6013      	str	r3, [r2, #0]
	GPIOB -> MODER |= (GPIO_MODER_MODE6_0 |  GPIO_MODER_MODE4_0 | GPIO_MODER_MODE5_0);					//PB6, PB4 y PB5 salida
 8000d70:	4b25      	ldr	r3, [pc, #148]	; (8000e08 <GPIO_Config+0xd4>)
 8000d72:	681b      	ldr	r3, [r3, #0]
 8000d74:	4a24      	ldr	r2, [pc, #144]	; (8000e08 <GPIO_Config+0xd4>)
 8000d76:	f443 53a8 	orr.w	r3, r3, #5376	; 0x1500
 8000d7a:	6013      	str	r3, [r2, #0]

	//Inputs
	GPIOC -> MODER &=~ (GPIO_MODER_MODE2 | GPIO_MODER_MODE3 | GPIO_MODER_MODE13);						//restablecer el modo del pin PC2, PC3 y PC13 y ponerlo como entrada
 8000d7c:	4b23      	ldr	r3, [pc, #140]	; (8000e0c <GPIO_Config+0xd8>)
 8000d7e:	681b      	ldr	r3, [r3, #0]
 8000d80:	4a22      	ldr	r2, [pc, #136]	; (8000e0c <GPIO_Config+0xd8>)
 8000d82:	f023 6340 	bic.w	r3, r3, #201326592	; 0xc000000
 8000d86:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8000d8a:	6013      	str	r3, [r2, #0]

	//3. Definimos el tipo de salida
	GPIOA -> OTYPER &=~ (GPIO_OTYPER_OT8 | GPIO_OTYPER_OT9  |GPIO_OTYPER_OT5);							//PA2, PA3, PA5 modo push pull
 8000d8c:	4b1d      	ldr	r3, [pc, #116]	; (8000e04 <GPIO_Config+0xd0>)
 8000d8e:	685b      	ldr	r3, [r3, #4]
 8000d90:	4a1c      	ldr	r2, [pc, #112]	; (8000e04 <GPIO_Config+0xd0>)
 8000d92:	f423 7348 	bic.w	r3, r3, #800	; 0x320
 8000d96:	6053      	str	r3, [r2, #4]
	GPIOB -> OTYPER &=~ (GPIO_OTYPER_OT6 | GPIO_OTYPER_OT5 | GPIO_OTYPER_OT4);							//PB3, PB4, PB5 modo push pull
 8000d98:	4b1b      	ldr	r3, [pc, #108]	; (8000e08 <GPIO_Config+0xd4>)
 8000d9a:	685b      	ldr	r3, [r3, #4]
 8000d9c:	4a1a      	ldr	r2, [pc, #104]	; (8000e08 <GPIO_Config+0xd4>)
 8000d9e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8000da2:	6053      	str	r3, [r2, #4]
	//no toco nada del PC13, PC3 y PC2 pues no es necesario configurar modo ya que son entradas

	//4. Configurar la velocidad de conmutacion
	GPIOA -> OSPEEDR |= GPIO_OSPEEDER_OSPEEDR8 | GPIO_OSPEEDER_OSPEEDR9 | GPIO_OSPEEDER_OSPEEDR5;		//PA2, PA3 y PA5 very high speed
 8000da4:	4b17      	ldr	r3, [pc, #92]	; (8000e04 <GPIO_Config+0xd0>)
 8000da6:	689b      	ldr	r3, [r3, #8]
 8000da8:	4a16      	ldr	r2, [pc, #88]	; (8000e04 <GPIO_Config+0xd0>)
 8000daa:	f443 2370 	orr.w	r3, r3, #983040	; 0xf0000
 8000dae:	f443 6340 	orr.w	r3, r3, #3072	; 0xc00
 8000db2:	6093      	str	r3, [r2, #8]
	GPIOB -> OSPEEDR |= GPIO_OSPEEDER_OSPEEDR6 | GPIO_OSPEEDER_OSPEEDR5 | GPIO_OSPEEDER_OSPEEDR4;		//PB3, PB4 y PB5 very high speed
 8000db4:	4b14      	ldr	r3, [pc, #80]	; (8000e08 <GPIO_Config+0xd4>)
 8000db6:	689b      	ldr	r3, [r3, #8]
 8000db8:	4a13      	ldr	r2, [pc, #76]	; (8000e08 <GPIO_Config+0xd4>)
 8000dba:	f443 537c 	orr.w	r3, r3, #16128	; 0x3f00
 8000dbe:	6093      	str	r3, [r2, #8]
	//no toco nada del PC13, PC3 y PC2 pues no es necesario configurar modo ya que son entradas

	//5. Configurar la resistencia Pull Up / Pull Down
	GPIOA -> PUPDR &=~ (GPIO_PUPDR_PUPD8 | GPIO_PUPDR_PUPD9 | GPIO_PUPDR_PUPD5);						//PA5, PA8 y PA9 sin resistencia
 8000dc0:	4b10      	ldr	r3, [pc, #64]	; (8000e04 <GPIO_Config+0xd0>)
 8000dc2:	68db      	ldr	r3, [r3, #12]
 8000dc4:	4a0f      	ldr	r2, [pc, #60]	; (8000e04 <GPIO_Config+0xd0>)
 8000dc6:	f423 2370 	bic.w	r3, r3, #983040	; 0xf0000
 8000dca:	f423 6340 	bic.w	r3, r3, #3072	; 0xc00
 8000dce:	60d3      	str	r3, [r2, #12]
	GPIOB -> PUPDR &=~ (GPIO_PUPDR_PUPD6 | GPIO_PUPDR_PUPD4 | GPIO_PUPDR_PUPD5);						//PB4, PB5 y PB6 sin resistencia
 8000dd0:	4b0d      	ldr	r3, [pc, #52]	; (8000e08 <GPIO_Config+0xd4>)
 8000dd2:	68db      	ldr	r3, [r3, #12]
 8000dd4:	4a0c      	ldr	r2, [pc, #48]	; (8000e08 <GPIO_Config+0xd4>)
 8000dd6:	f423 537c 	bic.w	r3, r3, #16128	; 0x3f00
 8000dda:	60d3      	str	r3, [r2, #12]
	GPIOC -> PUPDR &=~ GPIO_PUPDR_PUPD13;																//PC13 sin resistencia
 8000ddc:	4b0b      	ldr	r3, [pc, #44]	; (8000e0c <GPIO_Config+0xd8>)
 8000dde:	68db      	ldr	r3, [r3, #12]
 8000de0:	4a0a      	ldr	r2, [pc, #40]	; (8000e0c <GPIO_Config+0xd8>)
 8000de2:	f023 6340 	bic.w	r3, r3, #201326592	; 0xc000000
 8000de6:	60d3      	str	r3, [r2, #12]
	GPIOC -> PUPDR |= GPIO_PUPDR_PUPD2 | GPIO_PUPDR_PUPD3;												//PC2 y PC3 pull up
 8000de8:	4b08      	ldr	r3, [pc, #32]	; (8000e0c <GPIO_Config+0xd8>)
 8000dea:	68db      	ldr	r3, [r3, #12]
 8000dec:	4a07      	ldr	r2, [pc, #28]	; (8000e0c <GPIO_Config+0xd8>)
 8000dee:	f043 03f0 	orr.w	r3, r3, #240	; 0xf0
 8000df2:	60d3      	str	r3, [r2, #12]
}
 8000df4:	bf00      	nop
 8000df6:	46bd      	mov	sp, r7
 8000df8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000dfc:	4770      	bx	lr
 8000dfe:	bf00      	nop
 8000e00:	40023800 	.word	0x40023800
 8000e04:	40020000 	.word	0x40020000
 8000e08:	40020400 	.word	0x40020400
 8000e0c:	40020800 	.word	0x40020800

08000e10 <USART2_Config>:
	while(!(RCC -> CFGR & RCC_CFGR_SWS_PLL));															//espero que se active PLL
	SystemCoreClockUpdate();																			//actualizar el reloj
	return;
}

void USART2_Config(void){
 8000e10:	b580      	push	{r7, lr}
 8000e12:	af00      	add	r7, sp, #0
	//1. Configuramos los pines RX y TX 	PA2 -> TX,	PA3 -> RX
	RCC -> AHB1ENR |= RCC_AHB1ENR_GPIOAEN;																//habilito el reloj del GPIOA
 8000e14:	4b27      	ldr	r3, [pc, #156]	; (8000eb4 <USART2_Config+0xa4>)
 8000e16:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000e18:	4a26      	ldr	r2, [pc, #152]	; (8000eb4 <USART2_Config+0xa4>)
 8000e1a:	f043 0301 	orr.w	r3, r3, #1
 8000e1e:	6313      	str	r3, [r2, #48]	; 0x30
	GPIOA -> MODER &=~ (GPIO_MODER_MODE2 | GPIO_MODER_MODE3);											//lipiamos el registro MODER
 8000e20:	4b25      	ldr	r3, [pc, #148]	; (8000eb8 <USART2_Config+0xa8>)
 8000e22:	681b      	ldr	r3, [r3, #0]
 8000e24:	4a24      	ldr	r2, [pc, #144]	; (8000eb8 <USART2_Config+0xa8>)
 8000e26:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8000e2a:	6013      	str	r3, [r2, #0]
	GPIOA -> MODER |= GPIO_MODER_MODE2_1 | GPIO_MODER_MODE3_1;											//establezco el modo alternativo del PA2 y PA3
 8000e2c:	4b22      	ldr	r3, [pc, #136]	; (8000eb8 <USART2_Config+0xa8>)
 8000e2e:	681b      	ldr	r3, [r3, #0]
 8000e30:	4a21      	ldr	r2, [pc, #132]	; (8000eb8 <USART2_Config+0xa8>)
 8000e32:	f043 03a0 	orr.w	r3, r3, #160	; 0xa0
 8000e36:	6013      	str	r3, [r2, #0]
	GPIOA -> OSPEEDR |= GPIO_OSPEEDER_OSPEEDR2 | GPIO_OSPEEDER_OSPEEDR3;								//establezco PA2 y PA3 a la maxima velocidad
 8000e38:	4b1f      	ldr	r3, [pc, #124]	; (8000eb8 <USART2_Config+0xa8>)
 8000e3a:	689b      	ldr	r3, [r3, #8]
 8000e3c:	4a1e      	ldr	r2, [pc, #120]	; (8000eb8 <USART2_Config+0xa8>)
 8000e3e:	f043 03f0 	orr.w	r3, r3, #240	; 0xf0
 8000e42:	6093      	str	r3, [r2, #8]
	GPIOA -> AFR[0] &=~ (GPIO_AFRL_AFRL2 | GPIO_AFRL_AFRL3);											//limpiamos el AFRL del PA2 y PA3, usamos el 0 ya que el UART2 esta del 0 al 7
 8000e44:	4b1c      	ldr	r3, [pc, #112]	; (8000eb8 <USART2_Config+0xa8>)
 8000e46:	6a1b      	ldr	r3, [r3, #32]
 8000e48:	4a1b      	ldr	r2, [pc, #108]	; (8000eb8 <USART2_Config+0xa8>)
 8000e4a:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8000e4e:	6213      	str	r3, [r2, #32]
	GPIOA -> AFR[0] |= 0x7 << GPIO_AFRL_AFSEL2_Pos | 0x7 << GPIO_AFRL_AFSEL3_Pos;						//asigno la funcion alternativa #7 (USART2) para el PA2 y PA3
 8000e50:	4b19      	ldr	r3, [pc, #100]	; (8000eb8 <USART2_Config+0xa8>)
 8000e52:	6a1b      	ldr	r3, [r3, #32]
 8000e54:	4a18      	ldr	r2, [pc, #96]	; (8000eb8 <USART2_Config+0xa8>)
 8000e56:	f443 43ee 	orr.w	r3, r3, #30464	; 0x7700
 8000e5a:	6213      	str	r3, [r2, #32]

	//2. Configuramos el USART2 (depende del dispositivo a trabajar)
	RCC -> APB1ENR |= RCC_APB1ENR_USART2EN;																//habilito el reloj del USART2
 8000e5c:	4b15      	ldr	r3, [pc, #84]	; (8000eb4 <USART2_Config+0xa4>)
 8000e5e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000e60:	4a14      	ldr	r2, [pc, #80]	; (8000eb4 <USART2_Config+0xa4>)
 8000e62:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8000e66:	6413      	str	r3, [r2, #64]	; 0x40
	USART2 -> CR1 = 0;																					//limpio registro CR1
 8000e68:	4b14      	ldr	r3, [pc, #80]	; (8000ebc <USART2_Config+0xac>)
 8000e6a:	2200      	movs	r2, #0
 8000e6c:	60da      	str	r2, [r3, #12]
	USART2 -> CR1 |= USART_CR1_TE | USART_CR1_RE;														//habilito transmisión y recepción
 8000e6e:	4b13      	ldr	r3, [pc, #76]	; (8000ebc <USART2_Config+0xac>)
 8000e70:	68db      	ldr	r3, [r3, #12]
 8000e72:	4a12      	ldr	r2, [pc, #72]	; (8000ebc <USART2_Config+0xac>)
 8000e74:	f043 030c 	orr.w	r3, r3, #12
 8000e78:	60d3      	str	r3, [r2, #12]
	 * parte entera: d104 = x68
	 * parte decimal: 0.166666 * 16 = d2.66665
	 * parte decimal (entero mas cercano) : d3 = x3
	 * USART_BRR = 0x683
	 */
	USART2 -> BRR = 0X683;																				//asigno el BRR previamente calculado
 8000e7a:	4b10      	ldr	r3, [pc, #64]	; (8000ebc <USART2_Config+0xac>)
 8000e7c:	f240 6283 	movw	r2, #1667	; 0x683
 8000e80:	609a      	str	r2, [r3, #8]
	USART2 -> CR1 |= USART_CR1_UE;																		//habilitar UART
 8000e82:	4b0e      	ldr	r3, [pc, #56]	; (8000ebc <USART2_Config+0xac>)
 8000e84:	68db      	ldr	r3, [r3, #12]
 8000e86:	4a0d      	ldr	r2, [pc, #52]	; (8000ebc <USART2_Config+0xac>)
 8000e88:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8000e8c:	60d3      	str	r3, [r2, #12]
	USART2 -> CR1 |= USART_CR1_RXNEIE;																	//habilito la interrupcion por recepcion
 8000e8e:	4b0b      	ldr	r3, [pc, #44]	; (8000ebc <USART2_Config+0xac>)
 8000e90:	68db      	ldr	r3, [r3, #12]
 8000e92:	4a0a      	ldr	r2, [pc, #40]	; (8000ebc <USART2_Config+0xac>)
 8000e94:	f043 0320 	orr.w	r3, r3, #32
 8000e98:	60d3      	str	r3, [r2, #12]
	NVIC_ClearPendingIRQ(USART2_IRQn);																	//limpiar bandera de interrupcion
 8000e9a:	2026      	movs	r0, #38	; 0x26
 8000e9c:	f7ff feaa 	bl	8000bf4 <__NVIC_ClearPendingIRQ>
	NVIC_SetPriority(USART2_IRQn, 2);																	//asignamos la prioridad
 8000ea0:	2102      	movs	r1, #2
 8000ea2:	2026      	movs	r0, #38	; 0x26
 8000ea4:	f7ff fec4 	bl	8000c30 <__NVIC_SetPriority>
	NVIC_EnableIRQ(USART2_IRQn);																		//habilito la IRQ de USART2 en la NVIC
 8000ea8:	2026      	movs	r0, #38	; 0x26
 8000eaa:	f7ff fe85 	bl	8000bb8 <__NVIC_EnableIRQ>
}
 8000eae:	bf00      	nop
 8000eb0:	bd80      	pop	{r7, pc}
 8000eb2:	bf00      	nop
 8000eb4:	40023800 	.word	0x40023800
 8000eb8:	40020000 	.word	0x40020000
 8000ebc:	40004400 	.word	0x40004400

08000ec0 <__io_putchar>:
	NVIC_ClearPendingIRQ(USART6_IRQn);																	//limpiar bandera de interrupcion
	NVIC_SetPriority(USART6_IRQn, 2);																	//asignamos la prioridad
	NVIC_EnableIRQ(USART6_IRQn);																		//habilito la IRQ de USART2 en la NVIC
}

int __io_putchar(int ch){
 8000ec0:	b580      	push	{r7, lr}
 8000ec2:	b082      	sub	sp, #8
 8000ec4:	af00      	add	r7, sp, #0
 8000ec6:	6078      	str	r0, [r7, #4]
	//Serial Wire Viewer ITM
	ITM_SendChar(ch);
 8000ec8:	687b      	ldr	r3, [r7, #4]
 8000eca:	4618      	mov	r0, r3
 8000ecc:	f7ff fefc 	bl	8000cc8 <ITM_SendChar>

	//UART
	while(!(USART2 -> SR & USART_SR_TXE));																//verifica que no hayas datos en el flag de transmision
 8000ed0:	bf00      	nop
 8000ed2:	4b07      	ldr	r3, [pc, #28]	; (8000ef0 <__io_putchar+0x30>)
 8000ed4:	681b      	ldr	r3, [r3, #0]
 8000ed6:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8000eda:	2b00      	cmp	r3, #0
 8000edc:	d0f9      	beq.n	8000ed2 <__io_putchar+0x12>
	USART2 -> DR = (uint8_t)(ch & 0xFF);																//escribo en el data register
 8000ede:	687b      	ldr	r3, [r7, #4]
 8000ee0:	b2da      	uxtb	r2, r3
 8000ee2:	4b03      	ldr	r3, [pc, #12]	; (8000ef0 <__io_putchar+0x30>)
 8000ee4:	605a      	str	r2, [r3, #4]
	return ch;																							//SR -> Status Register, DR -> Data Register
 8000ee6:	687b      	ldr	r3, [r7, #4]
}
 8000ee8:	4618      	mov	r0, r3
 8000eea:	3708      	adds	r7, #8
 8000eec:	46bd      	mov	sp, r7
 8000eee:	bd80      	pop	{r7, pc}
 8000ef0:	40004400 	.word	0x40004400

08000ef4 <Timer5_Config>:
		}
	}
	return 1;
}

void Timer5_Config(void){
 8000ef4:	b580      	push	{r7, lr}
 8000ef6:	af00      	add	r7, sp, #0
	//Configuraremos el Timer 5
	RCC -> APB1ENR |= RCC_APB1ENR_TIM5EN;																//habilito el reloj para el TIMER5
 8000ef8:	4b14      	ldr	r3, [pc, #80]	; (8000f4c <Timer5_Config+0x58>)
 8000efa:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000efc:	4a13      	ldr	r2, [pc, #76]	; (8000f4c <Timer5_Config+0x58>)
 8000efe:	f043 0308 	orr.w	r3, r3, #8
 8000f02:	6413      	str	r3, [r2, #64]	; 0x40
	//Update Event = 1s -> 1Hz	/	PCLK = 16MHz
	//ARR = (PCLK / (FREQ) * (PSC +1)) - 1
	//ARR = (16MHz / (1) * (1600)) - 1 = 9999
	TIM5 -> CR1 = 0;																					//limpio el registro CR1
 8000f04:	4b12      	ldr	r3, [pc, #72]	; (8000f50 <Timer5_Config+0x5c>)
 8000f06:	2200      	movs	r2, #0
 8000f08:	601a      	str	r2, [r3, #0]
	TIM5 -> PSC = 1600 -1;																				//establezco el prescaler
 8000f0a:	4b11      	ldr	r3, [pc, #68]	; (8000f50 <Timer5_Config+0x5c>)
 8000f0c:	f240 623f 	movw	r2, #1599	; 0x63f
 8000f10:	629a      	str	r2, [r3, #40]	; 0x28
	TIM5 -> ARR = 10000 - 1;																			//estalezco el ARR para una frecuencia de 1Hz
 8000f12:	4b0f      	ldr	r3, [pc, #60]	; (8000f50 <Timer5_Config+0x5c>)
 8000f14:	f242 720f 	movw	r2, #9999	; 0x270f
 8000f18:	62da      	str	r2, [r3, #44]	; 0x2c
	TIM5 -> DIER |= TIM_DIER_UIE;																		//activo la interrupcion del update interrupt
 8000f1a:	4b0d      	ldr	r3, [pc, #52]	; (8000f50 <Timer5_Config+0x5c>)
 8000f1c:	68db      	ldr	r3, [r3, #12]
 8000f1e:	4a0c      	ldr	r2, [pc, #48]	; (8000f50 <Timer5_Config+0x5c>)
 8000f20:	f043 0301 	orr.w	r3, r3, #1
 8000f24:	60d3      	str	r3, [r2, #12]
	NVIC_ClearPendingIRQ(TIM5_IRQn);																	//limpiar bandera de interrupcion
 8000f26:	2032      	movs	r0, #50	; 0x32
 8000f28:	f7ff fe64 	bl	8000bf4 <__NVIC_ClearPendingIRQ>
	NVIC_SetPriority(TIM5_IRQn, 2);																		//configurar prioridad
 8000f2c:	2102      	movs	r1, #2
 8000f2e:	2032      	movs	r0, #50	; 0x32
 8000f30:	f7ff fe7e 	bl	8000c30 <__NVIC_SetPriority>
	NVIC_EnableIRQ(TIM5_IRQn);																			//activar IRQ en la NVIC
 8000f34:	2032      	movs	r0, #50	; 0x32
 8000f36:	f7ff fe3f 	bl	8000bb8 <__NVIC_EnableIRQ>
	TIM5 -> CR1 |= TIM_CR1_CEN;																			//activo el contador
 8000f3a:	4b05      	ldr	r3, [pc, #20]	; (8000f50 <Timer5_Config+0x5c>)
 8000f3c:	681b      	ldr	r3, [r3, #0]
 8000f3e:	4a04      	ldr	r2, [pc, #16]	; (8000f50 <Timer5_Config+0x5c>)
 8000f40:	f043 0301 	orr.w	r3, r3, #1
 8000f44:	6013      	str	r3, [r2, #0]
}
 8000f46:	bf00      	nop
 8000f48:	bd80      	pop	{r7, pc}
 8000f4a:	bf00      	nop
 8000f4c:	40023800 	.word	0x40023800
 8000f50:	40000c00 	.word	0x40000c00

08000f54 <ADC_Config>:
	NVIC_SetPriority(TIM3_IRQn, 3);																		//configurar prioridad
	NVIC_EnableIRQ(TIM3_IRQn);																			//activar IRQ en la NVIC
	TIM3 -> CR1 |= TIM_CR1_CEN;																			//iniciar el conteo
}

void ADC_Config(void){
 8000f54:	b580      	push	{r7, lr}
 8000f56:	af00      	add	r7, sp, #0
	//1. Configuracion del pin PC4 -> ADC1_14
	RCC -> AHB1ENR |= RCC_AHB1ENR_GPIOCEN;																//activo el reloj del GPIOC
 8000f58:	4b44      	ldr	r3, [pc, #272]	; (800106c <ADC_Config+0x118>)
 8000f5a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000f5c:	4a43      	ldr	r2, [pc, #268]	; (800106c <ADC_Config+0x118>)
 8000f5e:	f043 0304 	orr.w	r3, r3, #4
 8000f62:	6313      	str	r3, [r2, #48]	; 0x30
	GPIOC -> MODER |= GPIO_MODER_MODE4;																	//selecciono el modo analogica del PC4
 8000f64:	4b42      	ldr	r3, [pc, #264]	; (8001070 <ADC_Config+0x11c>)
 8000f66:	681b      	ldr	r3, [r3, #0]
 8000f68:	4a41      	ldr	r2, [pc, #260]	; (8001070 <ADC_Config+0x11c>)
 8000f6a:	f443 7340 	orr.w	r3, r3, #768	; 0x300
 8000f6e:	6013      	str	r3, [r2, #0]
	GPIOC -> PUPDR |= GPIO_PUPDR_PUPD4;																	//desactivo las resistencias pull up / down
 8000f70:	4b3f      	ldr	r3, [pc, #252]	; (8001070 <ADC_Config+0x11c>)
 8000f72:	68db      	ldr	r3, [r3, #12]
 8000f74:	4a3e      	ldr	r2, [pc, #248]	; (8001070 <ADC_Config+0x11c>)
 8000f76:	f443 7340 	orr.w	r3, r3, #768	; 0x300
 8000f7a:	60d3      	str	r3, [r2, #12]

	//2. Configuracion del ADC (primero a los ADC comunes)
	RCC -> APB2ENR |= RCC_APB2ENR_ADC1EN;																//habilito el reloj del ADC1
 8000f7c:	4b3b      	ldr	r3, [pc, #236]	; (800106c <ADC_Config+0x118>)
 8000f7e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000f80:	4a3a      	ldr	r2, [pc, #232]	; (800106c <ADC_Config+0x118>)
 8000f82:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000f86:	6453      	str	r3, [r2, #68]	; 0x44
	ADC -> CCR &=~ ADC_CCR_ADCPRE;																		//prescaler desactivado
 8000f88:	4b3a      	ldr	r3, [pc, #232]	; (8001074 <ADC_Config+0x120>)
 8000f8a:	685b      	ldr	r3, [r3, #4]
 8000f8c:	4a39      	ldr	r2, [pc, #228]	; (8001074 <ADC_Config+0x120>)
 8000f8e:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8000f92:	6053      	str	r3, [r2, #4]
	ADC -> CCR |= ADC_CCR_TSVREFE;																		//habilito el sensor de temperatura interno
 8000f94:	4b37      	ldr	r3, [pc, #220]	; (8001074 <ADC_Config+0x120>)
 8000f96:	685b      	ldr	r3, [r3, #4]
 8000f98:	4a36      	ldr	r2, [pc, #216]	; (8001074 <ADC_Config+0x120>)
 8000f9a:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8000f9e:	6053      	str	r3, [r2, #4]

	//3. Configuracion del ADC1 (ahora a mi ADC1 en especifico)
	ADC1 -> CR1 = 0;																					//limpio el registro CR1 de mi ADC1
 8000fa0:	4b35      	ldr	r3, [pc, #212]	; (8001078 <ADC_Config+0x124>)
 8000fa2:	2200      	movs	r2, #0
 8000fa4:	605a      	str	r2, [r3, #4]
	ADC1 -> CR1 |= ADC_CR1_OVRIE;																		//habilito la IT para el overrun (sobreescritura de dato)
 8000fa6:	4b34      	ldr	r3, [pc, #208]	; (8001078 <ADC_Config+0x124>)
 8000fa8:	685b      	ldr	r3, [r3, #4]
 8000faa:	4a33      	ldr	r2, [pc, #204]	; (8001078 <ADC_Config+0x124>)
 8000fac:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8000fb0:	6053      	str	r3, [r2, #4]
	ADC1 -> CR1 &=~ ADC_CR1_RES;																		//resolucion de 12 bits
 8000fb2:	4b31      	ldr	r3, [pc, #196]	; (8001078 <ADC_Config+0x124>)
 8000fb4:	685b      	ldr	r3, [r3, #4]
 8000fb6:	4a30      	ldr	r2, [pc, #192]	; (8001078 <ADC_Config+0x124>)
 8000fb8:	f023 7340 	bic.w	r3, r3, #50331648	; 0x3000000
 8000fbc:	6053      	str	r3, [r2, #4]
	ADC1 -> CR1 |= ADC_CR1_EOCIE;																		//habilito la IT para el fin de conversion
 8000fbe:	4b2e      	ldr	r3, [pc, #184]	; (8001078 <ADC_Config+0x124>)
 8000fc0:	685b      	ldr	r3, [r3, #4]
 8000fc2:	4a2d      	ldr	r2, [pc, #180]	; (8001078 <ADC_Config+0x124>)
 8000fc4:	f043 0320 	orr.w	r3, r3, #32
 8000fc8:	6053      	str	r3, [r2, #4]
	ADC1 -> CR2 = 0;																					//limpio el registro CR2 de mi ADC1
 8000fca:	4b2b      	ldr	r3, [pc, #172]	; (8001078 <ADC_Config+0x124>)
 8000fcc:	2200      	movs	r2, #0
 8000fce:	609a      	str	r2, [r3, #8]

#if 1
	//4. Habilitar el disparo externo (DESACTIVAR PARA POLLING)
	ADC1 -> CR2 |= ADC_CR2_EXTEN_0;																		//activo el External Trigger por Rising
 8000fd0:	4b29      	ldr	r3, [pc, #164]	; (8001078 <ADC_Config+0x124>)
 8000fd2:	689b      	ldr	r3, [r3, #8]
 8000fd4:	4a28      	ldr	r2, [pc, #160]	; (8001078 <ADC_Config+0x124>)
 8000fd6:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8000fda:	6093      	str	r3, [r2, #8]
	ADC1 -> CR2 |= ADC_CR2_EXTSEL_3;																	//fuente de disparo: TIM3 TRGO (Update Event), TIM_CH es para un pin fisico
 8000fdc:	4b26      	ldr	r3, [pc, #152]	; (8001078 <ADC_Config+0x124>)
 8000fde:	689b      	ldr	r3, [r3, #8]
 8000fe0:	4a25      	ldr	r2, [pc, #148]	; (8001078 <ADC_Config+0x124>)
 8000fe2:	f043 6300 	orr.w	r3, r3, #134217728	; 0x8000000
 8000fe6:	6093      	str	r3, [r2, #8]
	ADC1 -> CR2 &=~ ADC_CR2_ALIGN;																		//alineacion por la derecha
 8000fe8:	4b23      	ldr	r3, [pc, #140]	; (8001078 <ADC_Config+0x124>)
 8000fea:	689b      	ldr	r3, [r3, #8]
 8000fec:	4a22      	ldr	r2, [pc, #136]	; (8001078 <ADC_Config+0x124>)
 8000fee:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8000ff2:	6093      	str	r3, [r2, #8]
	ADC1 -> CR2 &=~ ADC_CR2_EOCS;																		//no voy a trabajar con DMA
 8000ff4:	4b20      	ldr	r3, [pc, #128]	; (8001078 <ADC_Config+0x124>)
 8000ff6:	689b      	ldr	r3, [r3, #8]
 8000ff8:	4a1f      	ldr	r2, [pc, #124]	; (8001078 <ADC_Config+0x124>)
 8000ffa:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8000ffe:	6093      	str	r3, [r2, #8]
#endif

	//5. Configurar el tiempo de muestreo y la secuencia de conversion
	ADC1 -> SMPR1 |= ADC_SMPR1_SMP14_1 |  ADC_SMPR1_SMP14_0;											//tiempo de muestreo de 56 ciclos de reloj
 8001000:	4b1d      	ldr	r3, [pc, #116]	; (8001078 <ADC_Config+0x124>)
 8001002:	68db      	ldr	r3, [r3, #12]
 8001004:	4a1c      	ldr	r2, [pc, #112]	; (8001078 <ADC_Config+0x124>)
 8001006:	f443 5340 	orr.w	r3, r3, #12288	; 0x3000
 800100a:	60d3      	str	r3, [r2, #12]
	ADC1 -> SQR1 = 0;																					//no hay secuencia ya que solo haremos una conversion (aqui va el numero de canales)
 800100c:	4b1a      	ldr	r3, [pc, #104]	; (8001078 <ADC_Config+0x124>)
 800100e:	2200      	movs	r2, #0
 8001010:	62da      	str	r2, [r3, #44]	; 0x2c
	ADC1 -> SQR3 = 14;																					//indica el canal que se va a convertir
 8001012:	4b19      	ldr	r3, [pc, #100]	; (8001078 <ADC_Config+0x124>)
 8001014:	220e      	movs	r2, #14
 8001016:	635a      	str	r2, [r3, #52]	; 0x34

	//6. Habilitamos el ADC
	ADC1 -> CR2 |= ADC_CR2_ADON;																		//habilitamos el ADC
 8001018:	4b17      	ldr	r3, [pc, #92]	; (8001078 <ADC_Config+0x124>)
 800101a:	689b      	ldr	r3, [r3, #8]
 800101c:	4a16      	ldr	r2, [pc, #88]	; (8001078 <ADC_Config+0x124>)
 800101e:	f043 0301 	orr.w	r3, r3, #1
 8001022:	6093      	str	r3, [r2, #8]
	ADC1 -> CR2 |= ADC_CR2_SWSTART;																		//no hace conversión ya que usaremos external trigger
 8001024:	4b14      	ldr	r3, [pc, #80]	; (8001078 <ADC_Config+0x124>)
 8001026:	689b      	ldr	r3, [r3, #8]
 8001028:	4a13      	ldr	r2, [pc, #76]	; (8001078 <ADC_Config+0x124>)
 800102a:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 800102e:	6093      	str	r3, [r2, #8]

#if 1
	//7. Configuramos la interrupcion del ADC
	NVIC_EnableIRQ(ADC_IRQn);
 8001030:	2012      	movs	r0, #18
 8001032:	f7ff fdc1 	bl	8000bb8 <__NVIC_EnableIRQ>

	//8. Configuramos el External Trigger TIM3 (DESACTIVAR PARA POLLING)
	RCC -> APB1ENR |= RCC_APB1ENR_TIM3EN;																//habilitamos el reloj del timer
 8001036:	4b0d      	ldr	r3, [pc, #52]	; (800106c <ADC_Config+0x118>)
 8001038:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800103a:	4a0c      	ldr	r2, [pc, #48]	; (800106c <ADC_Config+0x118>)
 800103c:	f043 0302 	orr.w	r3, r3, #2
 8001040:	6413      	str	r3, [r2, #64]	; 0x40
	TIM3 -> CR1 = 0;																					//limpiamos el registro CR1 del TIM3
 8001042:	4b0e      	ldr	r3, [pc, #56]	; (800107c <ADC_Config+0x128>)
 8001044:	2200      	movs	r2, #0
 8001046:	601a      	str	r2, [r3, #0]
	 * Calculamos ARR para una frecuencia de 50Hz
	 * ARR = 16E+6 / ((80) * (50)) - 1
	 * ARR = 399
	 * PSC = 79
	 */
	TIM3 -> ARR = 400 - 1;																				//establezco mi ARR para 50 Hz
 8001048:	4b0c      	ldr	r3, [pc, #48]	; (800107c <ADC_Config+0x128>)
 800104a:	f240 128f 	movw	r2, #399	; 0x18f
 800104e:	62da      	str	r2, [r3, #44]	; 0x2c
	TIM3 -> PSC = 80 - 1;																				//establezco mi PSC para 50 Hz
 8001050:	4b0a      	ldr	r3, [pc, #40]	; (800107c <ADC_Config+0x128>)
 8001052:	224f      	movs	r2, #79	; 0x4f
 8001054:	629a      	str	r2, [r3, #40]	; 0x28
	TIM3 -> CR2 = TIM_CR2_MMS_1;																		//usamos el Update Event
 8001056:	4b09      	ldr	r3, [pc, #36]	; (800107c <ADC_Config+0x128>)
 8001058:	2220      	movs	r2, #32
 800105a:	605a      	str	r2, [r3, #4]
	TIM3 -> CR1 |= TIM_CR1_CEN;																			//iniciar el conteo del tim
 800105c:	4b07      	ldr	r3, [pc, #28]	; (800107c <ADC_Config+0x128>)
 800105e:	681b      	ldr	r3, [r3, #0]
 8001060:	4a06      	ldr	r2, [pc, #24]	; (800107c <ADC_Config+0x128>)
 8001062:	f043 0301 	orr.w	r3, r3, #1
 8001066:	6013      	str	r3, [r2, #0]
#endif
}
 8001068:	bf00      	nop
 800106a:	bd80      	pop	{r7, pc}
 800106c:	40023800 	.word	0x40023800
 8001070:	40020800 	.word	0x40020800
 8001074:	40012300 	.word	0x40012300
 8001078:	40012000 	.word	0x40012000
 800107c:	40000400 	.word	0x40000400

08001080 <SysTick_Handler>:
volatile uint32_t uwTicks = 0;
volatile uint32_t dataBT;
volatile uint16_t adcData = 0;
int flagX = 0;

void SysTick_Handler(void){
 8001080:	b480      	push	{r7}
 8001082:	af00      	add	r7, sp, #0
	//multiplexado
	uwTicks += 1;
 8001084:	4b04      	ldr	r3, [pc, #16]	; (8001098 <SysTick_Handler+0x18>)
 8001086:	681b      	ldr	r3, [r3, #0]
 8001088:	3301      	adds	r3, #1
 800108a:	4a03      	ldr	r2, [pc, #12]	; (8001098 <SysTick_Handler+0x18>)
 800108c:	6013      	str	r3, [r2, #0]
	return ;
 800108e:	bf00      	nop
}
 8001090:	46bd      	mov	sp, r7
 8001092:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001096:	4770      	bx	lr
 8001098:	200001e4 	.word	0x200001e4

0800109c <EXTI15_10_IRQHandler>:

void EXTI15_10_IRQHandler(void){
 800109c:	b480      	push	{r7}
 800109e:	af00      	add	r7, sp, #0
	if(EXTI -> PR & EXTI_PR_PR13){
 80010a0:	4b0b      	ldr	r3, [pc, #44]	; (80010d0 <EXTI15_10_IRQHandler+0x34>)
 80010a2:	695b      	ldr	r3, [r3, #20]
 80010a4:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 80010a8:	2b00      	cmp	r3, #0
 80010aa:	d00c      	beq.n	80010c6 <EXTI15_10_IRQHandler+0x2a>
		EXTI -> PR |= EXTI_PR_PR13;			//limpiar el pending byte PR13
 80010ac:	4b08      	ldr	r3, [pc, #32]	; (80010d0 <EXTI15_10_IRQHandler+0x34>)
 80010ae:	695b      	ldr	r3, [r3, #20]
 80010b0:	4a07      	ldr	r2, [pc, #28]	; (80010d0 <EXTI15_10_IRQHandler+0x34>)
 80010b2:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80010b6:	6153      	str	r3, [r2, #20]
		GPIOA -> ODR ^= GPIO_ODR_OD5;		//toggle PA5
 80010b8:	4b06      	ldr	r3, [pc, #24]	; (80010d4 <EXTI15_10_IRQHandler+0x38>)
 80010ba:	695b      	ldr	r3, [r3, #20]
 80010bc:	4a05      	ldr	r2, [pc, #20]	; (80010d4 <EXTI15_10_IRQHandler+0x38>)
 80010be:	f083 0320 	eor.w	r3, r3, #32
 80010c2:	6153      	str	r3, [r2, #20]
	}
	return ;
 80010c4:	bf00      	nop
 80010c6:	bf00      	nop
}
 80010c8:	46bd      	mov	sp, r7
 80010ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010ce:	4770      	bx	lr
 80010d0:	40013c00 	.word	0x40013c00
 80010d4:	40020000 	.word	0x40020000

080010d8 <USART2_IRQHandler>:

void USART2_IRQHandler(void){
 80010d8:	b480      	push	{r7}
 80010da:	af00      	add	r7, sp, #0
	if(USART2 -> SR & USART_SR_RXNE){
 80010dc:	4b07      	ldr	r3, [pc, #28]	; (80010fc <USART2_IRQHandler+0x24>)
 80010de:	681b      	ldr	r3, [r3, #0]
 80010e0:	f003 0320 	and.w	r3, r3, #32
 80010e4:	2b00      	cmp	r3, #0
 80010e6:	d003      	beq.n	80010f0 <USART2_IRQHandler+0x18>
		//leo el dato recibido por la interrupcion
		dataBT = USART2 -> DR;
 80010e8:	4b04      	ldr	r3, [pc, #16]	; (80010fc <USART2_IRQHandler+0x24>)
 80010ea:	685b      	ldr	r3, [r3, #4]
 80010ec:	4a04      	ldr	r2, [pc, #16]	; (8001100 <USART2_IRQHandler+0x28>)
 80010ee:	6013      	str	r3, [r2, #0]
	}
}
 80010f0:	bf00      	nop
 80010f2:	46bd      	mov	sp, r7
 80010f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010f8:	4770      	bx	lr
 80010fa:	bf00      	nop
 80010fc:	40004400 	.word	0x40004400
 8001100:	200001e8 	.word	0x200001e8

08001104 <USART6_IRQHandler>:

void USART6_IRQHandler(void){
 8001104:	b480      	push	{r7}
 8001106:	af00      	add	r7, sp, #0
	if(USART6 -> SR & USART_SR_RXNE){
 8001108:	4b07      	ldr	r3, [pc, #28]	; (8001128 <USART6_IRQHandler+0x24>)
 800110a:	681b      	ldr	r3, [r3, #0]
 800110c:	f003 0320 	and.w	r3, r3, #32
 8001110:	2b00      	cmp	r3, #0
 8001112:	d003      	beq.n	800111c <USART6_IRQHandler+0x18>
		//leo el dato recibido por la interrupcion
		dataBT = USART6 -> DR;
 8001114:	4b04      	ldr	r3, [pc, #16]	; (8001128 <USART6_IRQHandler+0x24>)
 8001116:	685b      	ldr	r3, [r3, #4]
 8001118:	4a04      	ldr	r2, [pc, #16]	; (800112c <USART6_IRQHandler+0x28>)
 800111a:	6013      	str	r3, [r2, #0]
	}
}
 800111c:	bf00      	nop
 800111e:	46bd      	mov	sp, r7
 8001120:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001124:	4770      	bx	lr
 8001126:	bf00      	nop
 8001128:	40011400 	.word	0x40011400
 800112c:	200001e8 	.word	0x200001e8

08001130 <TIM5_IRQHandler>:

void TIM5_IRQHandler(void){
 8001130:	b480      	push	{r7}
 8001132:	af00      	add	r7, sp, #0
	if(TIM5 -> SR & TIM_SR_UIF){
 8001134:	4b0b      	ldr	r3, [pc, #44]	; (8001164 <TIM5_IRQHandler+0x34>)
 8001136:	691b      	ldr	r3, [r3, #16]
 8001138:	f003 0301 	and.w	r3, r3, #1
 800113c:	2b00      	cmp	r3, #0
 800113e:	d00b      	beq.n	8001158 <TIM5_IRQHandler+0x28>
		TIM5 -> SR &=~ TIM_SR_UIF;	//limpiar bandera
 8001140:	4b08      	ldr	r3, [pc, #32]	; (8001164 <TIM5_IRQHandler+0x34>)
 8001142:	691b      	ldr	r3, [r3, #16]
 8001144:	4a07      	ldr	r2, [pc, #28]	; (8001164 <TIM5_IRQHandler+0x34>)
 8001146:	f023 0301 	bic.w	r3, r3, #1
 800114a:	6113      	str	r3, [r2, #16]
		GPIOA -> ODR ^= GPIO_ODR_OD9;
 800114c:	4b06      	ldr	r3, [pc, #24]	; (8001168 <TIM5_IRQHandler+0x38>)
 800114e:	695b      	ldr	r3, [r3, #20]
 8001150:	4a05      	ldr	r2, [pc, #20]	; (8001168 <TIM5_IRQHandler+0x38>)
 8001152:	f483 7300 	eor.w	r3, r3, #512	; 0x200
 8001156:	6153      	str	r3, [r2, #20]
	}
}
 8001158:	bf00      	nop
 800115a:	46bd      	mov	sp, r7
 800115c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001160:	4770      	bx	lr
 8001162:	bf00      	nop
 8001164:	40000c00 	.word	0x40000c00
 8001168:	40020000 	.word	0x40020000

0800116c <TIM3_IRQHandler>:

void TIM3_IRQHandler(void){
 800116c:	b480      	push	{r7}
 800116e:	af00      	add	r7, sp, #0
	static uint32_t ccr3;
	if(TIM3 -> SR & TIM_SR_CC3IF){
 8001170:	4b0c      	ldr	r3, [pc, #48]	; (80011a4 <TIM3_IRQHandler+0x38>)
 8001172:	691b      	ldr	r3, [r3, #16]
 8001174:	f003 0308 	and.w	r3, r3, #8
 8001178:	2b00      	cmp	r3, #0
 800117a:	d00e      	beq.n	800119a <TIM3_IRQHandler+0x2e>
		TIM3 -> SR &=~ TIM_SR_CC3IF;
 800117c:	4b09      	ldr	r3, [pc, #36]	; (80011a4 <TIM3_IRQHandler+0x38>)
 800117e:	691b      	ldr	r3, [r3, #16]
 8001180:	4a08      	ldr	r2, [pc, #32]	; (80011a4 <TIM3_IRQHandler+0x38>)
 8001182:	f023 0308 	bic.w	r3, r3, #8
 8001186:	6113      	str	r3, [r2, #16]
		ccr3 = TIM3 -> CCR3 + 200;
 8001188:	4b06      	ldr	r3, [pc, #24]	; (80011a4 <TIM3_IRQHandler+0x38>)
 800118a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800118c:	33c8      	adds	r3, #200	; 0xc8
 800118e:	4a06      	ldr	r2, [pc, #24]	; (80011a8 <TIM3_IRQHandler+0x3c>)
 8001190:	6013      	str	r3, [r2, #0]
		TIM3 -> CCR3  = ccr3;
 8001192:	4a04      	ldr	r2, [pc, #16]	; (80011a4 <TIM3_IRQHandler+0x38>)
 8001194:	4b04      	ldr	r3, [pc, #16]	; (80011a8 <TIM3_IRQHandler+0x3c>)
 8001196:	681b      	ldr	r3, [r3, #0]
 8001198:	63d3      	str	r3, [r2, #60]	; 0x3c
	}
}
 800119a:	bf00      	nop
 800119c:	46bd      	mov	sp, r7
 800119e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80011a2:	4770      	bx	lr
 80011a4:	40000400 	.word	0x40000400
 80011a8:	200001f0 	.word	0x200001f0

080011ac <ADC_IRQHandler>:

float yk, uk, uk_1;

void ADC_IRQHandler(void){
 80011ac:	b480      	push	{r7}
 80011ae:	af00      	add	r7, sp, #0
	if(ADC1 -> SR & ADC_SR_OVR){
 80011b0:	4b0d      	ldr	r3, [pc, #52]	; (80011e8 <ADC_IRQHandler+0x3c>)
 80011b2:	681b      	ldr	r3, [r3, #0]
 80011b4:	f003 0320 	and.w	r3, r3, #32
 80011b8:	2b00      	cmp	r3, #0
 80011ba:	d005      	beq.n	80011c8 <ADC_IRQHandler+0x1c>
		ADC1 -> SR &=~ ADC_SR_OVR;													//cuando haya overrun lo borramos
 80011bc:	4b0a      	ldr	r3, [pc, #40]	; (80011e8 <ADC_IRQHandler+0x3c>)
 80011be:	681b      	ldr	r3, [r3, #0]
 80011c0:	4a09      	ldr	r2, [pc, #36]	; (80011e8 <ADC_IRQHandler+0x3c>)
 80011c2:	f023 0320 	bic.w	r3, r3, #32
 80011c6:	6013      	str	r3, [r2, #0]
	}
	if(ADC1 -> SR & ADC_SR_EOC){
 80011c8:	4b07      	ldr	r3, [pc, #28]	; (80011e8 <ADC_IRQHandler+0x3c>)
 80011ca:	681b      	ldr	r3, [r3, #0]
 80011cc:	f003 0302 	and.w	r3, r3, #2
 80011d0:	2b00      	cmp	r3, #0
 80011d2:	d004      	beq.n	80011de <ADC_IRQHandler+0x32>
		adcData = ADC1 -> DR;
 80011d4:	4b04      	ldr	r3, [pc, #16]	; (80011e8 <ADC_IRQHandler+0x3c>)
 80011d6:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80011d8:	b29a      	uxth	r2, r3
 80011da:	4b04      	ldr	r3, [pc, #16]	; (80011ec <ADC_IRQHandler+0x40>)
 80011dc:	801a      	strh	r2, [r3, #0]
		uk = adcData;
		yk = 0.03046 * (uk + uk_1) + 0.9341 * yk;
		printf("Mi valor es: %f y tambien es %f\r\n", yk, uk);
		*/
	}
}
 80011de:	bf00      	nop
 80011e0:	46bd      	mov	sp, r7
 80011e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80011e6:	4770      	bx	lr
 80011e8:	40012000 	.word	0x40012000
 80011ec:	200001ec 	.word	0x200001ec

080011f0 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 80011f0:	b480      	push	{r7}
 80011f2:	af00      	add	r7, sp, #0
  return 1;
 80011f4:	2301      	movs	r3, #1
}
 80011f6:	4618      	mov	r0, r3
 80011f8:	46bd      	mov	sp, r7
 80011fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80011fe:	4770      	bx	lr

08001200 <_kill>:

int _kill(int pid, int sig)
{
 8001200:	b580      	push	{r7, lr}
 8001202:	b082      	sub	sp, #8
 8001204:	af00      	add	r7, sp, #0
 8001206:	6078      	str	r0, [r7, #4]
 8001208:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 800120a:	f000 ff45 	bl	8002098 <__errno>
 800120e:	4603      	mov	r3, r0
 8001210:	2216      	movs	r2, #22
 8001212:	601a      	str	r2, [r3, #0]
  return -1;
 8001214:	f04f 33ff 	mov.w	r3, #4294967295
}
 8001218:	4618      	mov	r0, r3
 800121a:	3708      	adds	r7, #8
 800121c:	46bd      	mov	sp, r7
 800121e:	bd80      	pop	{r7, pc}

08001220 <_exit>:

void _exit (int status)
{
 8001220:	b580      	push	{r7, lr}
 8001222:	b082      	sub	sp, #8
 8001224:	af00      	add	r7, sp, #0
 8001226:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 8001228:	f04f 31ff 	mov.w	r1, #4294967295
 800122c:	6878      	ldr	r0, [r7, #4]
 800122e:	f7ff ffe7 	bl	8001200 <_kill>
  while (1) {}    /* Make sure we hang here */
 8001232:	e7fe      	b.n	8001232 <_exit+0x12>

08001234 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001234:	b580      	push	{r7, lr}
 8001236:	b086      	sub	sp, #24
 8001238:	af00      	add	r7, sp, #0
 800123a:	60f8      	str	r0, [r7, #12]
 800123c:	60b9      	str	r1, [r7, #8]
 800123e:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001240:	2300      	movs	r3, #0
 8001242:	617b      	str	r3, [r7, #20]
 8001244:	e00a      	b.n	800125c <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8001246:	f3af 8000 	nop.w
 800124a:	4601      	mov	r1, r0
 800124c:	68bb      	ldr	r3, [r7, #8]
 800124e:	1c5a      	adds	r2, r3, #1
 8001250:	60ba      	str	r2, [r7, #8]
 8001252:	b2ca      	uxtb	r2, r1
 8001254:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001256:	697b      	ldr	r3, [r7, #20]
 8001258:	3301      	adds	r3, #1
 800125a:	617b      	str	r3, [r7, #20]
 800125c:	697a      	ldr	r2, [r7, #20]
 800125e:	687b      	ldr	r3, [r7, #4]
 8001260:	429a      	cmp	r2, r3
 8001262:	dbf0      	blt.n	8001246 <_read+0x12>
  }

  return len;
 8001264:	687b      	ldr	r3, [r7, #4]
}
 8001266:	4618      	mov	r0, r3
 8001268:	3718      	adds	r7, #24
 800126a:	46bd      	mov	sp, r7
 800126c:	bd80      	pop	{r7, pc}

0800126e <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800126e:	b580      	push	{r7, lr}
 8001270:	b086      	sub	sp, #24
 8001272:	af00      	add	r7, sp, #0
 8001274:	60f8      	str	r0, [r7, #12]
 8001276:	60b9      	str	r1, [r7, #8]
 8001278:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800127a:	2300      	movs	r3, #0
 800127c:	617b      	str	r3, [r7, #20]
 800127e:	e009      	b.n	8001294 <_write+0x26>
  {
    __io_putchar(*ptr++);
 8001280:	68bb      	ldr	r3, [r7, #8]
 8001282:	1c5a      	adds	r2, r3, #1
 8001284:	60ba      	str	r2, [r7, #8]
 8001286:	781b      	ldrb	r3, [r3, #0]
 8001288:	4618      	mov	r0, r3
 800128a:	f7ff fe19 	bl	8000ec0 <__io_putchar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800128e:	697b      	ldr	r3, [r7, #20]
 8001290:	3301      	adds	r3, #1
 8001292:	617b      	str	r3, [r7, #20]
 8001294:	697a      	ldr	r2, [r7, #20]
 8001296:	687b      	ldr	r3, [r7, #4]
 8001298:	429a      	cmp	r2, r3
 800129a:	dbf1      	blt.n	8001280 <_write+0x12>
  }
  return len;
 800129c:	687b      	ldr	r3, [r7, #4]
}
 800129e:	4618      	mov	r0, r3
 80012a0:	3718      	adds	r7, #24
 80012a2:	46bd      	mov	sp, r7
 80012a4:	bd80      	pop	{r7, pc}

080012a6 <_close>:

int _close(int file)
{
 80012a6:	b480      	push	{r7}
 80012a8:	b083      	sub	sp, #12
 80012aa:	af00      	add	r7, sp, #0
 80012ac:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 80012ae:	f04f 33ff 	mov.w	r3, #4294967295
}
 80012b2:	4618      	mov	r0, r3
 80012b4:	370c      	adds	r7, #12
 80012b6:	46bd      	mov	sp, r7
 80012b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80012bc:	4770      	bx	lr

080012be <_fstat>:


int _fstat(int file, struct stat *st)
{
 80012be:	b480      	push	{r7}
 80012c0:	b083      	sub	sp, #12
 80012c2:	af00      	add	r7, sp, #0
 80012c4:	6078      	str	r0, [r7, #4]
 80012c6:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 80012c8:	683b      	ldr	r3, [r7, #0]
 80012ca:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80012ce:	605a      	str	r2, [r3, #4]
  return 0;
 80012d0:	2300      	movs	r3, #0
}
 80012d2:	4618      	mov	r0, r3
 80012d4:	370c      	adds	r7, #12
 80012d6:	46bd      	mov	sp, r7
 80012d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80012dc:	4770      	bx	lr

080012de <_isatty>:

int _isatty(int file)
{
 80012de:	b480      	push	{r7}
 80012e0:	b083      	sub	sp, #12
 80012e2:	af00      	add	r7, sp, #0
 80012e4:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80012e6:	2301      	movs	r3, #1
}
 80012e8:	4618      	mov	r0, r3
 80012ea:	370c      	adds	r7, #12
 80012ec:	46bd      	mov	sp, r7
 80012ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80012f2:	4770      	bx	lr

080012f4 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80012f4:	b480      	push	{r7}
 80012f6:	b085      	sub	sp, #20
 80012f8:	af00      	add	r7, sp, #0
 80012fa:	60f8      	str	r0, [r7, #12]
 80012fc:	60b9      	str	r1, [r7, #8]
 80012fe:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8001300:	2300      	movs	r3, #0
}
 8001302:	4618      	mov	r0, r3
 8001304:	3714      	adds	r7, #20
 8001306:	46bd      	mov	sp, r7
 8001308:	f85d 7b04 	ldr.w	r7, [sp], #4
 800130c:	4770      	bx	lr
	...

08001310 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8001310:	b580      	push	{r7, lr}
 8001312:	b086      	sub	sp, #24
 8001314:	af00      	add	r7, sp, #0
 8001316:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8001318:	4a14      	ldr	r2, [pc, #80]	; (800136c <_sbrk+0x5c>)
 800131a:	4b15      	ldr	r3, [pc, #84]	; (8001370 <_sbrk+0x60>)
 800131c:	1ad3      	subs	r3, r2, r3
 800131e:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8001320:	697b      	ldr	r3, [r7, #20]
 8001322:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8001324:	4b13      	ldr	r3, [pc, #76]	; (8001374 <_sbrk+0x64>)
 8001326:	681b      	ldr	r3, [r3, #0]
 8001328:	2b00      	cmp	r3, #0
 800132a:	d102      	bne.n	8001332 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 800132c:	4b11      	ldr	r3, [pc, #68]	; (8001374 <_sbrk+0x64>)
 800132e:	4a12      	ldr	r2, [pc, #72]	; (8001378 <_sbrk+0x68>)
 8001330:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8001332:	4b10      	ldr	r3, [pc, #64]	; (8001374 <_sbrk+0x64>)
 8001334:	681a      	ldr	r2, [r3, #0]
 8001336:	687b      	ldr	r3, [r7, #4]
 8001338:	4413      	add	r3, r2
 800133a:	693a      	ldr	r2, [r7, #16]
 800133c:	429a      	cmp	r2, r3
 800133e:	d207      	bcs.n	8001350 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8001340:	f000 feaa 	bl	8002098 <__errno>
 8001344:	4603      	mov	r3, r0
 8001346:	220c      	movs	r2, #12
 8001348:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800134a:	f04f 33ff 	mov.w	r3, #4294967295
 800134e:	e009      	b.n	8001364 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8001350:	4b08      	ldr	r3, [pc, #32]	; (8001374 <_sbrk+0x64>)
 8001352:	681b      	ldr	r3, [r3, #0]
 8001354:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8001356:	4b07      	ldr	r3, [pc, #28]	; (8001374 <_sbrk+0x64>)
 8001358:	681a      	ldr	r2, [r3, #0]
 800135a:	687b      	ldr	r3, [r7, #4]
 800135c:	4413      	add	r3, r2
 800135e:	4a05      	ldr	r2, [pc, #20]	; (8001374 <_sbrk+0x64>)
 8001360:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8001362:	68fb      	ldr	r3, [r7, #12]
}
 8001364:	4618      	mov	r0, r3
 8001366:	3718      	adds	r7, #24
 8001368:	46bd      	mov	sp, r7
 800136a:	bd80      	pop	{r7, pc}
 800136c:	20020000 	.word	0x20020000
 8001370:	00000400 	.word	0x00000400
 8001374:	200001f4 	.word	0x200001f4
 8001378:	20000348 	.word	0x20000348

0800137c <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 800137c:	b480      	push	{r7}
 800137e:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8001380:	4b06      	ldr	r3, [pc, #24]	; (800139c <SystemInit+0x20>)
 8001382:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8001386:	4a05      	ldr	r2, [pc, #20]	; (800139c <SystemInit+0x20>)
 8001388:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800138c:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8001390:	bf00      	nop
 8001392:	46bd      	mov	sp, r7
 8001394:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001398:	4770      	bx	lr
 800139a:	bf00      	nop
 800139c:	e000ed00 	.word	0xe000ed00

080013a0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80013a0:	480d      	ldr	r0, [pc, #52]	; (80013d8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80013a2:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80013a4:	f7ff ffea 	bl	800137c <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80013a8:	480c      	ldr	r0, [pc, #48]	; (80013dc <LoopForever+0x6>)
  ldr r1, =_edata
 80013aa:	490d      	ldr	r1, [pc, #52]	; (80013e0 <LoopForever+0xa>)
  ldr r2, =_sidata
 80013ac:	4a0d      	ldr	r2, [pc, #52]	; (80013e4 <LoopForever+0xe>)
  movs r3, #0
 80013ae:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80013b0:	e002      	b.n	80013b8 <LoopCopyDataInit>

080013b2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80013b2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80013b4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80013b6:	3304      	adds	r3, #4

080013b8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80013b8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80013ba:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80013bc:	d3f9      	bcc.n	80013b2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80013be:	4a0a      	ldr	r2, [pc, #40]	; (80013e8 <LoopForever+0x12>)
  ldr r4, =_ebss
 80013c0:	4c0a      	ldr	r4, [pc, #40]	; (80013ec <LoopForever+0x16>)
  movs r3, #0
 80013c2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80013c4:	e001      	b.n	80013ca <LoopFillZerobss>

080013c6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80013c6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80013c8:	3204      	adds	r2, #4

080013ca <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80013ca:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80013cc:	d3fb      	bcc.n	80013c6 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80013ce:	f000 fe69 	bl	80020a4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80013d2:	f7ff fca0 	bl	8000d16 <main>

080013d6 <LoopForever>:

LoopForever:
  b LoopForever
 80013d6:	e7fe      	b.n	80013d6 <LoopForever>
  ldr   r0, =_estack
 80013d8:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80013dc:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80013e0:	200001c8 	.word	0x200001c8
  ldr r2, =_sidata
 80013e4:	08004104 	.word	0x08004104
  ldr r2, =_sbss
 80013e8:	200001c8 	.word	0x200001c8
  ldr r4, =_ebss
 80013ec:	20000344 	.word	0x20000344

080013f0 <BusFault_Handler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80013f0:	e7fe      	b.n	80013f0 <BusFault_Handler>

080013f2 <__cvt>:
 80013f2:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80013f6:	ec55 4b10 	vmov	r4, r5, d0
 80013fa:	2d00      	cmp	r5, #0
 80013fc:	460e      	mov	r6, r1
 80013fe:	4619      	mov	r1, r3
 8001400:	462b      	mov	r3, r5
 8001402:	bfbb      	ittet	lt
 8001404:	f105 4300 	addlt.w	r3, r5, #2147483648	; 0x80000000
 8001408:	461d      	movlt	r5, r3
 800140a:	2300      	movge	r3, #0
 800140c:	232d      	movlt	r3, #45	; 0x2d
 800140e:	700b      	strb	r3, [r1, #0]
 8001410:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8001412:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 8001416:	4691      	mov	r9, r2
 8001418:	f023 0820 	bic.w	r8, r3, #32
 800141c:	bfbc      	itt	lt
 800141e:	4622      	movlt	r2, r4
 8001420:	4614      	movlt	r4, r2
 8001422:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 8001426:	d005      	beq.n	8001434 <__cvt+0x42>
 8001428:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 800142c:	d100      	bne.n	8001430 <__cvt+0x3e>
 800142e:	3601      	adds	r6, #1
 8001430:	2102      	movs	r1, #2
 8001432:	e000      	b.n	8001436 <__cvt+0x44>
 8001434:	2103      	movs	r1, #3
 8001436:	ab03      	add	r3, sp, #12
 8001438:	9301      	str	r3, [sp, #4]
 800143a:	ab02      	add	r3, sp, #8
 800143c:	9300      	str	r3, [sp, #0]
 800143e:	ec45 4b10 	vmov	d0, r4, r5
 8001442:	4653      	mov	r3, sl
 8001444:	4632      	mov	r2, r6
 8001446:	f000 feeb 	bl	8002220 <_dtoa_r>
 800144a:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 800144e:	4607      	mov	r7, r0
 8001450:	d102      	bne.n	8001458 <__cvt+0x66>
 8001452:	f019 0f01 	tst.w	r9, #1
 8001456:	d022      	beq.n	800149e <__cvt+0xac>
 8001458:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 800145c:	eb07 0906 	add.w	r9, r7, r6
 8001460:	d110      	bne.n	8001484 <__cvt+0x92>
 8001462:	783b      	ldrb	r3, [r7, #0]
 8001464:	2b30      	cmp	r3, #48	; 0x30
 8001466:	d10a      	bne.n	800147e <__cvt+0x8c>
 8001468:	2200      	movs	r2, #0
 800146a:	2300      	movs	r3, #0
 800146c:	4620      	mov	r0, r4
 800146e:	4629      	mov	r1, r5
 8001470:	f7ff fb32 	bl	8000ad8 <__aeabi_dcmpeq>
 8001474:	b918      	cbnz	r0, 800147e <__cvt+0x8c>
 8001476:	f1c6 0601 	rsb	r6, r6, #1
 800147a:	f8ca 6000 	str.w	r6, [sl]
 800147e:	f8da 3000 	ldr.w	r3, [sl]
 8001482:	4499      	add	r9, r3
 8001484:	2200      	movs	r2, #0
 8001486:	2300      	movs	r3, #0
 8001488:	4620      	mov	r0, r4
 800148a:	4629      	mov	r1, r5
 800148c:	f7ff fb24 	bl	8000ad8 <__aeabi_dcmpeq>
 8001490:	b108      	cbz	r0, 8001496 <__cvt+0xa4>
 8001492:	f8cd 900c 	str.w	r9, [sp, #12]
 8001496:	2230      	movs	r2, #48	; 0x30
 8001498:	9b03      	ldr	r3, [sp, #12]
 800149a:	454b      	cmp	r3, r9
 800149c:	d307      	bcc.n	80014ae <__cvt+0xbc>
 800149e:	9b03      	ldr	r3, [sp, #12]
 80014a0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80014a2:	1bdb      	subs	r3, r3, r7
 80014a4:	4638      	mov	r0, r7
 80014a6:	6013      	str	r3, [r2, #0]
 80014a8:	b004      	add	sp, #16
 80014aa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80014ae:	1c59      	adds	r1, r3, #1
 80014b0:	9103      	str	r1, [sp, #12]
 80014b2:	701a      	strb	r2, [r3, #0]
 80014b4:	e7f0      	b.n	8001498 <__cvt+0xa6>

080014b6 <__exponent>:
 80014b6:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80014b8:	4603      	mov	r3, r0
 80014ba:	2900      	cmp	r1, #0
 80014bc:	bfb8      	it	lt
 80014be:	4249      	neglt	r1, r1
 80014c0:	f803 2b02 	strb.w	r2, [r3], #2
 80014c4:	bfb4      	ite	lt
 80014c6:	222d      	movlt	r2, #45	; 0x2d
 80014c8:	222b      	movge	r2, #43	; 0x2b
 80014ca:	2909      	cmp	r1, #9
 80014cc:	7042      	strb	r2, [r0, #1]
 80014ce:	dd2a      	ble.n	8001526 <__exponent+0x70>
 80014d0:	f10d 0207 	add.w	r2, sp, #7
 80014d4:	4617      	mov	r7, r2
 80014d6:	260a      	movs	r6, #10
 80014d8:	4694      	mov	ip, r2
 80014da:	fb91 f5f6 	sdiv	r5, r1, r6
 80014de:	fb06 1415 	mls	r4, r6, r5, r1
 80014e2:	3430      	adds	r4, #48	; 0x30
 80014e4:	f80c 4c01 	strb.w	r4, [ip, #-1]
 80014e8:	460c      	mov	r4, r1
 80014ea:	2c63      	cmp	r4, #99	; 0x63
 80014ec:	f102 32ff 	add.w	r2, r2, #4294967295
 80014f0:	4629      	mov	r1, r5
 80014f2:	dcf1      	bgt.n	80014d8 <__exponent+0x22>
 80014f4:	3130      	adds	r1, #48	; 0x30
 80014f6:	f1ac 0402 	sub.w	r4, ip, #2
 80014fa:	f802 1c01 	strb.w	r1, [r2, #-1]
 80014fe:	1c41      	adds	r1, r0, #1
 8001500:	4622      	mov	r2, r4
 8001502:	42ba      	cmp	r2, r7
 8001504:	d30a      	bcc.n	800151c <__exponent+0x66>
 8001506:	f10d 0209 	add.w	r2, sp, #9
 800150a:	eba2 020c 	sub.w	r2, r2, ip
 800150e:	42bc      	cmp	r4, r7
 8001510:	bf88      	it	hi
 8001512:	2200      	movhi	r2, #0
 8001514:	4413      	add	r3, r2
 8001516:	1a18      	subs	r0, r3, r0
 8001518:	b003      	add	sp, #12
 800151a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800151c:	f812 5b01 	ldrb.w	r5, [r2], #1
 8001520:	f801 5f01 	strb.w	r5, [r1, #1]!
 8001524:	e7ed      	b.n	8001502 <__exponent+0x4c>
 8001526:	2330      	movs	r3, #48	; 0x30
 8001528:	3130      	adds	r1, #48	; 0x30
 800152a:	7083      	strb	r3, [r0, #2]
 800152c:	70c1      	strb	r1, [r0, #3]
 800152e:	1d03      	adds	r3, r0, #4
 8001530:	e7f1      	b.n	8001516 <__exponent+0x60>
	...

08001534 <_printf_float>:
 8001534:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001538:	ed2d 8b02 	vpush	{d8}
 800153c:	b08d      	sub	sp, #52	; 0x34
 800153e:	460c      	mov	r4, r1
 8001540:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 8001544:	4616      	mov	r6, r2
 8001546:	461f      	mov	r7, r3
 8001548:	4605      	mov	r5, r0
 800154a:	f000 fd5b 	bl	8002004 <_localeconv_r>
 800154e:	f8d0 a000 	ldr.w	sl, [r0]
 8001552:	4650      	mov	r0, sl
 8001554:	f7fe fe94 	bl	8000280 <strlen>
 8001558:	2300      	movs	r3, #0
 800155a:	930a      	str	r3, [sp, #40]	; 0x28
 800155c:	6823      	ldr	r3, [r4, #0]
 800155e:	9305      	str	r3, [sp, #20]
 8001560:	f8d8 3000 	ldr.w	r3, [r8]
 8001564:	f894 b018 	ldrb.w	fp, [r4, #24]
 8001568:	3307      	adds	r3, #7
 800156a:	f023 0307 	bic.w	r3, r3, #7
 800156e:	f103 0208 	add.w	r2, r3, #8
 8001572:	f8c8 2000 	str.w	r2, [r8]
 8001576:	e9d3 8900 	ldrd	r8, r9, [r3]
 800157a:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 800157e:	9307      	str	r3, [sp, #28]
 8001580:	f8cd 8018 	str.w	r8, [sp, #24]
 8001584:	ee08 0a10 	vmov	s16, r0
 8001588:	e9c4 8912 	strd	r8, r9, [r4, #72]	; 0x48
 800158c:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8001590:	4b9e      	ldr	r3, [pc, #632]	; (800180c <_printf_float+0x2d8>)
 8001592:	f04f 32ff 	mov.w	r2, #4294967295
 8001596:	f7ff fad1 	bl	8000b3c <__aeabi_dcmpun>
 800159a:	bb88      	cbnz	r0, 8001600 <_printf_float+0xcc>
 800159c:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80015a0:	4b9a      	ldr	r3, [pc, #616]	; (800180c <_printf_float+0x2d8>)
 80015a2:	f04f 32ff 	mov.w	r2, #4294967295
 80015a6:	f7ff faab 	bl	8000b00 <__aeabi_dcmple>
 80015aa:	bb48      	cbnz	r0, 8001600 <_printf_float+0xcc>
 80015ac:	2200      	movs	r2, #0
 80015ae:	2300      	movs	r3, #0
 80015b0:	4640      	mov	r0, r8
 80015b2:	4649      	mov	r1, r9
 80015b4:	f7ff fa9a 	bl	8000aec <__aeabi_dcmplt>
 80015b8:	b110      	cbz	r0, 80015c0 <_printf_float+0x8c>
 80015ba:	232d      	movs	r3, #45	; 0x2d
 80015bc:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80015c0:	4a93      	ldr	r2, [pc, #588]	; (8001810 <_printf_float+0x2dc>)
 80015c2:	4b94      	ldr	r3, [pc, #592]	; (8001814 <_printf_float+0x2e0>)
 80015c4:	f1bb 0f47 	cmp.w	fp, #71	; 0x47
 80015c8:	bf94      	ite	ls
 80015ca:	4690      	movls	r8, r2
 80015cc:	4698      	movhi	r8, r3
 80015ce:	2303      	movs	r3, #3
 80015d0:	6123      	str	r3, [r4, #16]
 80015d2:	9b05      	ldr	r3, [sp, #20]
 80015d4:	f023 0304 	bic.w	r3, r3, #4
 80015d8:	6023      	str	r3, [r4, #0]
 80015da:	f04f 0900 	mov.w	r9, #0
 80015de:	9700      	str	r7, [sp, #0]
 80015e0:	4633      	mov	r3, r6
 80015e2:	aa0b      	add	r2, sp, #44	; 0x2c
 80015e4:	4621      	mov	r1, r4
 80015e6:	4628      	mov	r0, r5
 80015e8:	f000 f9da 	bl	80019a0 <_printf_common>
 80015ec:	3001      	adds	r0, #1
 80015ee:	f040 8090 	bne.w	8001712 <_printf_float+0x1de>
 80015f2:	f04f 30ff 	mov.w	r0, #4294967295
 80015f6:	b00d      	add	sp, #52	; 0x34
 80015f8:	ecbd 8b02 	vpop	{d8}
 80015fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001600:	4642      	mov	r2, r8
 8001602:	464b      	mov	r3, r9
 8001604:	4640      	mov	r0, r8
 8001606:	4649      	mov	r1, r9
 8001608:	f7ff fa98 	bl	8000b3c <__aeabi_dcmpun>
 800160c:	b140      	cbz	r0, 8001620 <_printf_float+0xec>
 800160e:	464b      	mov	r3, r9
 8001610:	2b00      	cmp	r3, #0
 8001612:	bfbc      	itt	lt
 8001614:	232d      	movlt	r3, #45	; 0x2d
 8001616:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 800161a:	4a7f      	ldr	r2, [pc, #508]	; (8001818 <_printf_float+0x2e4>)
 800161c:	4b7f      	ldr	r3, [pc, #508]	; (800181c <_printf_float+0x2e8>)
 800161e:	e7d1      	b.n	80015c4 <_printf_float+0x90>
 8001620:	6863      	ldr	r3, [r4, #4]
 8001622:	f00b 02df 	and.w	r2, fp, #223	; 0xdf
 8001626:	9206      	str	r2, [sp, #24]
 8001628:	1c5a      	adds	r2, r3, #1
 800162a:	d13f      	bne.n	80016ac <_printf_float+0x178>
 800162c:	2306      	movs	r3, #6
 800162e:	6063      	str	r3, [r4, #4]
 8001630:	9b05      	ldr	r3, [sp, #20]
 8001632:	6861      	ldr	r1, [r4, #4]
 8001634:	f443 6280 	orr.w	r2, r3, #1024	; 0x400
 8001638:	2300      	movs	r3, #0
 800163a:	9303      	str	r3, [sp, #12]
 800163c:	ab0a      	add	r3, sp, #40	; 0x28
 800163e:	e9cd b301 	strd	fp, r3, [sp, #4]
 8001642:	ab09      	add	r3, sp, #36	; 0x24
 8001644:	ec49 8b10 	vmov	d0, r8, r9
 8001648:	9300      	str	r3, [sp, #0]
 800164a:	6022      	str	r2, [r4, #0]
 800164c:	f10d 0323 	add.w	r3, sp, #35	; 0x23
 8001650:	4628      	mov	r0, r5
 8001652:	f7ff fece 	bl	80013f2 <__cvt>
 8001656:	9b06      	ldr	r3, [sp, #24]
 8001658:	9909      	ldr	r1, [sp, #36]	; 0x24
 800165a:	2b47      	cmp	r3, #71	; 0x47
 800165c:	4680      	mov	r8, r0
 800165e:	d108      	bne.n	8001672 <_printf_float+0x13e>
 8001660:	1cc8      	adds	r0, r1, #3
 8001662:	db02      	blt.n	800166a <_printf_float+0x136>
 8001664:	6863      	ldr	r3, [r4, #4]
 8001666:	4299      	cmp	r1, r3
 8001668:	dd41      	ble.n	80016ee <_printf_float+0x1ba>
 800166a:	f1ab 0302 	sub.w	r3, fp, #2
 800166e:	fa5f fb83 	uxtb.w	fp, r3
 8001672:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 8001676:	d820      	bhi.n	80016ba <_printf_float+0x186>
 8001678:	3901      	subs	r1, #1
 800167a:	465a      	mov	r2, fp
 800167c:	f104 0050 	add.w	r0, r4, #80	; 0x50
 8001680:	9109      	str	r1, [sp, #36]	; 0x24
 8001682:	f7ff ff18 	bl	80014b6 <__exponent>
 8001686:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8001688:	1813      	adds	r3, r2, r0
 800168a:	2a01      	cmp	r2, #1
 800168c:	4681      	mov	r9, r0
 800168e:	6123      	str	r3, [r4, #16]
 8001690:	dc02      	bgt.n	8001698 <_printf_float+0x164>
 8001692:	6822      	ldr	r2, [r4, #0]
 8001694:	07d2      	lsls	r2, r2, #31
 8001696:	d501      	bpl.n	800169c <_printf_float+0x168>
 8001698:	3301      	adds	r3, #1
 800169a:	6123      	str	r3, [r4, #16]
 800169c:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
 80016a0:	2b00      	cmp	r3, #0
 80016a2:	d09c      	beq.n	80015de <_printf_float+0xaa>
 80016a4:	232d      	movs	r3, #45	; 0x2d
 80016a6:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80016aa:	e798      	b.n	80015de <_printf_float+0xaa>
 80016ac:	9a06      	ldr	r2, [sp, #24]
 80016ae:	2a47      	cmp	r2, #71	; 0x47
 80016b0:	d1be      	bne.n	8001630 <_printf_float+0xfc>
 80016b2:	2b00      	cmp	r3, #0
 80016b4:	d1bc      	bne.n	8001630 <_printf_float+0xfc>
 80016b6:	2301      	movs	r3, #1
 80016b8:	e7b9      	b.n	800162e <_printf_float+0xfa>
 80016ba:	f1bb 0f66 	cmp.w	fp, #102	; 0x66
 80016be:	d118      	bne.n	80016f2 <_printf_float+0x1be>
 80016c0:	2900      	cmp	r1, #0
 80016c2:	6863      	ldr	r3, [r4, #4]
 80016c4:	dd0b      	ble.n	80016de <_printf_float+0x1aa>
 80016c6:	6121      	str	r1, [r4, #16]
 80016c8:	b913      	cbnz	r3, 80016d0 <_printf_float+0x19c>
 80016ca:	6822      	ldr	r2, [r4, #0]
 80016cc:	07d0      	lsls	r0, r2, #31
 80016ce:	d502      	bpl.n	80016d6 <_printf_float+0x1a2>
 80016d0:	3301      	adds	r3, #1
 80016d2:	440b      	add	r3, r1
 80016d4:	6123      	str	r3, [r4, #16]
 80016d6:	65a1      	str	r1, [r4, #88]	; 0x58
 80016d8:	f04f 0900 	mov.w	r9, #0
 80016dc:	e7de      	b.n	800169c <_printf_float+0x168>
 80016de:	b913      	cbnz	r3, 80016e6 <_printf_float+0x1b2>
 80016e0:	6822      	ldr	r2, [r4, #0]
 80016e2:	07d2      	lsls	r2, r2, #31
 80016e4:	d501      	bpl.n	80016ea <_printf_float+0x1b6>
 80016e6:	3302      	adds	r3, #2
 80016e8:	e7f4      	b.n	80016d4 <_printf_float+0x1a0>
 80016ea:	2301      	movs	r3, #1
 80016ec:	e7f2      	b.n	80016d4 <_printf_float+0x1a0>
 80016ee:	f04f 0b67 	mov.w	fp, #103	; 0x67
 80016f2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80016f4:	4299      	cmp	r1, r3
 80016f6:	db05      	blt.n	8001704 <_printf_float+0x1d0>
 80016f8:	6823      	ldr	r3, [r4, #0]
 80016fa:	6121      	str	r1, [r4, #16]
 80016fc:	07d8      	lsls	r0, r3, #31
 80016fe:	d5ea      	bpl.n	80016d6 <_printf_float+0x1a2>
 8001700:	1c4b      	adds	r3, r1, #1
 8001702:	e7e7      	b.n	80016d4 <_printf_float+0x1a0>
 8001704:	2900      	cmp	r1, #0
 8001706:	bfd4      	ite	le
 8001708:	f1c1 0202 	rsble	r2, r1, #2
 800170c:	2201      	movgt	r2, #1
 800170e:	4413      	add	r3, r2
 8001710:	e7e0      	b.n	80016d4 <_printf_float+0x1a0>
 8001712:	6823      	ldr	r3, [r4, #0]
 8001714:	055a      	lsls	r2, r3, #21
 8001716:	d407      	bmi.n	8001728 <_printf_float+0x1f4>
 8001718:	6923      	ldr	r3, [r4, #16]
 800171a:	4642      	mov	r2, r8
 800171c:	4631      	mov	r1, r6
 800171e:	4628      	mov	r0, r5
 8001720:	47b8      	blx	r7
 8001722:	3001      	adds	r0, #1
 8001724:	d12c      	bne.n	8001780 <_printf_float+0x24c>
 8001726:	e764      	b.n	80015f2 <_printf_float+0xbe>
 8001728:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 800172c:	f240 80e0 	bls.w	80018f0 <_printf_float+0x3bc>
 8001730:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8001734:	2200      	movs	r2, #0
 8001736:	2300      	movs	r3, #0
 8001738:	f7ff f9ce 	bl	8000ad8 <__aeabi_dcmpeq>
 800173c:	2800      	cmp	r0, #0
 800173e:	d034      	beq.n	80017aa <_printf_float+0x276>
 8001740:	4a37      	ldr	r2, [pc, #220]	; (8001820 <_printf_float+0x2ec>)
 8001742:	2301      	movs	r3, #1
 8001744:	4631      	mov	r1, r6
 8001746:	4628      	mov	r0, r5
 8001748:	47b8      	blx	r7
 800174a:	3001      	adds	r0, #1
 800174c:	f43f af51 	beq.w	80015f2 <_printf_float+0xbe>
 8001750:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8001754:	429a      	cmp	r2, r3
 8001756:	db02      	blt.n	800175e <_printf_float+0x22a>
 8001758:	6823      	ldr	r3, [r4, #0]
 800175a:	07d8      	lsls	r0, r3, #31
 800175c:	d510      	bpl.n	8001780 <_printf_float+0x24c>
 800175e:	ee18 3a10 	vmov	r3, s16
 8001762:	4652      	mov	r2, sl
 8001764:	4631      	mov	r1, r6
 8001766:	4628      	mov	r0, r5
 8001768:	47b8      	blx	r7
 800176a:	3001      	adds	r0, #1
 800176c:	f43f af41 	beq.w	80015f2 <_printf_float+0xbe>
 8001770:	f04f 0800 	mov.w	r8, #0
 8001774:	f104 091a 	add.w	r9, r4, #26
 8001778:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800177a:	3b01      	subs	r3, #1
 800177c:	4543      	cmp	r3, r8
 800177e:	dc09      	bgt.n	8001794 <_printf_float+0x260>
 8001780:	6823      	ldr	r3, [r4, #0]
 8001782:	079b      	lsls	r3, r3, #30
 8001784:	f100 8107 	bmi.w	8001996 <_printf_float+0x462>
 8001788:	68e0      	ldr	r0, [r4, #12]
 800178a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800178c:	4298      	cmp	r0, r3
 800178e:	bfb8      	it	lt
 8001790:	4618      	movlt	r0, r3
 8001792:	e730      	b.n	80015f6 <_printf_float+0xc2>
 8001794:	2301      	movs	r3, #1
 8001796:	464a      	mov	r2, r9
 8001798:	4631      	mov	r1, r6
 800179a:	4628      	mov	r0, r5
 800179c:	47b8      	blx	r7
 800179e:	3001      	adds	r0, #1
 80017a0:	f43f af27 	beq.w	80015f2 <_printf_float+0xbe>
 80017a4:	f108 0801 	add.w	r8, r8, #1
 80017a8:	e7e6      	b.n	8001778 <_printf_float+0x244>
 80017aa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80017ac:	2b00      	cmp	r3, #0
 80017ae:	dc39      	bgt.n	8001824 <_printf_float+0x2f0>
 80017b0:	4a1b      	ldr	r2, [pc, #108]	; (8001820 <_printf_float+0x2ec>)
 80017b2:	2301      	movs	r3, #1
 80017b4:	4631      	mov	r1, r6
 80017b6:	4628      	mov	r0, r5
 80017b8:	47b8      	blx	r7
 80017ba:	3001      	adds	r0, #1
 80017bc:	f43f af19 	beq.w	80015f2 <_printf_float+0xbe>
 80017c0:	e9dd 3209 	ldrd	r3, r2, [sp, #36]	; 0x24
 80017c4:	4313      	orrs	r3, r2
 80017c6:	d102      	bne.n	80017ce <_printf_float+0x29a>
 80017c8:	6823      	ldr	r3, [r4, #0]
 80017ca:	07d9      	lsls	r1, r3, #31
 80017cc:	d5d8      	bpl.n	8001780 <_printf_float+0x24c>
 80017ce:	ee18 3a10 	vmov	r3, s16
 80017d2:	4652      	mov	r2, sl
 80017d4:	4631      	mov	r1, r6
 80017d6:	4628      	mov	r0, r5
 80017d8:	47b8      	blx	r7
 80017da:	3001      	adds	r0, #1
 80017dc:	f43f af09 	beq.w	80015f2 <_printf_float+0xbe>
 80017e0:	f04f 0900 	mov.w	r9, #0
 80017e4:	f104 0a1a 	add.w	sl, r4, #26
 80017e8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80017ea:	425b      	negs	r3, r3
 80017ec:	454b      	cmp	r3, r9
 80017ee:	dc01      	bgt.n	80017f4 <_printf_float+0x2c0>
 80017f0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80017f2:	e792      	b.n	800171a <_printf_float+0x1e6>
 80017f4:	2301      	movs	r3, #1
 80017f6:	4652      	mov	r2, sl
 80017f8:	4631      	mov	r1, r6
 80017fa:	4628      	mov	r0, r5
 80017fc:	47b8      	blx	r7
 80017fe:	3001      	adds	r0, #1
 8001800:	f43f aef7 	beq.w	80015f2 <_printf_float+0xbe>
 8001804:	f109 0901 	add.w	r9, r9, #1
 8001808:	e7ee      	b.n	80017e8 <_printf_float+0x2b4>
 800180a:	bf00      	nop
 800180c:	7fefffff 	.word	0x7fefffff
 8001810:	08003d88 	.word	0x08003d88
 8001814:	08003d8c 	.word	0x08003d8c
 8001818:	08003d90 	.word	0x08003d90
 800181c:	08003d94 	.word	0x08003d94
 8001820:	08003d98 	.word	0x08003d98
 8001824:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8001826:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8001828:	429a      	cmp	r2, r3
 800182a:	bfa8      	it	ge
 800182c:	461a      	movge	r2, r3
 800182e:	2a00      	cmp	r2, #0
 8001830:	4691      	mov	r9, r2
 8001832:	dc37      	bgt.n	80018a4 <_printf_float+0x370>
 8001834:	f04f 0b00 	mov.w	fp, #0
 8001838:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800183c:	f104 021a 	add.w	r2, r4, #26
 8001840:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8001842:	9305      	str	r3, [sp, #20]
 8001844:	eba3 0309 	sub.w	r3, r3, r9
 8001848:	455b      	cmp	r3, fp
 800184a:	dc33      	bgt.n	80018b4 <_printf_float+0x380>
 800184c:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8001850:	429a      	cmp	r2, r3
 8001852:	db3b      	blt.n	80018cc <_printf_float+0x398>
 8001854:	6823      	ldr	r3, [r4, #0]
 8001856:	07da      	lsls	r2, r3, #31
 8001858:	d438      	bmi.n	80018cc <_printf_float+0x398>
 800185a:	e9dd 3209 	ldrd	r3, r2, [sp, #36]	; 0x24
 800185e:	eba2 0903 	sub.w	r9, r2, r3
 8001862:	9b05      	ldr	r3, [sp, #20]
 8001864:	1ad2      	subs	r2, r2, r3
 8001866:	4591      	cmp	r9, r2
 8001868:	bfa8      	it	ge
 800186a:	4691      	movge	r9, r2
 800186c:	f1b9 0f00 	cmp.w	r9, #0
 8001870:	dc35      	bgt.n	80018de <_printf_float+0x3aa>
 8001872:	f04f 0800 	mov.w	r8, #0
 8001876:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800187a:	f104 0a1a 	add.w	sl, r4, #26
 800187e:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8001882:	1a9b      	subs	r3, r3, r2
 8001884:	eba3 0309 	sub.w	r3, r3, r9
 8001888:	4543      	cmp	r3, r8
 800188a:	f77f af79 	ble.w	8001780 <_printf_float+0x24c>
 800188e:	2301      	movs	r3, #1
 8001890:	4652      	mov	r2, sl
 8001892:	4631      	mov	r1, r6
 8001894:	4628      	mov	r0, r5
 8001896:	47b8      	blx	r7
 8001898:	3001      	adds	r0, #1
 800189a:	f43f aeaa 	beq.w	80015f2 <_printf_float+0xbe>
 800189e:	f108 0801 	add.w	r8, r8, #1
 80018a2:	e7ec      	b.n	800187e <_printf_float+0x34a>
 80018a4:	4613      	mov	r3, r2
 80018a6:	4631      	mov	r1, r6
 80018a8:	4642      	mov	r2, r8
 80018aa:	4628      	mov	r0, r5
 80018ac:	47b8      	blx	r7
 80018ae:	3001      	adds	r0, #1
 80018b0:	d1c0      	bne.n	8001834 <_printf_float+0x300>
 80018b2:	e69e      	b.n	80015f2 <_printf_float+0xbe>
 80018b4:	2301      	movs	r3, #1
 80018b6:	4631      	mov	r1, r6
 80018b8:	4628      	mov	r0, r5
 80018ba:	9205      	str	r2, [sp, #20]
 80018bc:	47b8      	blx	r7
 80018be:	3001      	adds	r0, #1
 80018c0:	f43f ae97 	beq.w	80015f2 <_printf_float+0xbe>
 80018c4:	9a05      	ldr	r2, [sp, #20]
 80018c6:	f10b 0b01 	add.w	fp, fp, #1
 80018ca:	e7b9      	b.n	8001840 <_printf_float+0x30c>
 80018cc:	ee18 3a10 	vmov	r3, s16
 80018d0:	4652      	mov	r2, sl
 80018d2:	4631      	mov	r1, r6
 80018d4:	4628      	mov	r0, r5
 80018d6:	47b8      	blx	r7
 80018d8:	3001      	adds	r0, #1
 80018da:	d1be      	bne.n	800185a <_printf_float+0x326>
 80018dc:	e689      	b.n	80015f2 <_printf_float+0xbe>
 80018de:	9a05      	ldr	r2, [sp, #20]
 80018e0:	464b      	mov	r3, r9
 80018e2:	4442      	add	r2, r8
 80018e4:	4631      	mov	r1, r6
 80018e6:	4628      	mov	r0, r5
 80018e8:	47b8      	blx	r7
 80018ea:	3001      	adds	r0, #1
 80018ec:	d1c1      	bne.n	8001872 <_printf_float+0x33e>
 80018ee:	e680      	b.n	80015f2 <_printf_float+0xbe>
 80018f0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80018f2:	2a01      	cmp	r2, #1
 80018f4:	dc01      	bgt.n	80018fa <_printf_float+0x3c6>
 80018f6:	07db      	lsls	r3, r3, #31
 80018f8:	d53a      	bpl.n	8001970 <_printf_float+0x43c>
 80018fa:	2301      	movs	r3, #1
 80018fc:	4642      	mov	r2, r8
 80018fe:	4631      	mov	r1, r6
 8001900:	4628      	mov	r0, r5
 8001902:	47b8      	blx	r7
 8001904:	3001      	adds	r0, #1
 8001906:	f43f ae74 	beq.w	80015f2 <_printf_float+0xbe>
 800190a:	ee18 3a10 	vmov	r3, s16
 800190e:	4652      	mov	r2, sl
 8001910:	4631      	mov	r1, r6
 8001912:	4628      	mov	r0, r5
 8001914:	47b8      	blx	r7
 8001916:	3001      	adds	r0, #1
 8001918:	f43f ae6b 	beq.w	80015f2 <_printf_float+0xbe>
 800191c:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8001920:	2200      	movs	r2, #0
 8001922:	2300      	movs	r3, #0
 8001924:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
 8001928:	f7ff f8d6 	bl	8000ad8 <__aeabi_dcmpeq>
 800192c:	b9d8      	cbnz	r0, 8001966 <_printf_float+0x432>
 800192e:	f10a 33ff 	add.w	r3, sl, #4294967295
 8001932:	f108 0201 	add.w	r2, r8, #1
 8001936:	4631      	mov	r1, r6
 8001938:	4628      	mov	r0, r5
 800193a:	47b8      	blx	r7
 800193c:	3001      	adds	r0, #1
 800193e:	d10e      	bne.n	800195e <_printf_float+0x42a>
 8001940:	e657      	b.n	80015f2 <_printf_float+0xbe>
 8001942:	2301      	movs	r3, #1
 8001944:	4652      	mov	r2, sl
 8001946:	4631      	mov	r1, r6
 8001948:	4628      	mov	r0, r5
 800194a:	47b8      	blx	r7
 800194c:	3001      	adds	r0, #1
 800194e:	f43f ae50 	beq.w	80015f2 <_printf_float+0xbe>
 8001952:	f108 0801 	add.w	r8, r8, #1
 8001956:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8001958:	3b01      	subs	r3, #1
 800195a:	4543      	cmp	r3, r8
 800195c:	dcf1      	bgt.n	8001942 <_printf_float+0x40e>
 800195e:	464b      	mov	r3, r9
 8001960:	f104 0250 	add.w	r2, r4, #80	; 0x50
 8001964:	e6da      	b.n	800171c <_printf_float+0x1e8>
 8001966:	f04f 0800 	mov.w	r8, #0
 800196a:	f104 0a1a 	add.w	sl, r4, #26
 800196e:	e7f2      	b.n	8001956 <_printf_float+0x422>
 8001970:	2301      	movs	r3, #1
 8001972:	4642      	mov	r2, r8
 8001974:	e7df      	b.n	8001936 <_printf_float+0x402>
 8001976:	2301      	movs	r3, #1
 8001978:	464a      	mov	r2, r9
 800197a:	4631      	mov	r1, r6
 800197c:	4628      	mov	r0, r5
 800197e:	47b8      	blx	r7
 8001980:	3001      	adds	r0, #1
 8001982:	f43f ae36 	beq.w	80015f2 <_printf_float+0xbe>
 8001986:	f108 0801 	add.w	r8, r8, #1
 800198a:	68e3      	ldr	r3, [r4, #12]
 800198c:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800198e:	1a5b      	subs	r3, r3, r1
 8001990:	4543      	cmp	r3, r8
 8001992:	dcf0      	bgt.n	8001976 <_printf_float+0x442>
 8001994:	e6f8      	b.n	8001788 <_printf_float+0x254>
 8001996:	f04f 0800 	mov.w	r8, #0
 800199a:	f104 0919 	add.w	r9, r4, #25
 800199e:	e7f4      	b.n	800198a <_printf_float+0x456>

080019a0 <_printf_common>:
 80019a0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80019a4:	4616      	mov	r6, r2
 80019a6:	4699      	mov	r9, r3
 80019a8:	688a      	ldr	r2, [r1, #8]
 80019aa:	690b      	ldr	r3, [r1, #16]
 80019ac:	f8dd 8020 	ldr.w	r8, [sp, #32]
 80019b0:	4293      	cmp	r3, r2
 80019b2:	bfb8      	it	lt
 80019b4:	4613      	movlt	r3, r2
 80019b6:	6033      	str	r3, [r6, #0]
 80019b8:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 80019bc:	4607      	mov	r7, r0
 80019be:	460c      	mov	r4, r1
 80019c0:	b10a      	cbz	r2, 80019c6 <_printf_common+0x26>
 80019c2:	3301      	adds	r3, #1
 80019c4:	6033      	str	r3, [r6, #0]
 80019c6:	6823      	ldr	r3, [r4, #0]
 80019c8:	0699      	lsls	r1, r3, #26
 80019ca:	bf42      	ittt	mi
 80019cc:	6833      	ldrmi	r3, [r6, #0]
 80019ce:	3302      	addmi	r3, #2
 80019d0:	6033      	strmi	r3, [r6, #0]
 80019d2:	6825      	ldr	r5, [r4, #0]
 80019d4:	f015 0506 	ands.w	r5, r5, #6
 80019d8:	d106      	bne.n	80019e8 <_printf_common+0x48>
 80019da:	f104 0a19 	add.w	sl, r4, #25
 80019de:	68e3      	ldr	r3, [r4, #12]
 80019e0:	6832      	ldr	r2, [r6, #0]
 80019e2:	1a9b      	subs	r3, r3, r2
 80019e4:	42ab      	cmp	r3, r5
 80019e6:	dc26      	bgt.n	8001a36 <_printf_common+0x96>
 80019e8:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 80019ec:	1e13      	subs	r3, r2, #0
 80019ee:	6822      	ldr	r2, [r4, #0]
 80019f0:	bf18      	it	ne
 80019f2:	2301      	movne	r3, #1
 80019f4:	0692      	lsls	r2, r2, #26
 80019f6:	d42b      	bmi.n	8001a50 <_printf_common+0xb0>
 80019f8:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80019fc:	4649      	mov	r1, r9
 80019fe:	4638      	mov	r0, r7
 8001a00:	47c0      	blx	r8
 8001a02:	3001      	adds	r0, #1
 8001a04:	d01e      	beq.n	8001a44 <_printf_common+0xa4>
 8001a06:	6823      	ldr	r3, [r4, #0]
 8001a08:	6922      	ldr	r2, [r4, #16]
 8001a0a:	f003 0306 	and.w	r3, r3, #6
 8001a0e:	2b04      	cmp	r3, #4
 8001a10:	bf02      	ittt	eq
 8001a12:	68e5      	ldreq	r5, [r4, #12]
 8001a14:	6833      	ldreq	r3, [r6, #0]
 8001a16:	1aed      	subeq	r5, r5, r3
 8001a18:	68a3      	ldr	r3, [r4, #8]
 8001a1a:	bf0c      	ite	eq
 8001a1c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8001a20:	2500      	movne	r5, #0
 8001a22:	4293      	cmp	r3, r2
 8001a24:	bfc4      	itt	gt
 8001a26:	1a9b      	subgt	r3, r3, r2
 8001a28:	18ed      	addgt	r5, r5, r3
 8001a2a:	2600      	movs	r6, #0
 8001a2c:	341a      	adds	r4, #26
 8001a2e:	42b5      	cmp	r5, r6
 8001a30:	d11a      	bne.n	8001a68 <_printf_common+0xc8>
 8001a32:	2000      	movs	r0, #0
 8001a34:	e008      	b.n	8001a48 <_printf_common+0xa8>
 8001a36:	2301      	movs	r3, #1
 8001a38:	4652      	mov	r2, sl
 8001a3a:	4649      	mov	r1, r9
 8001a3c:	4638      	mov	r0, r7
 8001a3e:	47c0      	blx	r8
 8001a40:	3001      	adds	r0, #1
 8001a42:	d103      	bne.n	8001a4c <_printf_common+0xac>
 8001a44:	f04f 30ff 	mov.w	r0, #4294967295
 8001a48:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001a4c:	3501      	adds	r5, #1
 8001a4e:	e7c6      	b.n	80019de <_printf_common+0x3e>
 8001a50:	18e1      	adds	r1, r4, r3
 8001a52:	1c5a      	adds	r2, r3, #1
 8001a54:	2030      	movs	r0, #48	; 0x30
 8001a56:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8001a5a:	4422      	add	r2, r4
 8001a5c:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8001a60:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8001a64:	3302      	adds	r3, #2
 8001a66:	e7c7      	b.n	80019f8 <_printf_common+0x58>
 8001a68:	2301      	movs	r3, #1
 8001a6a:	4622      	mov	r2, r4
 8001a6c:	4649      	mov	r1, r9
 8001a6e:	4638      	mov	r0, r7
 8001a70:	47c0      	blx	r8
 8001a72:	3001      	adds	r0, #1
 8001a74:	d0e6      	beq.n	8001a44 <_printf_common+0xa4>
 8001a76:	3601      	adds	r6, #1
 8001a78:	e7d9      	b.n	8001a2e <_printf_common+0x8e>
	...

08001a7c <_printf_i>:
 8001a7c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8001a80:	7e0f      	ldrb	r7, [r1, #24]
 8001a82:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8001a84:	2f78      	cmp	r7, #120	; 0x78
 8001a86:	4691      	mov	r9, r2
 8001a88:	4680      	mov	r8, r0
 8001a8a:	460c      	mov	r4, r1
 8001a8c:	469a      	mov	sl, r3
 8001a8e:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8001a92:	d807      	bhi.n	8001aa4 <_printf_i+0x28>
 8001a94:	2f62      	cmp	r7, #98	; 0x62
 8001a96:	d80a      	bhi.n	8001aae <_printf_i+0x32>
 8001a98:	2f00      	cmp	r7, #0
 8001a9a:	f000 80d4 	beq.w	8001c46 <_printf_i+0x1ca>
 8001a9e:	2f58      	cmp	r7, #88	; 0x58
 8001aa0:	f000 80c0 	beq.w	8001c24 <_printf_i+0x1a8>
 8001aa4:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001aa8:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8001aac:	e03a      	b.n	8001b24 <_printf_i+0xa8>
 8001aae:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8001ab2:	2b15      	cmp	r3, #21
 8001ab4:	d8f6      	bhi.n	8001aa4 <_printf_i+0x28>
 8001ab6:	a101      	add	r1, pc, #4	; (adr r1, 8001abc <_printf_i+0x40>)
 8001ab8:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8001abc:	08001b15 	.word	0x08001b15
 8001ac0:	08001b29 	.word	0x08001b29
 8001ac4:	08001aa5 	.word	0x08001aa5
 8001ac8:	08001aa5 	.word	0x08001aa5
 8001acc:	08001aa5 	.word	0x08001aa5
 8001ad0:	08001aa5 	.word	0x08001aa5
 8001ad4:	08001b29 	.word	0x08001b29
 8001ad8:	08001aa5 	.word	0x08001aa5
 8001adc:	08001aa5 	.word	0x08001aa5
 8001ae0:	08001aa5 	.word	0x08001aa5
 8001ae4:	08001aa5 	.word	0x08001aa5
 8001ae8:	08001c2d 	.word	0x08001c2d
 8001aec:	08001b55 	.word	0x08001b55
 8001af0:	08001be7 	.word	0x08001be7
 8001af4:	08001aa5 	.word	0x08001aa5
 8001af8:	08001aa5 	.word	0x08001aa5
 8001afc:	08001c4f 	.word	0x08001c4f
 8001b00:	08001aa5 	.word	0x08001aa5
 8001b04:	08001b55 	.word	0x08001b55
 8001b08:	08001aa5 	.word	0x08001aa5
 8001b0c:	08001aa5 	.word	0x08001aa5
 8001b10:	08001bef 	.word	0x08001bef
 8001b14:	682b      	ldr	r3, [r5, #0]
 8001b16:	1d1a      	adds	r2, r3, #4
 8001b18:	681b      	ldr	r3, [r3, #0]
 8001b1a:	602a      	str	r2, [r5, #0]
 8001b1c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001b20:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8001b24:	2301      	movs	r3, #1
 8001b26:	e09f      	b.n	8001c68 <_printf_i+0x1ec>
 8001b28:	6820      	ldr	r0, [r4, #0]
 8001b2a:	682b      	ldr	r3, [r5, #0]
 8001b2c:	0607      	lsls	r7, r0, #24
 8001b2e:	f103 0104 	add.w	r1, r3, #4
 8001b32:	6029      	str	r1, [r5, #0]
 8001b34:	d501      	bpl.n	8001b3a <_printf_i+0xbe>
 8001b36:	681e      	ldr	r6, [r3, #0]
 8001b38:	e003      	b.n	8001b42 <_printf_i+0xc6>
 8001b3a:	0646      	lsls	r6, r0, #25
 8001b3c:	d5fb      	bpl.n	8001b36 <_printf_i+0xba>
 8001b3e:	f9b3 6000 	ldrsh.w	r6, [r3]
 8001b42:	2e00      	cmp	r6, #0
 8001b44:	da03      	bge.n	8001b4e <_printf_i+0xd2>
 8001b46:	232d      	movs	r3, #45	; 0x2d
 8001b48:	4276      	negs	r6, r6
 8001b4a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001b4e:	485a      	ldr	r0, [pc, #360]	; (8001cb8 <_printf_i+0x23c>)
 8001b50:	230a      	movs	r3, #10
 8001b52:	e012      	b.n	8001b7a <_printf_i+0xfe>
 8001b54:	682b      	ldr	r3, [r5, #0]
 8001b56:	6820      	ldr	r0, [r4, #0]
 8001b58:	1d19      	adds	r1, r3, #4
 8001b5a:	6029      	str	r1, [r5, #0]
 8001b5c:	0605      	lsls	r5, r0, #24
 8001b5e:	d501      	bpl.n	8001b64 <_printf_i+0xe8>
 8001b60:	681e      	ldr	r6, [r3, #0]
 8001b62:	e002      	b.n	8001b6a <_printf_i+0xee>
 8001b64:	0641      	lsls	r1, r0, #25
 8001b66:	d5fb      	bpl.n	8001b60 <_printf_i+0xe4>
 8001b68:	881e      	ldrh	r6, [r3, #0]
 8001b6a:	4853      	ldr	r0, [pc, #332]	; (8001cb8 <_printf_i+0x23c>)
 8001b6c:	2f6f      	cmp	r7, #111	; 0x6f
 8001b6e:	bf0c      	ite	eq
 8001b70:	2308      	moveq	r3, #8
 8001b72:	230a      	movne	r3, #10
 8001b74:	2100      	movs	r1, #0
 8001b76:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8001b7a:	6865      	ldr	r5, [r4, #4]
 8001b7c:	60a5      	str	r5, [r4, #8]
 8001b7e:	2d00      	cmp	r5, #0
 8001b80:	bfa2      	ittt	ge
 8001b82:	6821      	ldrge	r1, [r4, #0]
 8001b84:	f021 0104 	bicge.w	r1, r1, #4
 8001b88:	6021      	strge	r1, [r4, #0]
 8001b8a:	b90e      	cbnz	r6, 8001b90 <_printf_i+0x114>
 8001b8c:	2d00      	cmp	r5, #0
 8001b8e:	d04b      	beq.n	8001c28 <_printf_i+0x1ac>
 8001b90:	4615      	mov	r5, r2
 8001b92:	fbb6 f1f3 	udiv	r1, r6, r3
 8001b96:	fb03 6711 	mls	r7, r3, r1, r6
 8001b9a:	5dc7      	ldrb	r7, [r0, r7]
 8001b9c:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8001ba0:	4637      	mov	r7, r6
 8001ba2:	42bb      	cmp	r3, r7
 8001ba4:	460e      	mov	r6, r1
 8001ba6:	d9f4      	bls.n	8001b92 <_printf_i+0x116>
 8001ba8:	2b08      	cmp	r3, #8
 8001baa:	d10b      	bne.n	8001bc4 <_printf_i+0x148>
 8001bac:	6823      	ldr	r3, [r4, #0]
 8001bae:	07de      	lsls	r6, r3, #31
 8001bb0:	d508      	bpl.n	8001bc4 <_printf_i+0x148>
 8001bb2:	6923      	ldr	r3, [r4, #16]
 8001bb4:	6861      	ldr	r1, [r4, #4]
 8001bb6:	4299      	cmp	r1, r3
 8001bb8:	bfde      	ittt	le
 8001bba:	2330      	movle	r3, #48	; 0x30
 8001bbc:	f805 3c01 	strble.w	r3, [r5, #-1]
 8001bc0:	f105 35ff 	addle.w	r5, r5, #4294967295
 8001bc4:	1b52      	subs	r2, r2, r5
 8001bc6:	6122      	str	r2, [r4, #16]
 8001bc8:	f8cd a000 	str.w	sl, [sp]
 8001bcc:	464b      	mov	r3, r9
 8001bce:	aa03      	add	r2, sp, #12
 8001bd0:	4621      	mov	r1, r4
 8001bd2:	4640      	mov	r0, r8
 8001bd4:	f7ff fee4 	bl	80019a0 <_printf_common>
 8001bd8:	3001      	adds	r0, #1
 8001bda:	d14a      	bne.n	8001c72 <_printf_i+0x1f6>
 8001bdc:	f04f 30ff 	mov.w	r0, #4294967295
 8001be0:	b004      	add	sp, #16
 8001be2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001be6:	6823      	ldr	r3, [r4, #0]
 8001be8:	f043 0320 	orr.w	r3, r3, #32
 8001bec:	6023      	str	r3, [r4, #0]
 8001bee:	4833      	ldr	r0, [pc, #204]	; (8001cbc <_printf_i+0x240>)
 8001bf0:	2778      	movs	r7, #120	; 0x78
 8001bf2:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8001bf6:	6823      	ldr	r3, [r4, #0]
 8001bf8:	6829      	ldr	r1, [r5, #0]
 8001bfa:	061f      	lsls	r7, r3, #24
 8001bfc:	f851 6b04 	ldr.w	r6, [r1], #4
 8001c00:	d402      	bmi.n	8001c08 <_printf_i+0x18c>
 8001c02:	065f      	lsls	r7, r3, #25
 8001c04:	bf48      	it	mi
 8001c06:	b2b6      	uxthmi	r6, r6
 8001c08:	07df      	lsls	r7, r3, #31
 8001c0a:	bf48      	it	mi
 8001c0c:	f043 0320 	orrmi.w	r3, r3, #32
 8001c10:	6029      	str	r1, [r5, #0]
 8001c12:	bf48      	it	mi
 8001c14:	6023      	strmi	r3, [r4, #0]
 8001c16:	b91e      	cbnz	r6, 8001c20 <_printf_i+0x1a4>
 8001c18:	6823      	ldr	r3, [r4, #0]
 8001c1a:	f023 0320 	bic.w	r3, r3, #32
 8001c1e:	6023      	str	r3, [r4, #0]
 8001c20:	2310      	movs	r3, #16
 8001c22:	e7a7      	b.n	8001b74 <_printf_i+0xf8>
 8001c24:	4824      	ldr	r0, [pc, #144]	; (8001cb8 <_printf_i+0x23c>)
 8001c26:	e7e4      	b.n	8001bf2 <_printf_i+0x176>
 8001c28:	4615      	mov	r5, r2
 8001c2a:	e7bd      	b.n	8001ba8 <_printf_i+0x12c>
 8001c2c:	682b      	ldr	r3, [r5, #0]
 8001c2e:	6826      	ldr	r6, [r4, #0]
 8001c30:	6961      	ldr	r1, [r4, #20]
 8001c32:	1d18      	adds	r0, r3, #4
 8001c34:	6028      	str	r0, [r5, #0]
 8001c36:	0635      	lsls	r5, r6, #24
 8001c38:	681b      	ldr	r3, [r3, #0]
 8001c3a:	d501      	bpl.n	8001c40 <_printf_i+0x1c4>
 8001c3c:	6019      	str	r1, [r3, #0]
 8001c3e:	e002      	b.n	8001c46 <_printf_i+0x1ca>
 8001c40:	0670      	lsls	r0, r6, #25
 8001c42:	d5fb      	bpl.n	8001c3c <_printf_i+0x1c0>
 8001c44:	8019      	strh	r1, [r3, #0]
 8001c46:	2300      	movs	r3, #0
 8001c48:	6123      	str	r3, [r4, #16]
 8001c4a:	4615      	mov	r5, r2
 8001c4c:	e7bc      	b.n	8001bc8 <_printf_i+0x14c>
 8001c4e:	682b      	ldr	r3, [r5, #0]
 8001c50:	1d1a      	adds	r2, r3, #4
 8001c52:	602a      	str	r2, [r5, #0]
 8001c54:	681d      	ldr	r5, [r3, #0]
 8001c56:	6862      	ldr	r2, [r4, #4]
 8001c58:	2100      	movs	r1, #0
 8001c5a:	4628      	mov	r0, r5
 8001c5c:	f7fe fac0 	bl	80001e0 <memchr>
 8001c60:	b108      	cbz	r0, 8001c66 <_printf_i+0x1ea>
 8001c62:	1b40      	subs	r0, r0, r5
 8001c64:	6060      	str	r0, [r4, #4]
 8001c66:	6863      	ldr	r3, [r4, #4]
 8001c68:	6123      	str	r3, [r4, #16]
 8001c6a:	2300      	movs	r3, #0
 8001c6c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001c70:	e7aa      	b.n	8001bc8 <_printf_i+0x14c>
 8001c72:	6923      	ldr	r3, [r4, #16]
 8001c74:	462a      	mov	r2, r5
 8001c76:	4649      	mov	r1, r9
 8001c78:	4640      	mov	r0, r8
 8001c7a:	47d0      	blx	sl
 8001c7c:	3001      	adds	r0, #1
 8001c7e:	d0ad      	beq.n	8001bdc <_printf_i+0x160>
 8001c80:	6823      	ldr	r3, [r4, #0]
 8001c82:	079b      	lsls	r3, r3, #30
 8001c84:	d413      	bmi.n	8001cae <_printf_i+0x232>
 8001c86:	68e0      	ldr	r0, [r4, #12]
 8001c88:	9b03      	ldr	r3, [sp, #12]
 8001c8a:	4298      	cmp	r0, r3
 8001c8c:	bfb8      	it	lt
 8001c8e:	4618      	movlt	r0, r3
 8001c90:	e7a6      	b.n	8001be0 <_printf_i+0x164>
 8001c92:	2301      	movs	r3, #1
 8001c94:	4632      	mov	r2, r6
 8001c96:	4649      	mov	r1, r9
 8001c98:	4640      	mov	r0, r8
 8001c9a:	47d0      	blx	sl
 8001c9c:	3001      	adds	r0, #1
 8001c9e:	d09d      	beq.n	8001bdc <_printf_i+0x160>
 8001ca0:	3501      	adds	r5, #1
 8001ca2:	68e3      	ldr	r3, [r4, #12]
 8001ca4:	9903      	ldr	r1, [sp, #12]
 8001ca6:	1a5b      	subs	r3, r3, r1
 8001ca8:	42ab      	cmp	r3, r5
 8001caa:	dcf2      	bgt.n	8001c92 <_printf_i+0x216>
 8001cac:	e7eb      	b.n	8001c86 <_printf_i+0x20a>
 8001cae:	2500      	movs	r5, #0
 8001cb0:	f104 0619 	add.w	r6, r4, #25
 8001cb4:	e7f5      	b.n	8001ca2 <_printf_i+0x226>
 8001cb6:	bf00      	nop
 8001cb8:	08003d9a 	.word	0x08003d9a
 8001cbc:	08003dab 	.word	0x08003dab

08001cc0 <std>:
 8001cc0:	2300      	movs	r3, #0
 8001cc2:	b510      	push	{r4, lr}
 8001cc4:	4604      	mov	r4, r0
 8001cc6:	e9c0 3300 	strd	r3, r3, [r0]
 8001cca:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8001cce:	6083      	str	r3, [r0, #8]
 8001cd0:	8181      	strh	r1, [r0, #12]
 8001cd2:	6643      	str	r3, [r0, #100]	; 0x64
 8001cd4:	81c2      	strh	r2, [r0, #14]
 8001cd6:	6183      	str	r3, [r0, #24]
 8001cd8:	4619      	mov	r1, r3
 8001cda:	2208      	movs	r2, #8
 8001cdc:	305c      	adds	r0, #92	; 0x5c
 8001cde:	f000 f989 	bl	8001ff4 <memset>
 8001ce2:	4b0d      	ldr	r3, [pc, #52]	; (8001d18 <std+0x58>)
 8001ce4:	6263      	str	r3, [r4, #36]	; 0x24
 8001ce6:	4b0d      	ldr	r3, [pc, #52]	; (8001d1c <std+0x5c>)
 8001ce8:	62a3      	str	r3, [r4, #40]	; 0x28
 8001cea:	4b0d      	ldr	r3, [pc, #52]	; (8001d20 <std+0x60>)
 8001cec:	62e3      	str	r3, [r4, #44]	; 0x2c
 8001cee:	4b0d      	ldr	r3, [pc, #52]	; (8001d24 <std+0x64>)
 8001cf0:	6323      	str	r3, [r4, #48]	; 0x30
 8001cf2:	4b0d      	ldr	r3, [pc, #52]	; (8001d28 <std+0x68>)
 8001cf4:	6224      	str	r4, [r4, #32]
 8001cf6:	429c      	cmp	r4, r3
 8001cf8:	d006      	beq.n	8001d08 <std+0x48>
 8001cfa:	f103 0268 	add.w	r2, r3, #104	; 0x68
 8001cfe:	4294      	cmp	r4, r2
 8001d00:	d002      	beq.n	8001d08 <std+0x48>
 8001d02:	33d0      	adds	r3, #208	; 0xd0
 8001d04:	429c      	cmp	r4, r3
 8001d06:	d105      	bne.n	8001d14 <std+0x54>
 8001d08:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8001d0c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001d10:	f000 b9ec 	b.w	80020ec <__retarget_lock_init_recursive>
 8001d14:	bd10      	pop	{r4, pc}
 8001d16:	bf00      	nop
 8001d18:	08001e45 	.word	0x08001e45
 8001d1c:	08001e67 	.word	0x08001e67
 8001d20:	08001e9f 	.word	0x08001e9f
 8001d24:	08001ec3 	.word	0x08001ec3
 8001d28:	200001f8 	.word	0x200001f8

08001d2c <stdio_exit_handler>:
 8001d2c:	4a02      	ldr	r2, [pc, #8]	; (8001d38 <stdio_exit_handler+0xc>)
 8001d2e:	4903      	ldr	r1, [pc, #12]	; (8001d3c <stdio_exit_handler+0x10>)
 8001d30:	4803      	ldr	r0, [pc, #12]	; (8001d40 <stdio_exit_handler+0x14>)
 8001d32:	f000 b869 	b.w	8001e08 <_fwalk_sglue>
 8001d36:	bf00      	nop
 8001d38:	20000000 	.word	0x20000000
 8001d3c:	08003a91 	.word	0x08003a91
 8001d40:	2000000c 	.word	0x2000000c

08001d44 <cleanup_stdio>:
 8001d44:	6841      	ldr	r1, [r0, #4]
 8001d46:	4b0c      	ldr	r3, [pc, #48]	; (8001d78 <cleanup_stdio+0x34>)
 8001d48:	4299      	cmp	r1, r3
 8001d4a:	b510      	push	{r4, lr}
 8001d4c:	4604      	mov	r4, r0
 8001d4e:	d001      	beq.n	8001d54 <cleanup_stdio+0x10>
 8001d50:	f001 fe9e 	bl	8003a90 <_fflush_r>
 8001d54:	68a1      	ldr	r1, [r4, #8]
 8001d56:	4b09      	ldr	r3, [pc, #36]	; (8001d7c <cleanup_stdio+0x38>)
 8001d58:	4299      	cmp	r1, r3
 8001d5a:	d002      	beq.n	8001d62 <cleanup_stdio+0x1e>
 8001d5c:	4620      	mov	r0, r4
 8001d5e:	f001 fe97 	bl	8003a90 <_fflush_r>
 8001d62:	68e1      	ldr	r1, [r4, #12]
 8001d64:	4b06      	ldr	r3, [pc, #24]	; (8001d80 <cleanup_stdio+0x3c>)
 8001d66:	4299      	cmp	r1, r3
 8001d68:	d004      	beq.n	8001d74 <cleanup_stdio+0x30>
 8001d6a:	4620      	mov	r0, r4
 8001d6c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001d70:	f001 be8e 	b.w	8003a90 <_fflush_r>
 8001d74:	bd10      	pop	{r4, pc}
 8001d76:	bf00      	nop
 8001d78:	200001f8 	.word	0x200001f8
 8001d7c:	20000260 	.word	0x20000260
 8001d80:	200002c8 	.word	0x200002c8

08001d84 <global_stdio_init.part.0>:
 8001d84:	b510      	push	{r4, lr}
 8001d86:	4b0b      	ldr	r3, [pc, #44]	; (8001db4 <global_stdio_init.part.0+0x30>)
 8001d88:	4c0b      	ldr	r4, [pc, #44]	; (8001db8 <global_stdio_init.part.0+0x34>)
 8001d8a:	4a0c      	ldr	r2, [pc, #48]	; (8001dbc <global_stdio_init.part.0+0x38>)
 8001d8c:	601a      	str	r2, [r3, #0]
 8001d8e:	4620      	mov	r0, r4
 8001d90:	2200      	movs	r2, #0
 8001d92:	2104      	movs	r1, #4
 8001d94:	f7ff ff94 	bl	8001cc0 <std>
 8001d98:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8001d9c:	2201      	movs	r2, #1
 8001d9e:	2109      	movs	r1, #9
 8001da0:	f7ff ff8e 	bl	8001cc0 <std>
 8001da4:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 8001da8:	2202      	movs	r2, #2
 8001daa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001dae:	2112      	movs	r1, #18
 8001db0:	f7ff bf86 	b.w	8001cc0 <std>
 8001db4:	20000330 	.word	0x20000330
 8001db8:	200001f8 	.word	0x200001f8
 8001dbc:	08001d2d 	.word	0x08001d2d

08001dc0 <__sfp_lock_acquire>:
 8001dc0:	4801      	ldr	r0, [pc, #4]	; (8001dc8 <__sfp_lock_acquire+0x8>)
 8001dc2:	f000 b994 	b.w	80020ee <__retarget_lock_acquire_recursive>
 8001dc6:	bf00      	nop
 8001dc8:	20000339 	.word	0x20000339

08001dcc <__sfp_lock_release>:
 8001dcc:	4801      	ldr	r0, [pc, #4]	; (8001dd4 <__sfp_lock_release+0x8>)
 8001dce:	f000 b98f 	b.w	80020f0 <__retarget_lock_release_recursive>
 8001dd2:	bf00      	nop
 8001dd4:	20000339 	.word	0x20000339

08001dd8 <__sinit>:
 8001dd8:	b510      	push	{r4, lr}
 8001dda:	4604      	mov	r4, r0
 8001ddc:	f7ff fff0 	bl	8001dc0 <__sfp_lock_acquire>
 8001de0:	6a23      	ldr	r3, [r4, #32]
 8001de2:	b11b      	cbz	r3, 8001dec <__sinit+0x14>
 8001de4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001de8:	f7ff bff0 	b.w	8001dcc <__sfp_lock_release>
 8001dec:	4b04      	ldr	r3, [pc, #16]	; (8001e00 <__sinit+0x28>)
 8001dee:	6223      	str	r3, [r4, #32]
 8001df0:	4b04      	ldr	r3, [pc, #16]	; (8001e04 <__sinit+0x2c>)
 8001df2:	681b      	ldr	r3, [r3, #0]
 8001df4:	2b00      	cmp	r3, #0
 8001df6:	d1f5      	bne.n	8001de4 <__sinit+0xc>
 8001df8:	f7ff ffc4 	bl	8001d84 <global_stdio_init.part.0>
 8001dfc:	e7f2      	b.n	8001de4 <__sinit+0xc>
 8001dfe:	bf00      	nop
 8001e00:	08001d45 	.word	0x08001d45
 8001e04:	20000330 	.word	0x20000330

08001e08 <_fwalk_sglue>:
 8001e08:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8001e0c:	4607      	mov	r7, r0
 8001e0e:	4688      	mov	r8, r1
 8001e10:	4614      	mov	r4, r2
 8001e12:	2600      	movs	r6, #0
 8001e14:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8001e18:	f1b9 0901 	subs.w	r9, r9, #1
 8001e1c:	d505      	bpl.n	8001e2a <_fwalk_sglue+0x22>
 8001e1e:	6824      	ldr	r4, [r4, #0]
 8001e20:	2c00      	cmp	r4, #0
 8001e22:	d1f7      	bne.n	8001e14 <_fwalk_sglue+0xc>
 8001e24:	4630      	mov	r0, r6
 8001e26:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8001e2a:	89ab      	ldrh	r3, [r5, #12]
 8001e2c:	2b01      	cmp	r3, #1
 8001e2e:	d907      	bls.n	8001e40 <_fwalk_sglue+0x38>
 8001e30:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8001e34:	3301      	adds	r3, #1
 8001e36:	d003      	beq.n	8001e40 <_fwalk_sglue+0x38>
 8001e38:	4629      	mov	r1, r5
 8001e3a:	4638      	mov	r0, r7
 8001e3c:	47c0      	blx	r8
 8001e3e:	4306      	orrs	r6, r0
 8001e40:	3568      	adds	r5, #104	; 0x68
 8001e42:	e7e9      	b.n	8001e18 <_fwalk_sglue+0x10>

08001e44 <__sread>:
 8001e44:	b510      	push	{r4, lr}
 8001e46:	460c      	mov	r4, r1
 8001e48:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001e4c:	f000 f900 	bl	8002050 <_read_r>
 8001e50:	2800      	cmp	r0, #0
 8001e52:	bfab      	itete	ge
 8001e54:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8001e56:	89a3      	ldrhlt	r3, [r4, #12]
 8001e58:	181b      	addge	r3, r3, r0
 8001e5a:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8001e5e:	bfac      	ite	ge
 8001e60:	6563      	strge	r3, [r4, #84]	; 0x54
 8001e62:	81a3      	strhlt	r3, [r4, #12]
 8001e64:	bd10      	pop	{r4, pc}

08001e66 <__swrite>:
 8001e66:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001e6a:	461f      	mov	r7, r3
 8001e6c:	898b      	ldrh	r3, [r1, #12]
 8001e6e:	05db      	lsls	r3, r3, #23
 8001e70:	4605      	mov	r5, r0
 8001e72:	460c      	mov	r4, r1
 8001e74:	4616      	mov	r6, r2
 8001e76:	d505      	bpl.n	8001e84 <__swrite+0x1e>
 8001e78:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001e7c:	2302      	movs	r3, #2
 8001e7e:	2200      	movs	r2, #0
 8001e80:	f000 f8d4 	bl	800202c <_lseek_r>
 8001e84:	89a3      	ldrh	r3, [r4, #12]
 8001e86:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001e8a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8001e8e:	81a3      	strh	r3, [r4, #12]
 8001e90:	4632      	mov	r2, r6
 8001e92:	463b      	mov	r3, r7
 8001e94:	4628      	mov	r0, r5
 8001e96:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8001e9a:	f000 b8eb 	b.w	8002074 <_write_r>

08001e9e <__sseek>:
 8001e9e:	b510      	push	{r4, lr}
 8001ea0:	460c      	mov	r4, r1
 8001ea2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001ea6:	f000 f8c1 	bl	800202c <_lseek_r>
 8001eaa:	1c43      	adds	r3, r0, #1
 8001eac:	89a3      	ldrh	r3, [r4, #12]
 8001eae:	bf15      	itete	ne
 8001eb0:	6560      	strne	r0, [r4, #84]	; 0x54
 8001eb2:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8001eb6:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8001eba:	81a3      	strheq	r3, [r4, #12]
 8001ebc:	bf18      	it	ne
 8001ebe:	81a3      	strhne	r3, [r4, #12]
 8001ec0:	bd10      	pop	{r4, pc}

08001ec2 <__sclose>:
 8001ec2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001ec6:	f000 b8a1 	b.w	800200c <_close_r>

08001eca <__swbuf_r>:
 8001eca:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001ecc:	460e      	mov	r6, r1
 8001ece:	4614      	mov	r4, r2
 8001ed0:	4605      	mov	r5, r0
 8001ed2:	b118      	cbz	r0, 8001edc <__swbuf_r+0x12>
 8001ed4:	6a03      	ldr	r3, [r0, #32]
 8001ed6:	b90b      	cbnz	r3, 8001edc <__swbuf_r+0x12>
 8001ed8:	f7ff ff7e 	bl	8001dd8 <__sinit>
 8001edc:	69a3      	ldr	r3, [r4, #24]
 8001ede:	60a3      	str	r3, [r4, #8]
 8001ee0:	89a3      	ldrh	r3, [r4, #12]
 8001ee2:	071a      	lsls	r2, r3, #28
 8001ee4:	d525      	bpl.n	8001f32 <__swbuf_r+0x68>
 8001ee6:	6923      	ldr	r3, [r4, #16]
 8001ee8:	b31b      	cbz	r3, 8001f32 <__swbuf_r+0x68>
 8001eea:	6823      	ldr	r3, [r4, #0]
 8001eec:	6922      	ldr	r2, [r4, #16]
 8001eee:	1a98      	subs	r0, r3, r2
 8001ef0:	6963      	ldr	r3, [r4, #20]
 8001ef2:	b2f6      	uxtb	r6, r6
 8001ef4:	4283      	cmp	r3, r0
 8001ef6:	4637      	mov	r7, r6
 8001ef8:	dc04      	bgt.n	8001f04 <__swbuf_r+0x3a>
 8001efa:	4621      	mov	r1, r4
 8001efc:	4628      	mov	r0, r5
 8001efe:	f001 fdc7 	bl	8003a90 <_fflush_r>
 8001f02:	b9e0      	cbnz	r0, 8001f3e <__swbuf_r+0x74>
 8001f04:	68a3      	ldr	r3, [r4, #8]
 8001f06:	3b01      	subs	r3, #1
 8001f08:	60a3      	str	r3, [r4, #8]
 8001f0a:	6823      	ldr	r3, [r4, #0]
 8001f0c:	1c5a      	adds	r2, r3, #1
 8001f0e:	6022      	str	r2, [r4, #0]
 8001f10:	701e      	strb	r6, [r3, #0]
 8001f12:	6962      	ldr	r2, [r4, #20]
 8001f14:	1c43      	adds	r3, r0, #1
 8001f16:	429a      	cmp	r2, r3
 8001f18:	d004      	beq.n	8001f24 <__swbuf_r+0x5a>
 8001f1a:	89a3      	ldrh	r3, [r4, #12]
 8001f1c:	07db      	lsls	r3, r3, #31
 8001f1e:	d506      	bpl.n	8001f2e <__swbuf_r+0x64>
 8001f20:	2e0a      	cmp	r6, #10
 8001f22:	d104      	bne.n	8001f2e <__swbuf_r+0x64>
 8001f24:	4621      	mov	r1, r4
 8001f26:	4628      	mov	r0, r5
 8001f28:	f001 fdb2 	bl	8003a90 <_fflush_r>
 8001f2c:	b938      	cbnz	r0, 8001f3e <__swbuf_r+0x74>
 8001f2e:	4638      	mov	r0, r7
 8001f30:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001f32:	4621      	mov	r1, r4
 8001f34:	4628      	mov	r0, r5
 8001f36:	f000 f805 	bl	8001f44 <__swsetup_r>
 8001f3a:	2800      	cmp	r0, #0
 8001f3c:	d0d5      	beq.n	8001eea <__swbuf_r+0x20>
 8001f3e:	f04f 37ff 	mov.w	r7, #4294967295
 8001f42:	e7f4      	b.n	8001f2e <__swbuf_r+0x64>

08001f44 <__swsetup_r>:
 8001f44:	b538      	push	{r3, r4, r5, lr}
 8001f46:	4b2a      	ldr	r3, [pc, #168]	; (8001ff0 <__swsetup_r+0xac>)
 8001f48:	4605      	mov	r5, r0
 8001f4a:	6818      	ldr	r0, [r3, #0]
 8001f4c:	460c      	mov	r4, r1
 8001f4e:	b118      	cbz	r0, 8001f58 <__swsetup_r+0x14>
 8001f50:	6a03      	ldr	r3, [r0, #32]
 8001f52:	b90b      	cbnz	r3, 8001f58 <__swsetup_r+0x14>
 8001f54:	f7ff ff40 	bl	8001dd8 <__sinit>
 8001f58:	89a3      	ldrh	r3, [r4, #12]
 8001f5a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8001f5e:	0718      	lsls	r0, r3, #28
 8001f60:	d422      	bmi.n	8001fa8 <__swsetup_r+0x64>
 8001f62:	06d9      	lsls	r1, r3, #27
 8001f64:	d407      	bmi.n	8001f76 <__swsetup_r+0x32>
 8001f66:	2309      	movs	r3, #9
 8001f68:	602b      	str	r3, [r5, #0]
 8001f6a:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8001f6e:	81a3      	strh	r3, [r4, #12]
 8001f70:	f04f 30ff 	mov.w	r0, #4294967295
 8001f74:	e034      	b.n	8001fe0 <__swsetup_r+0x9c>
 8001f76:	0758      	lsls	r0, r3, #29
 8001f78:	d512      	bpl.n	8001fa0 <__swsetup_r+0x5c>
 8001f7a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001f7c:	b141      	cbz	r1, 8001f90 <__swsetup_r+0x4c>
 8001f7e:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001f82:	4299      	cmp	r1, r3
 8001f84:	d002      	beq.n	8001f8c <__swsetup_r+0x48>
 8001f86:	4628      	mov	r0, r5
 8001f88:	f000 ff3c 	bl	8002e04 <_free_r>
 8001f8c:	2300      	movs	r3, #0
 8001f8e:	6363      	str	r3, [r4, #52]	; 0x34
 8001f90:	89a3      	ldrh	r3, [r4, #12]
 8001f92:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8001f96:	81a3      	strh	r3, [r4, #12]
 8001f98:	2300      	movs	r3, #0
 8001f9a:	6063      	str	r3, [r4, #4]
 8001f9c:	6923      	ldr	r3, [r4, #16]
 8001f9e:	6023      	str	r3, [r4, #0]
 8001fa0:	89a3      	ldrh	r3, [r4, #12]
 8001fa2:	f043 0308 	orr.w	r3, r3, #8
 8001fa6:	81a3      	strh	r3, [r4, #12]
 8001fa8:	6923      	ldr	r3, [r4, #16]
 8001faa:	b94b      	cbnz	r3, 8001fc0 <__swsetup_r+0x7c>
 8001fac:	89a3      	ldrh	r3, [r4, #12]
 8001fae:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8001fb2:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8001fb6:	d003      	beq.n	8001fc0 <__swsetup_r+0x7c>
 8001fb8:	4621      	mov	r1, r4
 8001fba:	4628      	mov	r0, r5
 8001fbc:	f001 fdb6 	bl	8003b2c <__smakebuf_r>
 8001fc0:	89a0      	ldrh	r0, [r4, #12]
 8001fc2:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8001fc6:	f010 0301 	ands.w	r3, r0, #1
 8001fca:	d00a      	beq.n	8001fe2 <__swsetup_r+0x9e>
 8001fcc:	2300      	movs	r3, #0
 8001fce:	60a3      	str	r3, [r4, #8]
 8001fd0:	6963      	ldr	r3, [r4, #20]
 8001fd2:	425b      	negs	r3, r3
 8001fd4:	61a3      	str	r3, [r4, #24]
 8001fd6:	6923      	ldr	r3, [r4, #16]
 8001fd8:	b943      	cbnz	r3, 8001fec <__swsetup_r+0xa8>
 8001fda:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8001fde:	d1c4      	bne.n	8001f6a <__swsetup_r+0x26>
 8001fe0:	bd38      	pop	{r3, r4, r5, pc}
 8001fe2:	0781      	lsls	r1, r0, #30
 8001fe4:	bf58      	it	pl
 8001fe6:	6963      	ldrpl	r3, [r4, #20]
 8001fe8:	60a3      	str	r3, [r4, #8]
 8001fea:	e7f4      	b.n	8001fd6 <__swsetup_r+0x92>
 8001fec:	2000      	movs	r0, #0
 8001fee:	e7f7      	b.n	8001fe0 <__swsetup_r+0x9c>
 8001ff0:	20000058 	.word	0x20000058

08001ff4 <memset>:
 8001ff4:	4402      	add	r2, r0
 8001ff6:	4603      	mov	r3, r0
 8001ff8:	4293      	cmp	r3, r2
 8001ffa:	d100      	bne.n	8001ffe <memset+0xa>
 8001ffc:	4770      	bx	lr
 8001ffe:	f803 1b01 	strb.w	r1, [r3], #1
 8002002:	e7f9      	b.n	8001ff8 <memset+0x4>

08002004 <_localeconv_r>:
 8002004:	4800      	ldr	r0, [pc, #0]	; (8002008 <_localeconv_r+0x4>)
 8002006:	4770      	bx	lr
 8002008:	2000014c 	.word	0x2000014c

0800200c <_close_r>:
 800200c:	b538      	push	{r3, r4, r5, lr}
 800200e:	4d06      	ldr	r5, [pc, #24]	; (8002028 <_close_r+0x1c>)
 8002010:	2300      	movs	r3, #0
 8002012:	4604      	mov	r4, r0
 8002014:	4608      	mov	r0, r1
 8002016:	602b      	str	r3, [r5, #0]
 8002018:	f7ff f945 	bl	80012a6 <_close>
 800201c:	1c43      	adds	r3, r0, #1
 800201e:	d102      	bne.n	8002026 <_close_r+0x1a>
 8002020:	682b      	ldr	r3, [r5, #0]
 8002022:	b103      	cbz	r3, 8002026 <_close_r+0x1a>
 8002024:	6023      	str	r3, [r4, #0]
 8002026:	bd38      	pop	{r3, r4, r5, pc}
 8002028:	20000334 	.word	0x20000334

0800202c <_lseek_r>:
 800202c:	b538      	push	{r3, r4, r5, lr}
 800202e:	4d07      	ldr	r5, [pc, #28]	; (800204c <_lseek_r+0x20>)
 8002030:	4604      	mov	r4, r0
 8002032:	4608      	mov	r0, r1
 8002034:	4611      	mov	r1, r2
 8002036:	2200      	movs	r2, #0
 8002038:	602a      	str	r2, [r5, #0]
 800203a:	461a      	mov	r2, r3
 800203c:	f7ff f95a 	bl	80012f4 <_lseek>
 8002040:	1c43      	adds	r3, r0, #1
 8002042:	d102      	bne.n	800204a <_lseek_r+0x1e>
 8002044:	682b      	ldr	r3, [r5, #0]
 8002046:	b103      	cbz	r3, 800204a <_lseek_r+0x1e>
 8002048:	6023      	str	r3, [r4, #0]
 800204a:	bd38      	pop	{r3, r4, r5, pc}
 800204c:	20000334 	.word	0x20000334

08002050 <_read_r>:
 8002050:	b538      	push	{r3, r4, r5, lr}
 8002052:	4d07      	ldr	r5, [pc, #28]	; (8002070 <_read_r+0x20>)
 8002054:	4604      	mov	r4, r0
 8002056:	4608      	mov	r0, r1
 8002058:	4611      	mov	r1, r2
 800205a:	2200      	movs	r2, #0
 800205c:	602a      	str	r2, [r5, #0]
 800205e:	461a      	mov	r2, r3
 8002060:	f7ff f8e8 	bl	8001234 <_read>
 8002064:	1c43      	adds	r3, r0, #1
 8002066:	d102      	bne.n	800206e <_read_r+0x1e>
 8002068:	682b      	ldr	r3, [r5, #0]
 800206a:	b103      	cbz	r3, 800206e <_read_r+0x1e>
 800206c:	6023      	str	r3, [r4, #0]
 800206e:	bd38      	pop	{r3, r4, r5, pc}
 8002070:	20000334 	.word	0x20000334

08002074 <_write_r>:
 8002074:	b538      	push	{r3, r4, r5, lr}
 8002076:	4d07      	ldr	r5, [pc, #28]	; (8002094 <_write_r+0x20>)
 8002078:	4604      	mov	r4, r0
 800207a:	4608      	mov	r0, r1
 800207c:	4611      	mov	r1, r2
 800207e:	2200      	movs	r2, #0
 8002080:	602a      	str	r2, [r5, #0]
 8002082:	461a      	mov	r2, r3
 8002084:	f7ff f8f3 	bl	800126e <_write>
 8002088:	1c43      	adds	r3, r0, #1
 800208a:	d102      	bne.n	8002092 <_write_r+0x1e>
 800208c:	682b      	ldr	r3, [r5, #0]
 800208e:	b103      	cbz	r3, 8002092 <_write_r+0x1e>
 8002090:	6023      	str	r3, [r4, #0]
 8002092:	bd38      	pop	{r3, r4, r5, pc}
 8002094:	20000334 	.word	0x20000334

08002098 <__errno>:
 8002098:	4b01      	ldr	r3, [pc, #4]	; (80020a0 <__errno+0x8>)
 800209a:	6818      	ldr	r0, [r3, #0]
 800209c:	4770      	bx	lr
 800209e:	bf00      	nop
 80020a0:	20000058 	.word	0x20000058

080020a4 <__libc_init_array>:
 80020a4:	b570      	push	{r4, r5, r6, lr}
 80020a6:	4d0d      	ldr	r5, [pc, #52]	; (80020dc <__libc_init_array+0x38>)
 80020a8:	4c0d      	ldr	r4, [pc, #52]	; (80020e0 <__libc_init_array+0x3c>)
 80020aa:	1b64      	subs	r4, r4, r5
 80020ac:	10a4      	asrs	r4, r4, #2
 80020ae:	2600      	movs	r6, #0
 80020b0:	42a6      	cmp	r6, r4
 80020b2:	d109      	bne.n	80020c8 <__libc_init_array+0x24>
 80020b4:	4d0b      	ldr	r5, [pc, #44]	; (80020e4 <__libc_init_array+0x40>)
 80020b6:	4c0c      	ldr	r4, [pc, #48]	; (80020e8 <__libc_init_array+0x44>)
 80020b8:	f001 fe58 	bl	8003d6c <_init>
 80020bc:	1b64      	subs	r4, r4, r5
 80020be:	10a4      	asrs	r4, r4, #2
 80020c0:	2600      	movs	r6, #0
 80020c2:	42a6      	cmp	r6, r4
 80020c4:	d105      	bne.n	80020d2 <__libc_init_array+0x2e>
 80020c6:	bd70      	pop	{r4, r5, r6, pc}
 80020c8:	f855 3b04 	ldr.w	r3, [r5], #4
 80020cc:	4798      	blx	r3
 80020ce:	3601      	adds	r6, #1
 80020d0:	e7ee      	b.n	80020b0 <__libc_init_array+0xc>
 80020d2:	f855 3b04 	ldr.w	r3, [r5], #4
 80020d6:	4798      	blx	r3
 80020d8:	3601      	adds	r6, #1
 80020da:	e7f2      	b.n	80020c2 <__libc_init_array+0x1e>
 80020dc:	080040fc 	.word	0x080040fc
 80020e0:	080040fc 	.word	0x080040fc
 80020e4:	080040fc 	.word	0x080040fc
 80020e8:	08004100 	.word	0x08004100

080020ec <__retarget_lock_init_recursive>:
 80020ec:	4770      	bx	lr

080020ee <__retarget_lock_acquire_recursive>:
 80020ee:	4770      	bx	lr

080020f0 <__retarget_lock_release_recursive>:
 80020f0:	4770      	bx	lr

080020f2 <memcpy>:
 80020f2:	440a      	add	r2, r1
 80020f4:	4291      	cmp	r1, r2
 80020f6:	f100 33ff 	add.w	r3, r0, #4294967295
 80020fa:	d100      	bne.n	80020fe <memcpy+0xc>
 80020fc:	4770      	bx	lr
 80020fe:	b510      	push	{r4, lr}
 8002100:	f811 4b01 	ldrb.w	r4, [r1], #1
 8002104:	f803 4f01 	strb.w	r4, [r3, #1]!
 8002108:	4291      	cmp	r1, r2
 800210a:	d1f9      	bne.n	8002100 <memcpy+0xe>
 800210c:	bd10      	pop	{r4, pc}

0800210e <quorem>:
 800210e:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002112:	6903      	ldr	r3, [r0, #16]
 8002114:	690c      	ldr	r4, [r1, #16]
 8002116:	42a3      	cmp	r3, r4
 8002118:	4607      	mov	r7, r0
 800211a:	db7e      	blt.n	800221a <quorem+0x10c>
 800211c:	3c01      	subs	r4, #1
 800211e:	f101 0814 	add.w	r8, r1, #20
 8002122:	f100 0514 	add.w	r5, r0, #20
 8002126:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800212a:	9301      	str	r3, [sp, #4]
 800212c:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 8002130:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8002134:	3301      	adds	r3, #1
 8002136:	429a      	cmp	r2, r3
 8002138:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 800213c:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 8002140:	fbb2 f6f3 	udiv	r6, r2, r3
 8002144:	d331      	bcc.n	80021aa <quorem+0x9c>
 8002146:	f04f 0e00 	mov.w	lr, #0
 800214a:	4640      	mov	r0, r8
 800214c:	46ac      	mov	ip, r5
 800214e:	46f2      	mov	sl, lr
 8002150:	f850 2b04 	ldr.w	r2, [r0], #4
 8002154:	b293      	uxth	r3, r2
 8002156:	fb06 e303 	mla	r3, r6, r3, lr
 800215a:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 800215e:	0c1a      	lsrs	r2, r3, #16
 8002160:	b29b      	uxth	r3, r3
 8002162:	ebaa 0303 	sub.w	r3, sl, r3
 8002166:	f8dc a000 	ldr.w	sl, [ip]
 800216a:	fa13 f38a 	uxtah	r3, r3, sl
 800216e:	fb06 220e 	mla	r2, r6, lr, r2
 8002172:	9300      	str	r3, [sp, #0]
 8002174:	9b00      	ldr	r3, [sp, #0]
 8002176:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 800217a:	b292      	uxth	r2, r2
 800217c:	ebc2 421a 	rsb	r2, r2, sl, lsr #16
 8002180:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8002184:	f8bd 3000 	ldrh.w	r3, [sp]
 8002188:	4581      	cmp	r9, r0
 800218a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800218e:	f84c 3b04 	str.w	r3, [ip], #4
 8002192:	ea4f 4a22 	mov.w	sl, r2, asr #16
 8002196:	d2db      	bcs.n	8002150 <quorem+0x42>
 8002198:	f855 300b 	ldr.w	r3, [r5, fp]
 800219c:	b92b      	cbnz	r3, 80021aa <quorem+0x9c>
 800219e:	9b01      	ldr	r3, [sp, #4]
 80021a0:	3b04      	subs	r3, #4
 80021a2:	429d      	cmp	r5, r3
 80021a4:	461a      	mov	r2, r3
 80021a6:	d32c      	bcc.n	8002202 <quorem+0xf4>
 80021a8:	613c      	str	r4, [r7, #16]
 80021aa:	4638      	mov	r0, r7
 80021ac:	f001 f9a6 	bl	80034fc <__mcmp>
 80021b0:	2800      	cmp	r0, #0
 80021b2:	db22      	blt.n	80021fa <quorem+0xec>
 80021b4:	3601      	adds	r6, #1
 80021b6:	4629      	mov	r1, r5
 80021b8:	2000      	movs	r0, #0
 80021ba:	f858 2b04 	ldr.w	r2, [r8], #4
 80021be:	f8d1 c000 	ldr.w	ip, [r1]
 80021c2:	b293      	uxth	r3, r2
 80021c4:	1ac3      	subs	r3, r0, r3
 80021c6:	0c12      	lsrs	r2, r2, #16
 80021c8:	fa13 f38c 	uxtah	r3, r3, ip
 80021cc:	ebc2 421c 	rsb	r2, r2, ip, lsr #16
 80021d0:	eb02 4223 	add.w	r2, r2, r3, asr #16
 80021d4:	b29b      	uxth	r3, r3
 80021d6:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80021da:	45c1      	cmp	r9, r8
 80021dc:	f841 3b04 	str.w	r3, [r1], #4
 80021e0:	ea4f 4022 	mov.w	r0, r2, asr #16
 80021e4:	d2e9      	bcs.n	80021ba <quorem+0xac>
 80021e6:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 80021ea:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 80021ee:	b922      	cbnz	r2, 80021fa <quorem+0xec>
 80021f0:	3b04      	subs	r3, #4
 80021f2:	429d      	cmp	r5, r3
 80021f4:	461a      	mov	r2, r3
 80021f6:	d30a      	bcc.n	800220e <quorem+0x100>
 80021f8:	613c      	str	r4, [r7, #16]
 80021fa:	4630      	mov	r0, r6
 80021fc:	b003      	add	sp, #12
 80021fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002202:	6812      	ldr	r2, [r2, #0]
 8002204:	3b04      	subs	r3, #4
 8002206:	2a00      	cmp	r2, #0
 8002208:	d1ce      	bne.n	80021a8 <quorem+0x9a>
 800220a:	3c01      	subs	r4, #1
 800220c:	e7c9      	b.n	80021a2 <quorem+0x94>
 800220e:	6812      	ldr	r2, [r2, #0]
 8002210:	3b04      	subs	r3, #4
 8002212:	2a00      	cmp	r2, #0
 8002214:	d1f0      	bne.n	80021f8 <quorem+0xea>
 8002216:	3c01      	subs	r4, #1
 8002218:	e7eb      	b.n	80021f2 <quorem+0xe4>
 800221a:	2000      	movs	r0, #0
 800221c:	e7ee      	b.n	80021fc <quorem+0xee>
	...

08002220 <_dtoa_r>:
 8002220:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002224:	ed2d 8b04 	vpush	{d8-d9}
 8002228:	69c5      	ldr	r5, [r0, #28]
 800222a:	b093      	sub	sp, #76	; 0x4c
 800222c:	ed8d 0b02 	vstr	d0, [sp, #8]
 8002230:	ec57 6b10 	vmov	r6, r7, d0
 8002234:	f8dd 8080 	ldr.w	r8, [sp, #128]	; 0x80
 8002238:	9107      	str	r1, [sp, #28]
 800223a:	4604      	mov	r4, r0
 800223c:	920a      	str	r2, [sp, #40]	; 0x28
 800223e:	930d      	str	r3, [sp, #52]	; 0x34
 8002240:	b975      	cbnz	r5, 8002260 <_dtoa_r+0x40>
 8002242:	2010      	movs	r0, #16
 8002244:	f000 fe2a 	bl	8002e9c <malloc>
 8002248:	4602      	mov	r2, r0
 800224a:	61e0      	str	r0, [r4, #28]
 800224c:	b920      	cbnz	r0, 8002258 <_dtoa_r+0x38>
 800224e:	4bae      	ldr	r3, [pc, #696]	; (8002508 <_dtoa_r+0x2e8>)
 8002250:	21ef      	movs	r1, #239	; 0xef
 8002252:	48ae      	ldr	r0, [pc, #696]	; (800250c <_dtoa_r+0x2ec>)
 8002254:	f001 fcd8 	bl	8003c08 <__assert_func>
 8002258:	e9c0 5501 	strd	r5, r5, [r0, #4]
 800225c:	6005      	str	r5, [r0, #0]
 800225e:	60c5      	str	r5, [r0, #12]
 8002260:	69e3      	ldr	r3, [r4, #28]
 8002262:	6819      	ldr	r1, [r3, #0]
 8002264:	b151      	cbz	r1, 800227c <_dtoa_r+0x5c>
 8002266:	685a      	ldr	r2, [r3, #4]
 8002268:	604a      	str	r2, [r1, #4]
 800226a:	2301      	movs	r3, #1
 800226c:	4093      	lsls	r3, r2
 800226e:	608b      	str	r3, [r1, #8]
 8002270:	4620      	mov	r0, r4
 8002272:	f000 ff07 	bl	8003084 <_Bfree>
 8002276:	69e3      	ldr	r3, [r4, #28]
 8002278:	2200      	movs	r2, #0
 800227a:	601a      	str	r2, [r3, #0]
 800227c:	1e3b      	subs	r3, r7, #0
 800227e:	bfbb      	ittet	lt
 8002280:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
 8002284:	9303      	strlt	r3, [sp, #12]
 8002286:	2300      	movge	r3, #0
 8002288:	2201      	movlt	r2, #1
 800228a:	bfac      	ite	ge
 800228c:	f8c8 3000 	strge.w	r3, [r8]
 8002290:	f8c8 2000 	strlt.w	r2, [r8]
 8002294:	4b9e      	ldr	r3, [pc, #632]	; (8002510 <_dtoa_r+0x2f0>)
 8002296:	f8dd 800c 	ldr.w	r8, [sp, #12]
 800229a:	ea33 0308 	bics.w	r3, r3, r8
 800229e:	d11b      	bne.n	80022d8 <_dtoa_r+0xb8>
 80022a0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80022a2:	f242 730f 	movw	r3, #9999	; 0x270f
 80022a6:	6013      	str	r3, [r2, #0]
 80022a8:	f3c8 0313 	ubfx	r3, r8, #0, #20
 80022ac:	4333      	orrs	r3, r6
 80022ae:	f000 8593 	beq.w	8002dd8 <_dtoa_r+0xbb8>
 80022b2:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80022b4:	b963      	cbnz	r3, 80022d0 <_dtoa_r+0xb0>
 80022b6:	4b97      	ldr	r3, [pc, #604]	; (8002514 <_dtoa_r+0x2f4>)
 80022b8:	e027      	b.n	800230a <_dtoa_r+0xea>
 80022ba:	4b97      	ldr	r3, [pc, #604]	; (8002518 <_dtoa_r+0x2f8>)
 80022bc:	9300      	str	r3, [sp, #0]
 80022be:	3308      	adds	r3, #8
 80022c0:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80022c2:	6013      	str	r3, [r2, #0]
 80022c4:	9800      	ldr	r0, [sp, #0]
 80022c6:	b013      	add	sp, #76	; 0x4c
 80022c8:	ecbd 8b04 	vpop	{d8-d9}
 80022cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80022d0:	4b90      	ldr	r3, [pc, #576]	; (8002514 <_dtoa_r+0x2f4>)
 80022d2:	9300      	str	r3, [sp, #0]
 80022d4:	3303      	adds	r3, #3
 80022d6:	e7f3      	b.n	80022c0 <_dtoa_r+0xa0>
 80022d8:	ed9d 7b02 	vldr	d7, [sp, #8]
 80022dc:	2200      	movs	r2, #0
 80022de:	ec51 0b17 	vmov	r0, r1, d7
 80022e2:	eeb0 8a47 	vmov.f32	s16, s14
 80022e6:	eef0 8a67 	vmov.f32	s17, s15
 80022ea:	2300      	movs	r3, #0
 80022ec:	f7fe fbf4 	bl	8000ad8 <__aeabi_dcmpeq>
 80022f0:	4681      	mov	r9, r0
 80022f2:	b160      	cbz	r0, 800230e <_dtoa_r+0xee>
 80022f4:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80022f6:	2301      	movs	r3, #1
 80022f8:	6013      	str	r3, [r2, #0]
 80022fa:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80022fc:	2b00      	cmp	r3, #0
 80022fe:	f000 8568 	beq.w	8002dd2 <_dtoa_r+0xbb2>
 8002302:	4b86      	ldr	r3, [pc, #536]	; (800251c <_dtoa_r+0x2fc>)
 8002304:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8002306:	6013      	str	r3, [r2, #0]
 8002308:	3b01      	subs	r3, #1
 800230a:	9300      	str	r3, [sp, #0]
 800230c:	e7da      	b.n	80022c4 <_dtoa_r+0xa4>
 800230e:	aa10      	add	r2, sp, #64	; 0x40
 8002310:	a911      	add	r1, sp, #68	; 0x44
 8002312:	4620      	mov	r0, r4
 8002314:	eeb0 0a48 	vmov.f32	s0, s16
 8002318:	eef0 0a68 	vmov.f32	s1, s17
 800231c:	f001 f994 	bl	8003648 <__d2b>
 8002320:	f3c8 550a 	ubfx	r5, r8, #20, #11
 8002324:	4682      	mov	sl, r0
 8002326:	2d00      	cmp	r5, #0
 8002328:	d07f      	beq.n	800242a <_dtoa_r+0x20a>
 800232a:	ee18 3a90 	vmov	r3, s17
 800232e:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002332:	f043 537f 	orr.w	r3, r3, #1069547520	; 0x3fc00000
 8002336:	ec51 0b18 	vmov	r0, r1, d8
 800233a:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
 800233e:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 8002342:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 8002346:	4619      	mov	r1, r3
 8002348:	2200      	movs	r2, #0
 800234a:	4b75      	ldr	r3, [pc, #468]	; (8002520 <_dtoa_r+0x300>)
 800234c:	f7fd ffa4 	bl	8000298 <__aeabi_dsub>
 8002350:	a367      	add	r3, pc, #412	; (adr r3, 80024f0 <_dtoa_r+0x2d0>)
 8002352:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002356:	f7fe f957 	bl	8000608 <__aeabi_dmul>
 800235a:	a367      	add	r3, pc, #412	; (adr r3, 80024f8 <_dtoa_r+0x2d8>)
 800235c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002360:	f7fd ff9c 	bl	800029c <__adddf3>
 8002364:	4606      	mov	r6, r0
 8002366:	4628      	mov	r0, r5
 8002368:	460f      	mov	r7, r1
 800236a:	f7fe f8e3 	bl	8000534 <__aeabi_i2d>
 800236e:	a364      	add	r3, pc, #400	; (adr r3, 8002500 <_dtoa_r+0x2e0>)
 8002370:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002374:	f7fe f948 	bl	8000608 <__aeabi_dmul>
 8002378:	4602      	mov	r2, r0
 800237a:	460b      	mov	r3, r1
 800237c:	4630      	mov	r0, r6
 800237e:	4639      	mov	r1, r7
 8002380:	f7fd ff8c 	bl	800029c <__adddf3>
 8002384:	4606      	mov	r6, r0
 8002386:	460f      	mov	r7, r1
 8002388:	f7fe fbee 	bl	8000b68 <__aeabi_d2iz>
 800238c:	2200      	movs	r2, #0
 800238e:	4683      	mov	fp, r0
 8002390:	2300      	movs	r3, #0
 8002392:	4630      	mov	r0, r6
 8002394:	4639      	mov	r1, r7
 8002396:	f7fe fba9 	bl	8000aec <__aeabi_dcmplt>
 800239a:	b148      	cbz	r0, 80023b0 <_dtoa_r+0x190>
 800239c:	4658      	mov	r0, fp
 800239e:	f7fe f8c9 	bl	8000534 <__aeabi_i2d>
 80023a2:	4632      	mov	r2, r6
 80023a4:	463b      	mov	r3, r7
 80023a6:	f7fe fb97 	bl	8000ad8 <__aeabi_dcmpeq>
 80023aa:	b908      	cbnz	r0, 80023b0 <_dtoa_r+0x190>
 80023ac:	f10b 3bff 	add.w	fp, fp, #4294967295
 80023b0:	f1bb 0f16 	cmp.w	fp, #22
 80023b4:	d857      	bhi.n	8002466 <_dtoa_r+0x246>
 80023b6:	4b5b      	ldr	r3, [pc, #364]	; (8002524 <_dtoa_r+0x304>)
 80023b8:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 80023bc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80023c0:	ec51 0b18 	vmov	r0, r1, d8
 80023c4:	f7fe fb92 	bl	8000aec <__aeabi_dcmplt>
 80023c8:	2800      	cmp	r0, #0
 80023ca:	d04e      	beq.n	800246a <_dtoa_r+0x24a>
 80023cc:	f10b 3bff 	add.w	fp, fp, #4294967295
 80023d0:	2300      	movs	r3, #0
 80023d2:	930c      	str	r3, [sp, #48]	; 0x30
 80023d4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80023d6:	1b5b      	subs	r3, r3, r5
 80023d8:	1e5a      	subs	r2, r3, #1
 80023da:	bf45      	ittet	mi
 80023dc:	f1c3 0301 	rsbmi	r3, r3, #1
 80023e0:	9305      	strmi	r3, [sp, #20]
 80023e2:	2300      	movpl	r3, #0
 80023e4:	2300      	movmi	r3, #0
 80023e6:	9206      	str	r2, [sp, #24]
 80023e8:	bf54      	ite	pl
 80023ea:	9305      	strpl	r3, [sp, #20]
 80023ec:	9306      	strmi	r3, [sp, #24]
 80023ee:	f1bb 0f00 	cmp.w	fp, #0
 80023f2:	db3c      	blt.n	800246e <_dtoa_r+0x24e>
 80023f4:	9b06      	ldr	r3, [sp, #24]
 80023f6:	f8cd b02c 	str.w	fp, [sp, #44]	; 0x2c
 80023fa:	445b      	add	r3, fp
 80023fc:	9306      	str	r3, [sp, #24]
 80023fe:	2300      	movs	r3, #0
 8002400:	9308      	str	r3, [sp, #32]
 8002402:	9b07      	ldr	r3, [sp, #28]
 8002404:	2b09      	cmp	r3, #9
 8002406:	d868      	bhi.n	80024da <_dtoa_r+0x2ba>
 8002408:	2b05      	cmp	r3, #5
 800240a:	bfc4      	itt	gt
 800240c:	3b04      	subgt	r3, #4
 800240e:	9307      	strgt	r3, [sp, #28]
 8002410:	9b07      	ldr	r3, [sp, #28]
 8002412:	f1a3 0302 	sub.w	r3, r3, #2
 8002416:	bfcc      	ite	gt
 8002418:	2500      	movgt	r5, #0
 800241a:	2501      	movle	r5, #1
 800241c:	2b03      	cmp	r3, #3
 800241e:	f200 8085 	bhi.w	800252c <_dtoa_r+0x30c>
 8002422:	e8df f003 	tbb	[pc, r3]
 8002426:	3b2e      	.short	0x3b2e
 8002428:	5839      	.short	0x5839
 800242a:	e9dd 5310 	ldrd	r5, r3, [sp, #64]	; 0x40
 800242e:	441d      	add	r5, r3
 8002430:	f205 4332 	addw	r3, r5, #1074	; 0x432
 8002434:	2b20      	cmp	r3, #32
 8002436:	bfc1      	itttt	gt
 8002438:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 800243c:	fa08 f803 	lslgt.w	r8, r8, r3
 8002440:	f205 4312 	addwgt	r3, r5, #1042	; 0x412
 8002444:	fa26 f303 	lsrgt.w	r3, r6, r3
 8002448:	bfd6      	itet	le
 800244a:	f1c3 0320 	rsble	r3, r3, #32
 800244e:	ea48 0003 	orrgt.w	r0, r8, r3
 8002452:	fa06 f003 	lslle.w	r0, r6, r3
 8002456:	f7fe f85d 	bl	8000514 <__aeabi_ui2d>
 800245a:	2201      	movs	r2, #1
 800245c:	f1a1 73f8 	sub.w	r3, r1, #32505856	; 0x1f00000
 8002460:	3d01      	subs	r5, #1
 8002462:	920e      	str	r2, [sp, #56]	; 0x38
 8002464:	e76f      	b.n	8002346 <_dtoa_r+0x126>
 8002466:	2301      	movs	r3, #1
 8002468:	e7b3      	b.n	80023d2 <_dtoa_r+0x1b2>
 800246a:	900c      	str	r0, [sp, #48]	; 0x30
 800246c:	e7b2      	b.n	80023d4 <_dtoa_r+0x1b4>
 800246e:	9b05      	ldr	r3, [sp, #20]
 8002470:	eba3 030b 	sub.w	r3, r3, fp
 8002474:	9305      	str	r3, [sp, #20]
 8002476:	f1cb 0300 	rsb	r3, fp, #0
 800247a:	9308      	str	r3, [sp, #32]
 800247c:	2300      	movs	r3, #0
 800247e:	930b      	str	r3, [sp, #44]	; 0x2c
 8002480:	e7bf      	b.n	8002402 <_dtoa_r+0x1e2>
 8002482:	2300      	movs	r3, #0
 8002484:	9309      	str	r3, [sp, #36]	; 0x24
 8002486:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002488:	2b00      	cmp	r3, #0
 800248a:	dc52      	bgt.n	8002532 <_dtoa_r+0x312>
 800248c:	2301      	movs	r3, #1
 800248e:	9301      	str	r3, [sp, #4]
 8002490:	9304      	str	r3, [sp, #16]
 8002492:	461a      	mov	r2, r3
 8002494:	920a      	str	r2, [sp, #40]	; 0x28
 8002496:	e00b      	b.n	80024b0 <_dtoa_r+0x290>
 8002498:	2301      	movs	r3, #1
 800249a:	e7f3      	b.n	8002484 <_dtoa_r+0x264>
 800249c:	2300      	movs	r3, #0
 800249e:	9309      	str	r3, [sp, #36]	; 0x24
 80024a0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80024a2:	445b      	add	r3, fp
 80024a4:	9301      	str	r3, [sp, #4]
 80024a6:	3301      	adds	r3, #1
 80024a8:	2b01      	cmp	r3, #1
 80024aa:	9304      	str	r3, [sp, #16]
 80024ac:	bfb8      	it	lt
 80024ae:	2301      	movlt	r3, #1
 80024b0:	69e0      	ldr	r0, [r4, #28]
 80024b2:	2100      	movs	r1, #0
 80024b4:	2204      	movs	r2, #4
 80024b6:	f102 0614 	add.w	r6, r2, #20
 80024ba:	429e      	cmp	r6, r3
 80024bc:	d93d      	bls.n	800253a <_dtoa_r+0x31a>
 80024be:	6041      	str	r1, [r0, #4]
 80024c0:	4620      	mov	r0, r4
 80024c2:	f000 fd9f 	bl	8003004 <_Balloc>
 80024c6:	9000      	str	r0, [sp, #0]
 80024c8:	2800      	cmp	r0, #0
 80024ca:	d139      	bne.n	8002540 <_dtoa_r+0x320>
 80024cc:	4b16      	ldr	r3, [pc, #88]	; (8002528 <_dtoa_r+0x308>)
 80024ce:	4602      	mov	r2, r0
 80024d0:	f240 11af 	movw	r1, #431	; 0x1af
 80024d4:	e6bd      	b.n	8002252 <_dtoa_r+0x32>
 80024d6:	2301      	movs	r3, #1
 80024d8:	e7e1      	b.n	800249e <_dtoa_r+0x27e>
 80024da:	2501      	movs	r5, #1
 80024dc:	2300      	movs	r3, #0
 80024de:	9307      	str	r3, [sp, #28]
 80024e0:	9509      	str	r5, [sp, #36]	; 0x24
 80024e2:	f04f 33ff 	mov.w	r3, #4294967295
 80024e6:	9301      	str	r3, [sp, #4]
 80024e8:	9304      	str	r3, [sp, #16]
 80024ea:	2200      	movs	r2, #0
 80024ec:	2312      	movs	r3, #18
 80024ee:	e7d1      	b.n	8002494 <_dtoa_r+0x274>
 80024f0:	636f4361 	.word	0x636f4361
 80024f4:	3fd287a7 	.word	0x3fd287a7
 80024f8:	8b60c8b3 	.word	0x8b60c8b3
 80024fc:	3fc68a28 	.word	0x3fc68a28
 8002500:	509f79fb 	.word	0x509f79fb
 8002504:	3fd34413 	.word	0x3fd34413
 8002508:	08003dc9 	.word	0x08003dc9
 800250c:	08003de0 	.word	0x08003de0
 8002510:	7ff00000 	.word	0x7ff00000
 8002514:	08003dc5 	.word	0x08003dc5
 8002518:	08003dbc 	.word	0x08003dbc
 800251c:	08003d99 	.word	0x08003d99
 8002520:	3ff80000 	.word	0x3ff80000
 8002524:	08003ed0 	.word	0x08003ed0
 8002528:	08003e38 	.word	0x08003e38
 800252c:	2301      	movs	r3, #1
 800252e:	9309      	str	r3, [sp, #36]	; 0x24
 8002530:	e7d7      	b.n	80024e2 <_dtoa_r+0x2c2>
 8002532:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002534:	9301      	str	r3, [sp, #4]
 8002536:	9304      	str	r3, [sp, #16]
 8002538:	e7ba      	b.n	80024b0 <_dtoa_r+0x290>
 800253a:	3101      	adds	r1, #1
 800253c:	0052      	lsls	r2, r2, #1
 800253e:	e7ba      	b.n	80024b6 <_dtoa_r+0x296>
 8002540:	69e3      	ldr	r3, [r4, #28]
 8002542:	9a00      	ldr	r2, [sp, #0]
 8002544:	601a      	str	r2, [r3, #0]
 8002546:	9b04      	ldr	r3, [sp, #16]
 8002548:	2b0e      	cmp	r3, #14
 800254a:	f200 80a8 	bhi.w	800269e <_dtoa_r+0x47e>
 800254e:	2d00      	cmp	r5, #0
 8002550:	f000 80a5 	beq.w	800269e <_dtoa_r+0x47e>
 8002554:	f1bb 0f00 	cmp.w	fp, #0
 8002558:	dd38      	ble.n	80025cc <_dtoa_r+0x3ac>
 800255a:	4bc0      	ldr	r3, [pc, #768]	; (800285c <_dtoa_r+0x63c>)
 800255c:	f00b 020f 	and.w	r2, fp, #15
 8002560:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8002564:	f41b 7f80 	tst.w	fp, #256	; 0x100
 8002568:	e9d3 6700 	ldrd	r6, r7, [r3]
 800256c:	ea4f 182b 	mov.w	r8, fp, asr #4
 8002570:	d019      	beq.n	80025a6 <_dtoa_r+0x386>
 8002572:	4bbb      	ldr	r3, [pc, #748]	; (8002860 <_dtoa_r+0x640>)
 8002574:	ec51 0b18 	vmov	r0, r1, d8
 8002578:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 800257c:	f7fe f96e 	bl	800085c <__aeabi_ddiv>
 8002580:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002584:	f008 080f 	and.w	r8, r8, #15
 8002588:	2503      	movs	r5, #3
 800258a:	f8df 92d4 	ldr.w	r9, [pc, #724]	; 8002860 <_dtoa_r+0x640>
 800258e:	f1b8 0f00 	cmp.w	r8, #0
 8002592:	d10a      	bne.n	80025aa <_dtoa_r+0x38a>
 8002594:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8002598:	4632      	mov	r2, r6
 800259a:	463b      	mov	r3, r7
 800259c:	f7fe f95e 	bl	800085c <__aeabi_ddiv>
 80025a0:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80025a4:	e02b      	b.n	80025fe <_dtoa_r+0x3de>
 80025a6:	2502      	movs	r5, #2
 80025a8:	e7ef      	b.n	800258a <_dtoa_r+0x36a>
 80025aa:	f018 0f01 	tst.w	r8, #1
 80025ae:	d008      	beq.n	80025c2 <_dtoa_r+0x3a2>
 80025b0:	4630      	mov	r0, r6
 80025b2:	4639      	mov	r1, r7
 80025b4:	e9d9 2300 	ldrd	r2, r3, [r9]
 80025b8:	f7fe f826 	bl	8000608 <__aeabi_dmul>
 80025bc:	3501      	adds	r5, #1
 80025be:	4606      	mov	r6, r0
 80025c0:	460f      	mov	r7, r1
 80025c2:	ea4f 0868 	mov.w	r8, r8, asr #1
 80025c6:	f109 0908 	add.w	r9, r9, #8
 80025ca:	e7e0      	b.n	800258e <_dtoa_r+0x36e>
 80025cc:	f000 809f 	beq.w	800270e <_dtoa_r+0x4ee>
 80025d0:	f1cb 0600 	rsb	r6, fp, #0
 80025d4:	4ba1      	ldr	r3, [pc, #644]	; (800285c <_dtoa_r+0x63c>)
 80025d6:	4fa2      	ldr	r7, [pc, #648]	; (8002860 <_dtoa_r+0x640>)
 80025d8:	f006 020f 	and.w	r2, r6, #15
 80025dc:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80025e0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80025e4:	ec51 0b18 	vmov	r0, r1, d8
 80025e8:	f7fe f80e 	bl	8000608 <__aeabi_dmul>
 80025ec:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80025f0:	1136      	asrs	r6, r6, #4
 80025f2:	2300      	movs	r3, #0
 80025f4:	2502      	movs	r5, #2
 80025f6:	2e00      	cmp	r6, #0
 80025f8:	d17e      	bne.n	80026f8 <_dtoa_r+0x4d8>
 80025fa:	2b00      	cmp	r3, #0
 80025fc:	d1d0      	bne.n	80025a0 <_dtoa_r+0x380>
 80025fe:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8002600:	e9dd 8902 	ldrd	r8, r9, [sp, #8]
 8002604:	2b00      	cmp	r3, #0
 8002606:	f000 8084 	beq.w	8002712 <_dtoa_r+0x4f2>
 800260a:	4b96      	ldr	r3, [pc, #600]	; (8002864 <_dtoa_r+0x644>)
 800260c:	2200      	movs	r2, #0
 800260e:	4640      	mov	r0, r8
 8002610:	4649      	mov	r1, r9
 8002612:	f7fe fa6b 	bl	8000aec <__aeabi_dcmplt>
 8002616:	2800      	cmp	r0, #0
 8002618:	d07b      	beq.n	8002712 <_dtoa_r+0x4f2>
 800261a:	9b04      	ldr	r3, [sp, #16]
 800261c:	2b00      	cmp	r3, #0
 800261e:	d078      	beq.n	8002712 <_dtoa_r+0x4f2>
 8002620:	9b01      	ldr	r3, [sp, #4]
 8002622:	2b00      	cmp	r3, #0
 8002624:	dd39      	ble.n	800269a <_dtoa_r+0x47a>
 8002626:	4b90      	ldr	r3, [pc, #576]	; (8002868 <_dtoa_r+0x648>)
 8002628:	2200      	movs	r2, #0
 800262a:	4640      	mov	r0, r8
 800262c:	4649      	mov	r1, r9
 800262e:	f7fd ffeb 	bl	8000608 <__aeabi_dmul>
 8002632:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002636:	9e01      	ldr	r6, [sp, #4]
 8002638:	f10b 37ff 	add.w	r7, fp, #4294967295
 800263c:	3501      	adds	r5, #1
 800263e:	e9dd 8902 	ldrd	r8, r9, [sp, #8]
 8002642:	4628      	mov	r0, r5
 8002644:	f7fd ff76 	bl	8000534 <__aeabi_i2d>
 8002648:	4642      	mov	r2, r8
 800264a:	464b      	mov	r3, r9
 800264c:	f7fd ffdc 	bl	8000608 <__aeabi_dmul>
 8002650:	4b86      	ldr	r3, [pc, #536]	; (800286c <_dtoa_r+0x64c>)
 8002652:	2200      	movs	r2, #0
 8002654:	f7fd fe22 	bl	800029c <__adddf3>
 8002658:	f1a1 7350 	sub.w	r3, r1, #54525952	; 0x3400000
 800265c:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002660:	9303      	str	r3, [sp, #12]
 8002662:	2e00      	cmp	r6, #0
 8002664:	d158      	bne.n	8002718 <_dtoa_r+0x4f8>
 8002666:	4b82      	ldr	r3, [pc, #520]	; (8002870 <_dtoa_r+0x650>)
 8002668:	2200      	movs	r2, #0
 800266a:	4640      	mov	r0, r8
 800266c:	4649      	mov	r1, r9
 800266e:	f7fd fe13 	bl	8000298 <__aeabi_dsub>
 8002672:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8002676:	4680      	mov	r8, r0
 8002678:	4689      	mov	r9, r1
 800267a:	f7fe fa55 	bl	8000b28 <__aeabi_dcmpgt>
 800267e:	2800      	cmp	r0, #0
 8002680:	f040 8296 	bne.w	8002bb0 <_dtoa_r+0x990>
 8002684:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 8002688:	4640      	mov	r0, r8
 800268a:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800268e:	4649      	mov	r1, r9
 8002690:	f7fe fa2c 	bl	8000aec <__aeabi_dcmplt>
 8002694:	2800      	cmp	r0, #0
 8002696:	f040 8289 	bne.w	8002bac <_dtoa_r+0x98c>
 800269a:	ed8d 8b02 	vstr	d8, [sp, #8]
 800269e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80026a0:	2b00      	cmp	r3, #0
 80026a2:	f2c0 814e 	blt.w	8002942 <_dtoa_r+0x722>
 80026a6:	f1bb 0f0e 	cmp.w	fp, #14
 80026aa:	f300 814a 	bgt.w	8002942 <_dtoa_r+0x722>
 80026ae:	4b6b      	ldr	r3, [pc, #428]	; (800285c <_dtoa_r+0x63c>)
 80026b0:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 80026b4:	e9d3 8900 	ldrd	r8, r9, [r3]
 80026b8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80026ba:	2b00      	cmp	r3, #0
 80026bc:	f280 80dc 	bge.w	8002878 <_dtoa_r+0x658>
 80026c0:	9b04      	ldr	r3, [sp, #16]
 80026c2:	2b00      	cmp	r3, #0
 80026c4:	f300 80d8 	bgt.w	8002878 <_dtoa_r+0x658>
 80026c8:	f040 826f 	bne.w	8002baa <_dtoa_r+0x98a>
 80026cc:	4b68      	ldr	r3, [pc, #416]	; (8002870 <_dtoa_r+0x650>)
 80026ce:	2200      	movs	r2, #0
 80026d0:	4640      	mov	r0, r8
 80026d2:	4649      	mov	r1, r9
 80026d4:	f7fd ff98 	bl	8000608 <__aeabi_dmul>
 80026d8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80026dc:	f7fe fa1a 	bl	8000b14 <__aeabi_dcmpge>
 80026e0:	9e04      	ldr	r6, [sp, #16]
 80026e2:	4637      	mov	r7, r6
 80026e4:	2800      	cmp	r0, #0
 80026e6:	f040 8245 	bne.w	8002b74 <_dtoa_r+0x954>
 80026ea:	9d00      	ldr	r5, [sp, #0]
 80026ec:	2331      	movs	r3, #49	; 0x31
 80026ee:	f805 3b01 	strb.w	r3, [r5], #1
 80026f2:	f10b 0b01 	add.w	fp, fp, #1
 80026f6:	e241      	b.n	8002b7c <_dtoa_r+0x95c>
 80026f8:	07f2      	lsls	r2, r6, #31
 80026fa:	d505      	bpl.n	8002708 <_dtoa_r+0x4e8>
 80026fc:	e9d7 2300 	ldrd	r2, r3, [r7]
 8002700:	f7fd ff82 	bl	8000608 <__aeabi_dmul>
 8002704:	3501      	adds	r5, #1
 8002706:	2301      	movs	r3, #1
 8002708:	1076      	asrs	r6, r6, #1
 800270a:	3708      	adds	r7, #8
 800270c:	e773      	b.n	80025f6 <_dtoa_r+0x3d6>
 800270e:	2502      	movs	r5, #2
 8002710:	e775      	b.n	80025fe <_dtoa_r+0x3de>
 8002712:	9e04      	ldr	r6, [sp, #16]
 8002714:	465f      	mov	r7, fp
 8002716:	e792      	b.n	800263e <_dtoa_r+0x41e>
 8002718:	9900      	ldr	r1, [sp, #0]
 800271a:	4b50      	ldr	r3, [pc, #320]	; (800285c <_dtoa_r+0x63c>)
 800271c:	ed9d 7b02 	vldr	d7, [sp, #8]
 8002720:	4431      	add	r1, r6
 8002722:	9102      	str	r1, [sp, #8]
 8002724:	9909      	ldr	r1, [sp, #36]	; 0x24
 8002726:	eeb0 9a47 	vmov.f32	s18, s14
 800272a:	eef0 9a67 	vmov.f32	s19, s15
 800272e:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 8002732:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8002736:	2900      	cmp	r1, #0
 8002738:	d044      	beq.n	80027c4 <_dtoa_r+0x5a4>
 800273a:	494e      	ldr	r1, [pc, #312]	; (8002874 <_dtoa_r+0x654>)
 800273c:	2000      	movs	r0, #0
 800273e:	f7fe f88d 	bl	800085c <__aeabi_ddiv>
 8002742:	ec53 2b19 	vmov	r2, r3, d9
 8002746:	f7fd fda7 	bl	8000298 <__aeabi_dsub>
 800274a:	9d00      	ldr	r5, [sp, #0]
 800274c:	ec41 0b19 	vmov	d9, r0, r1
 8002750:	4649      	mov	r1, r9
 8002752:	4640      	mov	r0, r8
 8002754:	f7fe fa08 	bl	8000b68 <__aeabi_d2iz>
 8002758:	4606      	mov	r6, r0
 800275a:	f7fd feeb 	bl	8000534 <__aeabi_i2d>
 800275e:	4602      	mov	r2, r0
 8002760:	460b      	mov	r3, r1
 8002762:	4640      	mov	r0, r8
 8002764:	4649      	mov	r1, r9
 8002766:	f7fd fd97 	bl	8000298 <__aeabi_dsub>
 800276a:	3630      	adds	r6, #48	; 0x30
 800276c:	f805 6b01 	strb.w	r6, [r5], #1
 8002770:	ec53 2b19 	vmov	r2, r3, d9
 8002774:	4680      	mov	r8, r0
 8002776:	4689      	mov	r9, r1
 8002778:	f7fe f9b8 	bl	8000aec <__aeabi_dcmplt>
 800277c:	2800      	cmp	r0, #0
 800277e:	d164      	bne.n	800284a <_dtoa_r+0x62a>
 8002780:	4642      	mov	r2, r8
 8002782:	464b      	mov	r3, r9
 8002784:	4937      	ldr	r1, [pc, #220]	; (8002864 <_dtoa_r+0x644>)
 8002786:	2000      	movs	r0, #0
 8002788:	f7fd fd86 	bl	8000298 <__aeabi_dsub>
 800278c:	ec53 2b19 	vmov	r2, r3, d9
 8002790:	f7fe f9ac 	bl	8000aec <__aeabi_dcmplt>
 8002794:	2800      	cmp	r0, #0
 8002796:	f040 80b6 	bne.w	8002906 <_dtoa_r+0x6e6>
 800279a:	9b02      	ldr	r3, [sp, #8]
 800279c:	429d      	cmp	r5, r3
 800279e:	f43f af7c 	beq.w	800269a <_dtoa_r+0x47a>
 80027a2:	4b31      	ldr	r3, [pc, #196]	; (8002868 <_dtoa_r+0x648>)
 80027a4:	ec51 0b19 	vmov	r0, r1, d9
 80027a8:	2200      	movs	r2, #0
 80027aa:	f7fd ff2d 	bl	8000608 <__aeabi_dmul>
 80027ae:	4b2e      	ldr	r3, [pc, #184]	; (8002868 <_dtoa_r+0x648>)
 80027b0:	ec41 0b19 	vmov	d9, r0, r1
 80027b4:	2200      	movs	r2, #0
 80027b6:	4640      	mov	r0, r8
 80027b8:	4649      	mov	r1, r9
 80027ba:	f7fd ff25 	bl	8000608 <__aeabi_dmul>
 80027be:	4680      	mov	r8, r0
 80027c0:	4689      	mov	r9, r1
 80027c2:	e7c5      	b.n	8002750 <_dtoa_r+0x530>
 80027c4:	ec51 0b17 	vmov	r0, r1, d7
 80027c8:	f7fd ff1e 	bl	8000608 <__aeabi_dmul>
 80027cc:	9b02      	ldr	r3, [sp, #8]
 80027ce:	9d00      	ldr	r5, [sp, #0]
 80027d0:	930f      	str	r3, [sp, #60]	; 0x3c
 80027d2:	ec41 0b19 	vmov	d9, r0, r1
 80027d6:	4649      	mov	r1, r9
 80027d8:	4640      	mov	r0, r8
 80027da:	f7fe f9c5 	bl	8000b68 <__aeabi_d2iz>
 80027de:	4606      	mov	r6, r0
 80027e0:	f7fd fea8 	bl	8000534 <__aeabi_i2d>
 80027e4:	3630      	adds	r6, #48	; 0x30
 80027e6:	4602      	mov	r2, r0
 80027e8:	460b      	mov	r3, r1
 80027ea:	4640      	mov	r0, r8
 80027ec:	4649      	mov	r1, r9
 80027ee:	f7fd fd53 	bl	8000298 <__aeabi_dsub>
 80027f2:	f805 6b01 	strb.w	r6, [r5], #1
 80027f6:	9b02      	ldr	r3, [sp, #8]
 80027f8:	429d      	cmp	r5, r3
 80027fa:	4680      	mov	r8, r0
 80027fc:	4689      	mov	r9, r1
 80027fe:	f04f 0200 	mov.w	r2, #0
 8002802:	d124      	bne.n	800284e <_dtoa_r+0x62e>
 8002804:	4b1b      	ldr	r3, [pc, #108]	; (8002874 <_dtoa_r+0x654>)
 8002806:	ec51 0b19 	vmov	r0, r1, d9
 800280a:	f7fd fd47 	bl	800029c <__adddf3>
 800280e:	4602      	mov	r2, r0
 8002810:	460b      	mov	r3, r1
 8002812:	4640      	mov	r0, r8
 8002814:	4649      	mov	r1, r9
 8002816:	f7fe f987 	bl	8000b28 <__aeabi_dcmpgt>
 800281a:	2800      	cmp	r0, #0
 800281c:	d173      	bne.n	8002906 <_dtoa_r+0x6e6>
 800281e:	ec53 2b19 	vmov	r2, r3, d9
 8002822:	4914      	ldr	r1, [pc, #80]	; (8002874 <_dtoa_r+0x654>)
 8002824:	2000      	movs	r0, #0
 8002826:	f7fd fd37 	bl	8000298 <__aeabi_dsub>
 800282a:	4602      	mov	r2, r0
 800282c:	460b      	mov	r3, r1
 800282e:	4640      	mov	r0, r8
 8002830:	4649      	mov	r1, r9
 8002832:	f7fe f95b 	bl	8000aec <__aeabi_dcmplt>
 8002836:	2800      	cmp	r0, #0
 8002838:	f43f af2f 	beq.w	800269a <_dtoa_r+0x47a>
 800283c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 800283e:	1e6b      	subs	r3, r5, #1
 8002840:	930f      	str	r3, [sp, #60]	; 0x3c
 8002842:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 8002846:	2b30      	cmp	r3, #48	; 0x30
 8002848:	d0f8      	beq.n	800283c <_dtoa_r+0x61c>
 800284a:	46bb      	mov	fp, r7
 800284c:	e04a      	b.n	80028e4 <_dtoa_r+0x6c4>
 800284e:	4b06      	ldr	r3, [pc, #24]	; (8002868 <_dtoa_r+0x648>)
 8002850:	f7fd feda 	bl	8000608 <__aeabi_dmul>
 8002854:	4680      	mov	r8, r0
 8002856:	4689      	mov	r9, r1
 8002858:	e7bd      	b.n	80027d6 <_dtoa_r+0x5b6>
 800285a:	bf00      	nop
 800285c:	08003ed0 	.word	0x08003ed0
 8002860:	08003ea8 	.word	0x08003ea8
 8002864:	3ff00000 	.word	0x3ff00000
 8002868:	40240000 	.word	0x40240000
 800286c:	401c0000 	.word	0x401c0000
 8002870:	40140000 	.word	0x40140000
 8002874:	3fe00000 	.word	0x3fe00000
 8002878:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 800287c:	9d00      	ldr	r5, [sp, #0]
 800287e:	4642      	mov	r2, r8
 8002880:	464b      	mov	r3, r9
 8002882:	4630      	mov	r0, r6
 8002884:	4639      	mov	r1, r7
 8002886:	f7fd ffe9 	bl	800085c <__aeabi_ddiv>
 800288a:	f7fe f96d 	bl	8000b68 <__aeabi_d2iz>
 800288e:	9001      	str	r0, [sp, #4]
 8002890:	f7fd fe50 	bl	8000534 <__aeabi_i2d>
 8002894:	4642      	mov	r2, r8
 8002896:	464b      	mov	r3, r9
 8002898:	f7fd feb6 	bl	8000608 <__aeabi_dmul>
 800289c:	4602      	mov	r2, r0
 800289e:	460b      	mov	r3, r1
 80028a0:	4630      	mov	r0, r6
 80028a2:	4639      	mov	r1, r7
 80028a4:	f7fd fcf8 	bl	8000298 <__aeabi_dsub>
 80028a8:	9e01      	ldr	r6, [sp, #4]
 80028aa:	9f04      	ldr	r7, [sp, #16]
 80028ac:	3630      	adds	r6, #48	; 0x30
 80028ae:	f805 6b01 	strb.w	r6, [r5], #1
 80028b2:	9e00      	ldr	r6, [sp, #0]
 80028b4:	1bae      	subs	r6, r5, r6
 80028b6:	42b7      	cmp	r7, r6
 80028b8:	4602      	mov	r2, r0
 80028ba:	460b      	mov	r3, r1
 80028bc:	d134      	bne.n	8002928 <_dtoa_r+0x708>
 80028be:	f7fd fced 	bl	800029c <__adddf3>
 80028c2:	4642      	mov	r2, r8
 80028c4:	464b      	mov	r3, r9
 80028c6:	4606      	mov	r6, r0
 80028c8:	460f      	mov	r7, r1
 80028ca:	f7fe f92d 	bl	8000b28 <__aeabi_dcmpgt>
 80028ce:	b9c8      	cbnz	r0, 8002904 <_dtoa_r+0x6e4>
 80028d0:	4642      	mov	r2, r8
 80028d2:	464b      	mov	r3, r9
 80028d4:	4630      	mov	r0, r6
 80028d6:	4639      	mov	r1, r7
 80028d8:	f7fe f8fe 	bl	8000ad8 <__aeabi_dcmpeq>
 80028dc:	b110      	cbz	r0, 80028e4 <_dtoa_r+0x6c4>
 80028de:	9b01      	ldr	r3, [sp, #4]
 80028e0:	07db      	lsls	r3, r3, #31
 80028e2:	d40f      	bmi.n	8002904 <_dtoa_r+0x6e4>
 80028e4:	4651      	mov	r1, sl
 80028e6:	4620      	mov	r0, r4
 80028e8:	f000 fbcc 	bl	8003084 <_Bfree>
 80028ec:	2300      	movs	r3, #0
 80028ee:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80028f0:	702b      	strb	r3, [r5, #0]
 80028f2:	f10b 0301 	add.w	r3, fp, #1
 80028f6:	6013      	str	r3, [r2, #0]
 80028f8:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80028fa:	2b00      	cmp	r3, #0
 80028fc:	f43f ace2 	beq.w	80022c4 <_dtoa_r+0xa4>
 8002900:	601d      	str	r5, [r3, #0]
 8002902:	e4df      	b.n	80022c4 <_dtoa_r+0xa4>
 8002904:	465f      	mov	r7, fp
 8002906:	462b      	mov	r3, r5
 8002908:	461d      	mov	r5, r3
 800290a:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800290e:	2a39      	cmp	r2, #57	; 0x39
 8002910:	d106      	bne.n	8002920 <_dtoa_r+0x700>
 8002912:	9a00      	ldr	r2, [sp, #0]
 8002914:	429a      	cmp	r2, r3
 8002916:	d1f7      	bne.n	8002908 <_dtoa_r+0x6e8>
 8002918:	9900      	ldr	r1, [sp, #0]
 800291a:	2230      	movs	r2, #48	; 0x30
 800291c:	3701      	adds	r7, #1
 800291e:	700a      	strb	r2, [r1, #0]
 8002920:	781a      	ldrb	r2, [r3, #0]
 8002922:	3201      	adds	r2, #1
 8002924:	701a      	strb	r2, [r3, #0]
 8002926:	e790      	b.n	800284a <_dtoa_r+0x62a>
 8002928:	4ba3      	ldr	r3, [pc, #652]	; (8002bb8 <_dtoa_r+0x998>)
 800292a:	2200      	movs	r2, #0
 800292c:	f7fd fe6c 	bl	8000608 <__aeabi_dmul>
 8002930:	2200      	movs	r2, #0
 8002932:	2300      	movs	r3, #0
 8002934:	4606      	mov	r6, r0
 8002936:	460f      	mov	r7, r1
 8002938:	f7fe f8ce 	bl	8000ad8 <__aeabi_dcmpeq>
 800293c:	2800      	cmp	r0, #0
 800293e:	d09e      	beq.n	800287e <_dtoa_r+0x65e>
 8002940:	e7d0      	b.n	80028e4 <_dtoa_r+0x6c4>
 8002942:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8002944:	2a00      	cmp	r2, #0
 8002946:	f000 80ca 	beq.w	8002ade <_dtoa_r+0x8be>
 800294a:	9a07      	ldr	r2, [sp, #28]
 800294c:	2a01      	cmp	r2, #1
 800294e:	f300 80ad 	bgt.w	8002aac <_dtoa_r+0x88c>
 8002952:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8002954:	2a00      	cmp	r2, #0
 8002956:	f000 80a5 	beq.w	8002aa4 <_dtoa_r+0x884>
 800295a:	f203 4333 	addw	r3, r3, #1075	; 0x433
 800295e:	9e08      	ldr	r6, [sp, #32]
 8002960:	9d05      	ldr	r5, [sp, #20]
 8002962:	9a05      	ldr	r2, [sp, #20]
 8002964:	441a      	add	r2, r3
 8002966:	9205      	str	r2, [sp, #20]
 8002968:	9a06      	ldr	r2, [sp, #24]
 800296a:	2101      	movs	r1, #1
 800296c:	441a      	add	r2, r3
 800296e:	4620      	mov	r0, r4
 8002970:	9206      	str	r2, [sp, #24]
 8002972:	f000 fc3d 	bl	80031f0 <__i2b>
 8002976:	4607      	mov	r7, r0
 8002978:	b165      	cbz	r5, 8002994 <_dtoa_r+0x774>
 800297a:	9b06      	ldr	r3, [sp, #24]
 800297c:	2b00      	cmp	r3, #0
 800297e:	dd09      	ble.n	8002994 <_dtoa_r+0x774>
 8002980:	42ab      	cmp	r3, r5
 8002982:	9a05      	ldr	r2, [sp, #20]
 8002984:	bfa8      	it	ge
 8002986:	462b      	movge	r3, r5
 8002988:	1ad2      	subs	r2, r2, r3
 800298a:	9205      	str	r2, [sp, #20]
 800298c:	9a06      	ldr	r2, [sp, #24]
 800298e:	1aed      	subs	r5, r5, r3
 8002990:	1ad3      	subs	r3, r2, r3
 8002992:	9306      	str	r3, [sp, #24]
 8002994:	9b08      	ldr	r3, [sp, #32]
 8002996:	b1f3      	cbz	r3, 80029d6 <_dtoa_r+0x7b6>
 8002998:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800299a:	2b00      	cmp	r3, #0
 800299c:	f000 80a3 	beq.w	8002ae6 <_dtoa_r+0x8c6>
 80029a0:	2e00      	cmp	r6, #0
 80029a2:	dd10      	ble.n	80029c6 <_dtoa_r+0x7a6>
 80029a4:	4639      	mov	r1, r7
 80029a6:	4632      	mov	r2, r6
 80029a8:	4620      	mov	r0, r4
 80029aa:	f000 fce1 	bl	8003370 <__pow5mult>
 80029ae:	4652      	mov	r2, sl
 80029b0:	4601      	mov	r1, r0
 80029b2:	4607      	mov	r7, r0
 80029b4:	4620      	mov	r0, r4
 80029b6:	f000 fc31 	bl	800321c <__multiply>
 80029ba:	4651      	mov	r1, sl
 80029bc:	4680      	mov	r8, r0
 80029be:	4620      	mov	r0, r4
 80029c0:	f000 fb60 	bl	8003084 <_Bfree>
 80029c4:	46c2      	mov	sl, r8
 80029c6:	9b08      	ldr	r3, [sp, #32]
 80029c8:	1b9a      	subs	r2, r3, r6
 80029ca:	d004      	beq.n	80029d6 <_dtoa_r+0x7b6>
 80029cc:	4651      	mov	r1, sl
 80029ce:	4620      	mov	r0, r4
 80029d0:	f000 fcce 	bl	8003370 <__pow5mult>
 80029d4:	4682      	mov	sl, r0
 80029d6:	2101      	movs	r1, #1
 80029d8:	4620      	mov	r0, r4
 80029da:	f000 fc09 	bl	80031f0 <__i2b>
 80029de:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80029e0:	2b00      	cmp	r3, #0
 80029e2:	4606      	mov	r6, r0
 80029e4:	f340 8081 	ble.w	8002aea <_dtoa_r+0x8ca>
 80029e8:	461a      	mov	r2, r3
 80029ea:	4601      	mov	r1, r0
 80029ec:	4620      	mov	r0, r4
 80029ee:	f000 fcbf 	bl	8003370 <__pow5mult>
 80029f2:	9b07      	ldr	r3, [sp, #28]
 80029f4:	2b01      	cmp	r3, #1
 80029f6:	4606      	mov	r6, r0
 80029f8:	dd7a      	ble.n	8002af0 <_dtoa_r+0x8d0>
 80029fa:	f04f 0800 	mov.w	r8, #0
 80029fe:	6933      	ldr	r3, [r6, #16]
 8002a00:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 8002a04:	6918      	ldr	r0, [r3, #16]
 8002a06:	f000 fba5 	bl	8003154 <__hi0bits>
 8002a0a:	f1c0 0020 	rsb	r0, r0, #32
 8002a0e:	9b06      	ldr	r3, [sp, #24]
 8002a10:	4418      	add	r0, r3
 8002a12:	f010 001f 	ands.w	r0, r0, #31
 8002a16:	f000 8094 	beq.w	8002b42 <_dtoa_r+0x922>
 8002a1a:	f1c0 0320 	rsb	r3, r0, #32
 8002a1e:	2b04      	cmp	r3, #4
 8002a20:	f340 8085 	ble.w	8002b2e <_dtoa_r+0x90e>
 8002a24:	9b05      	ldr	r3, [sp, #20]
 8002a26:	f1c0 001c 	rsb	r0, r0, #28
 8002a2a:	4403      	add	r3, r0
 8002a2c:	9305      	str	r3, [sp, #20]
 8002a2e:	9b06      	ldr	r3, [sp, #24]
 8002a30:	4403      	add	r3, r0
 8002a32:	4405      	add	r5, r0
 8002a34:	9306      	str	r3, [sp, #24]
 8002a36:	9b05      	ldr	r3, [sp, #20]
 8002a38:	2b00      	cmp	r3, #0
 8002a3a:	dd05      	ble.n	8002a48 <_dtoa_r+0x828>
 8002a3c:	4651      	mov	r1, sl
 8002a3e:	461a      	mov	r2, r3
 8002a40:	4620      	mov	r0, r4
 8002a42:	f000 fcef 	bl	8003424 <__lshift>
 8002a46:	4682      	mov	sl, r0
 8002a48:	9b06      	ldr	r3, [sp, #24]
 8002a4a:	2b00      	cmp	r3, #0
 8002a4c:	dd05      	ble.n	8002a5a <_dtoa_r+0x83a>
 8002a4e:	4631      	mov	r1, r6
 8002a50:	461a      	mov	r2, r3
 8002a52:	4620      	mov	r0, r4
 8002a54:	f000 fce6 	bl	8003424 <__lshift>
 8002a58:	4606      	mov	r6, r0
 8002a5a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8002a5c:	2b00      	cmp	r3, #0
 8002a5e:	d072      	beq.n	8002b46 <_dtoa_r+0x926>
 8002a60:	4631      	mov	r1, r6
 8002a62:	4650      	mov	r0, sl
 8002a64:	f000 fd4a 	bl	80034fc <__mcmp>
 8002a68:	2800      	cmp	r0, #0
 8002a6a:	da6c      	bge.n	8002b46 <_dtoa_r+0x926>
 8002a6c:	2300      	movs	r3, #0
 8002a6e:	4651      	mov	r1, sl
 8002a70:	220a      	movs	r2, #10
 8002a72:	4620      	mov	r0, r4
 8002a74:	f000 fb28 	bl	80030c8 <__multadd>
 8002a78:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002a7a:	f10b 3bff 	add.w	fp, fp, #4294967295
 8002a7e:	4682      	mov	sl, r0
 8002a80:	2b00      	cmp	r3, #0
 8002a82:	f000 81b0 	beq.w	8002de6 <_dtoa_r+0xbc6>
 8002a86:	2300      	movs	r3, #0
 8002a88:	4639      	mov	r1, r7
 8002a8a:	220a      	movs	r2, #10
 8002a8c:	4620      	mov	r0, r4
 8002a8e:	f000 fb1b 	bl	80030c8 <__multadd>
 8002a92:	9b01      	ldr	r3, [sp, #4]
 8002a94:	2b00      	cmp	r3, #0
 8002a96:	4607      	mov	r7, r0
 8002a98:	f300 8096 	bgt.w	8002bc8 <_dtoa_r+0x9a8>
 8002a9c:	9b07      	ldr	r3, [sp, #28]
 8002a9e:	2b02      	cmp	r3, #2
 8002aa0:	dc59      	bgt.n	8002b56 <_dtoa_r+0x936>
 8002aa2:	e091      	b.n	8002bc8 <_dtoa_r+0x9a8>
 8002aa4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8002aa6:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 8002aaa:	e758      	b.n	800295e <_dtoa_r+0x73e>
 8002aac:	9b04      	ldr	r3, [sp, #16]
 8002aae:	1e5e      	subs	r6, r3, #1
 8002ab0:	9b08      	ldr	r3, [sp, #32]
 8002ab2:	42b3      	cmp	r3, r6
 8002ab4:	bfbf      	itttt	lt
 8002ab6:	9b08      	ldrlt	r3, [sp, #32]
 8002ab8:	9a0b      	ldrlt	r2, [sp, #44]	; 0x2c
 8002aba:	9608      	strlt	r6, [sp, #32]
 8002abc:	1af3      	sublt	r3, r6, r3
 8002abe:	bfb4      	ite	lt
 8002ac0:	18d2      	addlt	r2, r2, r3
 8002ac2:	1b9e      	subge	r6, r3, r6
 8002ac4:	9b04      	ldr	r3, [sp, #16]
 8002ac6:	bfbc      	itt	lt
 8002ac8:	920b      	strlt	r2, [sp, #44]	; 0x2c
 8002aca:	2600      	movlt	r6, #0
 8002acc:	2b00      	cmp	r3, #0
 8002ace:	bfb7      	itett	lt
 8002ad0:	e9dd 2304 	ldrdlt	r2, r3, [sp, #16]
 8002ad4:	e9dd 3504 	ldrdge	r3, r5, [sp, #16]
 8002ad8:	1a9d      	sublt	r5, r3, r2
 8002ada:	2300      	movlt	r3, #0
 8002adc:	e741      	b.n	8002962 <_dtoa_r+0x742>
 8002ade:	9e08      	ldr	r6, [sp, #32]
 8002ae0:	9d05      	ldr	r5, [sp, #20]
 8002ae2:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8002ae4:	e748      	b.n	8002978 <_dtoa_r+0x758>
 8002ae6:	9a08      	ldr	r2, [sp, #32]
 8002ae8:	e770      	b.n	80029cc <_dtoa_r+0x7ac>
 8002aea:	9b07      	ldr	r3, [sp, #28]
 8002aec:	2b01      	cmp	r3, #1
 8002aee:	dc19      	bgt.n	8002b24 <_dtoa_r+0x904>
 8002af0:	9b02      	ldr	r3, [sp, #8]
 8002af2:	b9bb      	cbnz	r3, 8002b24 <_dtoa_r+0x904>
 8002af4:	9b03      	ldr	r3, [sp, #12]
 8002af6:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002afa:	b99b      	cbnz	r3, 8002b24 <_dtoa_r+0x904>
 8002afc:	9b03      	ldr	r3, [sp, #12]
 8002afe:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8002b02:	0d1b      	lsrs	r3, r3, #20
 8002b04:	051b      	lsls	r3, r3, #20
 8002b06:	b183      	cbz	r3, 8002b2a <_dtoa_r+0x90a>
 8002b08:	9b05      	ldr	r3, [sp, #20]
 8002b0a:	3301      	adds	r3, #1
 8002b0c:	9305      	str	r3, [sp, #20]
 8002b0e:	9b06      	ldr	r3, [sp, #24]
 8002b10:	3301      	adds	r3, #1
 8002b12:	9306      	str	r3, [sp, #24]
 8002b14:	f04f 0801 	mov.w	r8, #1
 8002b18:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8002b1a:	2b00      	cmp	r3, #0
 8002b1c:	f47f af6f 	bne.w	80029fe <_dtoa_r+0x7de>
 8002b20:	2001      	movs	r0, #1
 8002b22:	e774      	b.n	8002a0e <_dtoa_r+0x7ee>
 8002b24:	f04f 0800 	mov.w	r8, #0
 8002b28:	e7f6      	b.n	8002b18 <_dtoa_r+0x8f8>
 8002b2a:	4698      	mov	r8, r3
 8002b2c:	e7f4      	b.n	8002b18 <_dtoa_r+0x8f8>
 8002b2e:	d082      	beq.n	8002a36 <_dtoa_r+0x816>
 8002b30:	9a05      	ldr	r2, [sp, #20]
 8002b32:	331c      	adds	r3, #28
 8002b34:	441a      	add	r2, r3
 8002b36:	9205      	str	r2, [sp, #20]
 8002b38:	9a06      	ldr	r2, [sp, #24]
 8002b3a:	441a      	add	r2, r3
 8002b3c:	441d      	add	r5, r3
 8002b3e:	9206      	str	r2, [sp, #24]
 8002b40:	e779      	b.n	8002a36 <_dtoa_r+0x816>
 8002b42:	4603      	mov	r3, r0
 8002b44:	e7f4      	b.n	8002b30 <_dtoa_r+0x910>
 8002b46:	9b04      	ldr	r3, [sp, #16]
 8002b48:	2b00      	cmp	r3, #0
 8002b4a:	dc37      	bgt.n	8002bbc <_dtoa_r+0x99c>
 8002b4c:	9b07      	ldr	r3, [sp, #28]
 8002b4e:	2b02      	cmp	r3, #2
 8002b50:	dd34      	ble.n	8002bbc <_dtoa_r+0x99c>
 8002b52:	9b04      	ldr	r3, [sp, #16]
 8002b54:	9301      	str	r3, [sp, #4]
 8002b56:	9b01      	ldr	r3, [sp, #4]
 8002b58:	b963      	cbnz	r3, 8002b74 <_dtoa_r+0x954>
 8002b5a:	4631      	mov	r1, r6
 8002b5c:	2205      	movs	r2, #5
 8002b5e:	4620      	mov	r0, r4
 8002b60:	f000 fab2 	bl	80030c8 <__multadd>
 8002b64:	4601      	mov	r1, r0
 8002b66:	4606      	mov	r6, r0
 8002b68:	4650      	mov	r0, sl
 8002b6a:	f000 fcc7 	bl	80034fc <__mcmp>
 8002b6e:	2800      	cmp	r0, #0
 8002b70:	f73f adbb 	bgt.w	80026ea <_dtoa_r+0x4ca>
 8002b74:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002b76:	9d00      	ldr	r5, [sp, #0]
 8002b78:	ea6f 0b03 	mvn.w	fp, r3
 8002b7c:	f04f 0800 	mov.w	r8, #0
 8002b80:	4631      	mov	r1, r6
 8002b82:	4620      	mov	r0, r4
 8002b84:	f000 fa7e 	bl	8003084 <_Bfree>
 8002b88:	2f00      	cmp	r7, #0
 8002b8a:	f43f aeab 	beq.w	80028e4 <_dtoa_r+0x6c4>
 8002b8e:	f1b8 0f00 	cmp.w	r8, #0
 8002b92:	d005      	beq.n	8002ba0 <_dtoa_r+0x980>
 8002b94:	45b8      	cmp	r8, r7
 8002b96:	d003      	beq.n	8002ba0 <_dtoa_r+0x980>
 8002b98:	4641      	mov	r1, r8
 8002b9a:	4620      	mov	r0, r4
 8002b9c:	f000 fa72 	bl	8003084 <_Bfree>
 8002ba0:	4639      	mov	r1, r7
 8002ba2:	4620      	mov	r0, r4
 8002ba4:	f000 fa6e 	bl	8003084 <_Bfree>
 8002ba8:	e69c      	b.n	80028e4 <_dtoa_r+0x6c4>
 8002baa:	2600      	movs	r6, #0
 8002bac:	4637      	mov	r7, r6
 8002bae:	e7e1      	b.n	8002b74 <_dtoa_r+0x954>
 8002bb0:	46bb      	mov	fp, r7
 8002bb2:	4637      	mov	r7, r6
 8002bb4:	e599      	b.n	80026ea <_dtoa_r+0x4ca>
 8002bb6:	bf00      	nop
 8002bb8:	40240000 	.word	0x40240000
 8002bbc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002bbe:	2b00      	cmp	r3, #0
 8002bc0:	f000 80c8 	beq.w	8002d54 <_dtoa_r+0xb34>
 8002bc4:	9b04      	ldr	r3, [sp, #16]
 8002bc6:	9301      	str	r3, [sp, #4]
 8002bc8:	2d00      	cmp	r5, #0
 8002bca:	dd05      	ble.n	8002bd8 <_dtoa_r+0x9b8>
 8002bcc:	4639      	mov	r1, r7
 8002bce:	462a      	mov	r2, r5
 8002bd0:	4620      	mov	r0, r4
 8002bd2:	f000 fc27 	bl	8003424 <__lshift>
 8002bd6:	4607      	mov	r7, r0
 8002bd8:	f1b8 0f00 	cmp.w	r8, #0
 8002bdc:	d05b      	beq.n	8002c96 <_dtoa_r+0xa76>
 8002bde:	6879      	ldr	r1, [r7, #4]
 8002be0:	4620      	mov	r0, r4
 8002be2:	f000 fa0f 	bl	8003004 <_Balloc>
 8002be6:	4605      	mov	r5, r0
 8002be8:	b928      	cbnz	r0, 8002bf6 <_dtoa_r+0x9d6>
 8002bea:	4b83      	ldr	r3, [pc, #524]	; (8002df8 <_dtoa_r+0xbd8>)
 8002bec:	4602      	mov	r2, r0
 8002bee:	f240 21ef 	movw	r1, #751	; 0x2ef
 8002bf2:	f7ff bb2e 	b.w	8002252 <_dtoa_r+0x32>
 8002bf6:	693a      	ldr	r2, [r7, #16]
 8002bf8:	3202      	adds	r2, #2
 8002bfa:	0092      	lsls	r2, r2, #2
 8002bfc:	f107 010c 	add.w	r1, r7, #12
 8002c00:	300c      	adds	r0, #12
 8002c02:	f7ff fa76 	bl	80020f2 <memcpy>
 8002c06:	2201      	movs	r2, #1
 8002c08:	4629      	mov	r1, r5
 8002c0a:	4620      	mov	r0, r4
 8002c0c:	f000 fc0a 	bl	8003424 <__lshift>
 8002c10:	9b00      	ldr	r3, [sp, #0]
 8002c12:	3301      	adds	r3, #1
 8002c14:	9304      	str	r3, [sp, #16]
 8002c16:	e9dd 2300 	ldrd	r2, r3, [sp]
 8002c1a:	4413      	add	r3, r2
 8002c1c:	9308      	str	r3, [sp, #32]
 8002c1e:	9b02      	ldr	r3, [sp, #8]
 8002c20:	f003 0301 	and.w	r3, r3, #1
 8002c24:	46b8      	mov	r8, r7
 8002c26:	9306      	str	r3, [sp, #24]
 8002c28:	4607      	mov	r7, r0
 8002c2a:	9b04      	ldr	r3, [sp, #16]
 8002c2c:	4631      	mov	r1, r6
 8002c2e:	3b01      	subs	r3, #1
 8002c30:	4650      	mov	r0, sl
 8002c32:	9301      	str	r3, [sp, #4]
 8002c34:	f7ff fa6b 	bl	800210e <quorem>
 8002c38:	4641      	mov	r1, r8
 8002c3a:	9002      	str	r0, [sp, #8]
 8002c3c:	f100 0930 	add.w	r9, r0, #48	; 0x30
 8002c40:	4650      	mov	r0, sl
 8002c42:	f000 fc5b 	bl	80034fc <__mcmp>
 8002c46:	463a      	mov	r2, r7
 8002c48:	9005      	str	r0, [sp, #20]
 8002c4a:	4631      	mov	r1, r6
 8002c4c:	4620      	mov	r0, r4
 8002c4e:	f000 fc71 	bl	8003534 <__mdiff>
 8002c52:	68c2      	ldr	r2, [r0, #12]
 8002c54:	4605      	mov	r5, r0
 8002c56:	bb02      	cbnz	r2, 8002c9a <_dtoa_r+0xa7a>
 8002c58:	4601      	mov	r1, r0
 8002c5a:	4650      	mov	r0, sl
 8002c5c:	f000 fc4e 	bl	80034fc <__mcmp>
 8002c60:	4602      	mov	r2, r0
 8002c62:	4629      	mov	r1, r5
 8002c64:	4620      	mov	r0, r4
 8002c66:	9209      	str	r2, [sp, #36]	; 0x24
 8002c68:	f000 fa0c 	bl	8003084 <_Bfree>
 8002c6c:	9b07      	ldr	r3, [sp, #28]
 8002c6e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8002c70:	9d04      	ldr	r5, [sp, #16]
 8002c72:	ea43 0102 	orr.w	r1, r3, r2
 8002c76:	9b06      	ldr	r3, [sp, #24]
 8002c78:	4319      	orrs	r1, r3
 8002c7a:	d110      	bne.n	8002c9e <_dtoa_r+0xa7e>
 8002c7c:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 8002c80:	d029      	beq.n	8002cd6 <_dtoa_r+0xab6>
 8002c82:	9b05      	ldr	r3, [sp, #20]
 8002c84:	2b00      	cmp	r3, #0
 8002c86:	dd02      	ble.n	8002c8e <_dtoa_r+0xa6e>
 8002c88:	9b02      	ldr	r3, [sp, #8]
 8002c8a:	f103 0931 	add.w	r9, r3, #49	; 0x31
 8002c8e:	9b01      	ldr	r3, [sp, #4]
 8002c90:	f883 9000 	strb.w	r9, [r3]
 8002c94:	e774      	b.n	8002b80 <_dtoa_r+0x960>
 8002c96:	4638      	mov	r0, r7
 8002c98:	e7ba      	b.n	8002c10 <_dtoa_r+0x9f0>
 8002c9a:	2201      	movs	r2, #1
 8002c9c:	e7e1      	b.n	8002c62 <_dtoa_r+0xa42>
 8002c9e:	9b05      	ldr	r3, [sp, #20]
 8002ca0:	2b00      	cmp	r3, #0
 8002ca2:	db04      	blt.n	8002cae <_dtoa_r+0xa8e>
 8002ca4:	9907      	ldr	r1, [sp, #28]
 8002ca6:	430b      	orrs	r3, r1
 8002ca8:	9906      	ldr	r1, [sp, #24]
 8002caa:	430b      	orrs	r3, r1
 8002cac:	d120      	bne.n	8002cf0 <_dtoa_r+0xad0>
 8002cae:	2a00      	cmp	r2, #0
 8002cb0:	dded      	ble.n	8002c8e <_dtoa_r+0xa6e>
 8002cb2:	4651      	mov	r1, sl
 8002cb4:	2201      	movs	r2, #1
 8002cb6:	4620      	mov	r0, r4
 8002cb8:	f000 fbb4 	bl	8003424 <__lshift>
 8002cbc:	4631      	mov	r1, r6
 8002cbe:	4682      	mov	sl, r0
 8002cc0:	f000 fc1c 	bl	80034fc <__mcmp>
 8002cc4:	2800      	cmp	r0, #0
 8002cc6:	dc03      	bgt.n	8002cd0 <_dtoa_r+0xab0>
 8002cc8:	d1e1      	bne.n	8002c8e <_dtoa_r+0xa6e>
 8002cca:	f019 0f01 	tst.w	r9, #1
 8002cce:	d0de      	beq.n	8002c8e <_dtoa_r+0xa6e>
 8002cd0:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 8002cd4:	d1d8      	bne.n	8002c88 <_dtoa_r+0xa68>
 8002cd6:	9a01      	ldr	r2, [sp, #4]
 8002cd8:	2339      	movs	r3, #57	; 0x39
 8002cda:	7013      	strb	r3, [r2, #0]
 8002cdc:	462b      	mov	r3, r5
 8002cde:	461d      	mov	r5, r3
 8002ce0:	3b01      	subs	r3, #1
 8002ce2:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 8002ce6:	2a39      	cmp	r2, #57	; 0x39
 8002ce8:	d06c      	beq.n	8002dc4 <_dtoa_r+0xba4>
 8002cea:	3201      	adds	r2, #1
 8002cec:	701a      	strb	r2, [r3, #0]
 8002cee:	e747      	b.n	8002b80 <_dtoa_r+0x960>
 8002cf0:	2a00      	cmp	r2, #0
 8002cf2:	dd07      	ble.n	8002d04 <_dtoa_r+0xae4>
 8002cf4:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 8002cf8:	d0ed      	beq.n	8002cd6 <_dtoa_r+0xab6>
 8002cfa:	9a01      	ldr	r2, [sp, #4]
 8002cfc:	f109 0301 	add.w	r3, r9, #1
 8002d00:	7013      	strb	r3, [r2, #0]
 8002d02:	e73d      	b.n	8002b80 <_dtoa_r+0x960>
 8002d04:	9b04      	ldr	r3, [sp, #16]
 8002d06:	9a08      	ldr	r2, [sp, #32]
 8002d08:	f803 9c01 	strb.w	r9, [r3, #-1]
 8002d0c:	4293      	cmp	r3, r2
 8002d0e:	d043      	beq.n	8002d98 <_dtoa_r+0xb78>
 8002d10:	4651      	mov	r1, sl
 8002d12:	2300      	movs	r3, #0
 8002d14:	220a      	movs	r2, #10
 8002d16:	4620      	mov	r0, r4
 8002d18:	f000 f9d6 	bl	80030c8 <__multadd>
 8002d1c:	45b8      	cmp	r8, r7
 8002d1e:	4682      	mov	sl, r0
 8002d20:	f04f 0300 	mov.w	r3, #0
 8002d24:	f04f 020a 	mov.w	r2, #10
 8002d28:	4641      	mov	r1, r8
 8002d2a:	4620      	mov	r0, r4
 8002d2c:	d107      	bne.n	8002d3e <_dtoa_r+0xb1e>
 8002d2e:	f000 f9cb 	bl	80030c8 <__multadd>
 8002d32:	4680      	mov	r8, r0
 8002d34:	4607      	mov	r7, r0
 8002d36:	9b04      	ldr	r3, [sp, #16]
 8002d38:	3301      	adds	r3, #1
 8002d3a:	9304      	str	r3, [sp, #16]
 8002d3c:	e775      	b.n	8002c2a <_dtoa_r+0xa0a>
 8002d3e:	f000 f9c3 	bl	80030c8 <__multadd>
 8002d42:	4639      	mov	r1, r7
 8002d44:	4680      	mov	r8, r0
 8002d46:	2300      	movs	r3, #0
 8002d48:	220a      	movs	r2, #10
 8002d4a:	4620      	mov	r0, r4
 8002d4c:	f000 f9bc 	bl	80030c8 <__multadd>
 8002d50:	4607      	mov	r7, r0
 8002d52:	e7f0      	b.n	8002d36 <_dtoa_r+0xb16>
 8002d54:	9b04      	ldr	r3, [sp, #16]
 8002d56:	9301      	str	r3, [sp, #4]
 8002d58:	9d00      	ldr	r5, [sp, #0]
 8002d5a:	4631      	mov	r1, r6
 8002d5c:	4650      	mov	r0, sl
 8002d5e:	f7ff f9d6 	bl	800210e <quorem>
 8002d62:	f100 0930 	add.w	r9, r0, #48	; 0x30
 8002d66:	9b00      	ldr	r3, [sp, #0]
 8002d68:	f805 9b01 	strb.w	r9, [r5], #1
 8002d6c:	1aea      	subs	r2, r5, r3
 8002d6e:	9b01      	ldr	r3, [sp, #4]
 8002d70:	4293      	cmp	r3, r2
 8002d72:	dd07      	ble.n	8002d84 <_dtoa_r+0xb64>
 8002d74:	4651      	mov	r1, sl
 8002d76:	2300      	movs	r3, #0
 8002d78:	220a      	movs	r2, #10
 8002d7a:	4620      	mov	r0, r4
 8002d7c:	f000 f9a4 	bl	80030c8 <__multadd>
 8002d80:	4682      	mov	sl, r0
 8002d82:	e7ea      	b.n	8002d5a <_dtoa_r+0xb3a>
 8002d84:	9b01      	ldr	r3, [sp, #4]
 8002d86:	2b00      	cmp	r3, #0
 8002d88:	bfc8      	it	gt
 8002d8a:	461d      	movgt	r5, r3
 8002d8c:	9b00      	ldr	r3, [sp, #0]
 8002d8e:	bfd8      	it	le
 8002d90:	2501      	movle	r5, #1
 8002d92:	441d      	add	r5, r3
 8002d94:	f04f 0800 	mov.w	r8, #0
 8002d98:	4651      	mov	r1, sl
 8002d9a:	2201      	movs	r2, #1
 8002d9c:	4620      	mov	r0, r4
 8002d9e:	f000 fb41 	bl	8003424 <__lshift>
 8002da2:	4631      	mov	r1, r6
 8002da4:	4682      	mov	sl, r0
 8002da6:	f000 fba9 	bl	80034fc <__mcmp>
 8002daa:	2800      	cmp	r0, #0
 8002dac:	dc96      	bgt.n	8002cdc <_dtoa_r+0xabc>
 8002dae:	d102      	bne.n	8002db6 <_dtoa_r+0xb96>
 8002db0:	f019 0f01 	tst.w	r9, #1
 8002db4:	d192      	bne.n	8002cdc <_dtoa_r+0xabc>
 8002db6:	462b      	mov	r3, r5
 8002db8:	461d      	mov	r5, r3
 8002dba:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8002dbe:	2a30      	cmp	r2, #48	; 0x30
 8002dc0:	d0fa      	beq.n	8002db8 <_dtoa_r+0xb98>
 8002dc2:	e6dd      	b.n	8002b80 <_dtoa_r+0x960>
 8002dc4:	9a00      	ldr	r2, [sp, #0]
 8002dc6:	429a      	cmp	r2, r3
 8002dc8:	d189      	bne.n	8002cde <_dtoa_r+0xabe>
 8002dca:	f10b 0b01 	add.w	fp, fp, #1
 8002dce:	2331      	movs	r3, #49	; 0x31
 8002dd0:	e796      	b.n	8002d00 <_dtoa_r+0xae0>
 8002dd2:	4b0a      	ldr	r3, [pc, #40]	; (8002dfc <_dtoa_r+0xbdc>)
 8002dd4:	f7ff ba99 	b.w	800230a <_dtoa_r+0xea>
 8002dd8:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8002dda:	2b00      	cmp	r3, #0
 8002ddc:	f47f aa6d 	bne.w	80022ba <_dtoa_r+0x9a>
 8002de0:	4b07      	ldr	r3, [pc, #28]	; (8002e00 <_dtoa_r+0xbe0>)
 8002de2:	f7ff ba92 	b.w	800230a <_dtoa_r+0xea>
 8002de6:	9b01      	ldr	r3, [sp, #4]
 8002de8:	2b00      	cmp	r3, #0
 8002dea:	dcb5      	bgt.n	8002d58 <_dtoa_r+0xb38>
 8002dec:	9b07      	ldr	r3, [sp, #28]
 8002dee:	2b02      	cmp	r3, #2
 8002df0:	f73f aeb1 	bgt.w	8002b56 <_dtoa_r+0x936>
 8002df4:	e7b0      	b.n	8002d58 <_dtoa_r+0xb38>
 8002df6:	bf00      	nop
 8002df8:	08003e38 	.word	0x08003e38
 8002dfc:	08003d98 	.word	0x08003d98
 8002e00:	08003dbc 	.word	0x08003dbc

08002e04 <_free_r>:
 8002e04:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8002e06:	2900      	cmp	r1, #0
 8002e08:	d044      	beq.n	8002e94 <_free_r+0x90>
 8002e0a:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8002e0e:	9001      	str	r0, [sp, #4]
 8002e10:	2b00      	cmp	r3, #0
 8002e12:	f1a1 0404 	sub.w	r4, r1, #4
 8002e16:	bfb8      	it	lt
 8002e18:	18e4      	addlt	r4, r4, r3
 8002e1a:	f000 f8e7 	bl	8002fec <__malloc_lock>
 8002e1e:	4a1e      	ldr	r2, [pc, #120]	; (8002e98 <_free_r+0x94>)
 8002e20:	9801      	ldr	r0, [sp, #4]
 8002e22:	6813      	ldr	r3, [r2, #0]
 8002e24:	b933      	cbnz	r3, 8002e34 <_free_r+0x30>
 8002e26:	6063      	str	r3, [r4, #4]
 8002e28:	6014      	str	r4, [r2, #0]
 8002e2a:	b003      	add	sp, #12
 8002e2c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8002e30:	f000 b8e2 	b.w	8002ff8 <__malloc_unlock>
 8002e34:	42a3      	cmp	r3, r4
 8002e36:	d908      	bls.n	8002e4a <_free_r+0x46>
 8002e38:	6825      	ldr	r5, [r4, #0]
 8002e3a:	1961      	adds	r1, r4, r5
 8002e3c:	428b      	cmp	r3, r1
 8002e3e:	bf01      	itttt	eq
 8002e40:	6819      	ldreq	r1, [r3, #0]
 8002e42:	685b      	ldreq	r3, [r3, #4]
 8002e44:	1949      	addeq	r1, r1, r5
 8002e46:	6021      	streq	r1, [r4, #0]
 8002e48:	e7ed      	b.n	8002e26 <_free_r+0x22>
 8002e4a:	461a      	mov	r2, r3
 8002e4c:	685b      	ldr	r3, [r3, #4]
 8002e4e:	b10b      	cbz	r3, 8002e54 <_free_r+0x50>
 8002e50:	42a3      	cmp	r3, r4
 8002e52:	d9fa      	bls.n	8002e4a <_free_r+0x46>
 8002e54:	6811      	ldr	r1, [r2, #0]
 8002e56:	1855      	adds	r5, r2, r1
 8002e58:	42a5      	cmp	r5, r4
 8002e5a:	d10b      	bne.n	8002e74 <_free_r+0x70>
 8002e5c:	6824      	ldr	r4, [r4, #0]
 8002e5e:	4421      	add	r1, r4
 8002e60:	1854      	adds	r4, r2, r1
 8002e62:	42a3      	cmp	r3, r4
 8002e64:	6011      	str	r1, [r2, #0]
 8002e66:	d1e0      	bne.n	8002e2a <_free_r+0x26>
 8002e68:	681c      	ldr	r4, [r3, #0]
 8002e6a:	685b      	ldr	r3, [r3, #4]
 8002e6c:	6053      	str	r3, [r2, #4]
 8002e6e:	440c      	add	r4, r1
 8002e70:	6014      	str	r4, [r2, #0]
 8002e72:	e7da      	b.n	8002e2a <_free_r+0x26>
 8002e74:	d902      	bls.n	8002e7c <_free_r+0x78>
 8002e76:	230c      	movs	r3, #12
 8002e78:	6003      	str	r3, [r0, #0]
 8002e7a:	e7d6      	b.n	8002e2a <_free_r+0x26>
 8002e7c:	6825      	ldr	r5, [r4, #0]
 8002e7e:	1961      	adds	r1, r4, r5
 8002e80:	428b      	cmp	r3, r1
 8002e82:	bf04      	itt	eq
 8002e84:	6819      	ldreq	r1, [r3, #0]
 8002e86:	685b      	ldreq	r3, [r3, #4]
 8002e88:	6063      	str	r3, [r4, #4]
 8002e8a:	bf04      	itt	eq
 8002e8c:	1949      	addeq	r1, r1, r5
 8002e8e:	6021      	streq	r1, [r4, #0]
 8002e90:	6054      	str	r4, [r2, #4]
 8002e92:	e7ca      	b.n	8002e2a <_free_r+0x26>
 8002e94:	b003      	add	sp, #12
 8002e96:	bd30      	pop	{r4, r5, pc}
 8002e98:	2000033c 	.word	0x2000033c

08002e9c <malloc>:
 8002e9c:	4b02      	ldr	r3, [pc, #8]	; (8002ea8 <malloc+0xc>)
 8002e9e:	4601      	mov	r1, r0
 8002ea0:	6818      	ldr	r0, [r3, #0]
 8002ea2:	f000 b823 	b.w	8002eec <_malloc_r>
 8002ea6:	bf00      	nop
 8002ea8:	20000058 	.word	0x20000058

08002eac <sbrk_aligned>:
 8002eac:	b570      	push	{r4, r5, r6, lr}
 8002eae:	4e0e      	ldr	r6, [pc, #56]	; (8002ee8 <sbrk_aligned+0x3c>)
 8002eb0:	460c      	mov	r4, r1
 8002eb2:	6831      	ldr	r1, [r6, #0]
 8002eb4:	4605      	mov	r5, r0
 8002eb6:	b911      	cbnz	r1, 8002ebe <sbrk_aligned+0x12>
 8002eb8:	f000 fe96 	bl	8003be8 <_sbrk_r>
 8002ebc:	6030      	str	r0, [r6, #0]
 8002ebe:	4621      	mov	r1, r4
 8002ec0:	4628      	mov	r0, r5
 8002ec2:	f000 fe91 	bl	8003be8 <_sbrk_r>
 8002ec6:	1c43      	adds	r3, r0, #1
 8002ec8:	d00a      	beq.n	8002ee0 <sbrk_aligned+0x34>
 8002eca:	1cc4      	adds	r4, r0, #3
 8002ecc:	f024 0403 	bic.w	r4, r4, #3
 8002ed0:	42a0      	cmp	r0, r4
 8002ed2:	d007      	beq.n	8002ee4 <sbrk_aligned+0x38>
 8002ed4:	1a21      	subs	r1, r4, r0
 8002ed6:	4628      	mov	r0, r5
 8002ed8:	f000 fe86 	bl	8003be8 <_sbrk_r>
 8002edc:	3001      	adds	r0, #1
 8002ede:	d101      	bne.n	8002ee4 <sbrk_aligned+0x38>
 8002ee0:	f04f 34ff 	mov.w	r4, #4294967295
 8002ee4:	4620      	mov	r0, r4
 8002ee6:	bd70      	pop	{r4, r5, r6, pc}
 8002ee8:	20000340 	.word	0x20000340

08002eec <_malloc_r>:
 8002eec:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8002ef0:	1ccd      	adds	r5, r1, #3
 8002ef2:	f025 0503 	bic.w	r5, r5, #3
 8002ef6:	3508      	adds	r5, #8
 8002ef8:	2d0c      	cmp	r5, #12
 8002efa:	bf38      	it	cc
 8002efc:	250c      	movcc	r5, #12
 8002efe:	2d00      	cmp	r5, #0
 8002f00:	4607      	mov	r7, r0
 8002f02:	db01      	blt.n	8002f08 <_malloc_r+0x1c>
 8002f04:	42a9      	cmp	r1, r5
 8002f06:	d905      	bls.n	8002f14 <_malloc_r+0x28>
 8002f08:	230c      	movs	r3, #12
 8002f0a:	603b      	str	r3, [r7, #0]
 8002f0c:	2600      	movs	r6, #0
 8002f0e:	4630      	mov	r0, r6
 8002f10:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8002f14:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8002fe8 <_malloc_r+0xfc>
 8002f18:	f000 f868 	bl	8002fec <__malloc_lock>
 8002f1c:	f8d8 3000 	ldr.w	r3, [r8]
 8002f20:	461c      	mov	r4, r3
 8002f22:	bb5c      	cbnz	r4, 8002f7c <_malloc_r+0x90>
 8002f24:	4629      	mov	r1, r5
 8002f26:	4638      	mov	r0, r7
 8002f28:	f7ff ffc0 	bl	8002eac <sbrk_aligned>
 8002f2c:	1c43      	adds	r3, r0, #1
 8002f2e:	4604      	mov	r4, r0
 8002f30:	d155      	bne.n	8002fde <_malloc_r+0xf2>
 8002f32:	f8d8 4000 	ldr.w	r4, [r8]
 8002f36:	4626      	mov	r6, r4
 8002f38:	2e00      	cmp	r6, #0
 8002f3a:	d145      	bne.n	8002fc8 <_malloc_r+0xdc>
 8002f3c:	2c00      	cmp	r4, #0
 8002f3e:	d048      	beq.n	8002fd2 <_malloc_r+0xe6>
 8002f40:	6823      	ldr	r3, [r4, #0]
 8002f42:	4631      	mov	r1, r6
 8002f44:	4638      	mov	r0, r7
 8002f46:	eb04 0903 	add.w	r9, r4, r3
 8002f4a:	f000 fe4d 	bl	8003be8 <_sbrk_r>
 8002f4e:	4581      	cmp	r9, r0
 8002f50:	d13f      	bne.n	8002fd2 <_malloc_r+0xe6>
 8002f52:	6821      	ldr	r1, [r4, #0]
 8002f54:	1a6d      	subs	r5, r5, r1
 8002f56:	4629      	mov	r1, r5
 8002f58:	4638      	mov	r0, r7
 8002f5a:	f7ff ffa7 	bl	8002eac <sbrk_aligned>
 8002f5e:	3001      	adds	r0, #1
 8002f60:	d037      	beq.n	8002fd2 <_malloc_r+0xe6>
 8002f62:	6823      	ldr	r3, [r4, #0]
 8002f64:	442b      	add	r3, r5
 8002f66:	6023      	str	r3, [r4, #0]
 8002f68:	f8d8 3000 	ldr.w	r3, [r8]
 8002f6c:	2b00      	cmp	r3, #0
 8002f6e:	d038      	beq.n	8002fe2 <_malloc_r+0xf6>
 8002f70:	685a      	ldr	r2, [r3, #4]
 8002f72:	42a2      	cmp	r2, r4
 8002f74:	d12b      	bne.n	8002fce <_malloc_r+0xe2>
 8002f76:	2200      	movs	r2, #0
 8002f78:	605a      	str	r2, [r3, #4]
 8002f7a:	e00f      	b.n	8002f9c <_malloc_r+0xb0>
 8002f7c:	6822      	ldr	r2, [r4, #0]
 8002f7e:	1b52      	subs	r2, r2, r5
 8002f80:	d41f      	bmi.n	8002fc2 <_malloc_r+0xd6>
 8002f82:	2a0b      	cmp	r2, #11
 8002f84:	d917      	bls.n	8002fb6 <_malloc_r+0xca>
 8002f86:	1961      	adds	r1, r4, r5
 8002f88:	42a3      	cmp	r3, r4
 8002f8a:	6025      	str	r5, [r4, #0]
 8002f8c:	bf18      	it	ne
 8002f8e:	6059      	strne	r1, [r3, #4]
 8002f90:	6863      	ldr	r3, [r4, #4]
 8002f92:	bf08      	it	eq
 8002f94:	f8c8 1000 	streq.w	r1, [r8]
 8002f98:	5162      	str	r2, [r4, r5]
 8002f9a:	604b      	str	r3, [r1, #4]
 8002f9c:	4638      	mov	r0, r7
 8002f9e:	f104 060b 	add.w	r6, r4, #11
 8002fa2:	f000 f829 	bl	8002ff8 <__malloc_unlock>
 8002fa6:	f026 0607 	bic.w	r6, r6, #7
 8002faa:	1d23      	adds	r3, r4, #4
 8002fac:	1af2      	subs	r2, r6, r3
 8002fae:	d0ae      	beq.n	8002f0e <_malloc_r+0x22>
 8002fb0:	1b9b      	subs	r3, r3, r6
 8002fb2:	50a3      	str	r3, [r4, r2]
 8002fb4:	e7ab      	b.n	8002f0e <_malloc_r+0x22>
 8002fb6:	42a3      	cmp	r3, r4
 8002fb8:	6862      	ldr	r2, [r4, #4]
 8002fba:	d1dd      	bne.n	8002f78 <_malloc_r+0x8c>
 8002fbc:	f8c8 2000 	str.w	r2, [r8]
 8002fc0:	e7ec      	b.n	8002f9c <_malloc_r+0xb0>
 8002fc2:	4623      	mov	r3, r4
 8002fc4:	6864      	ldr	r4, [r4, #4]
 8002fc6:	e7ac      	b.n	8002f22 <_malloc_r+0x36>
 8002fc8:	4634      	mov	r4, r6
 8002fca:	6876      	ldr	r6, [r6, #4]
 8002fcc:	e7b4      	b.n	8002f38 <_malloc_r+0x4c>
 8002fce:	4613      	mov	r3, r2
 8002fd0:	e7cc      	b.n	8002f6c <_malloc_r+0x80>
 8002fd2:	230c      	movs	r3, #12
 8002fd4:	603b      	str	r3, [r7, #0]
 8002fd6:	4638      	mov	r0, r7
 8002fd8:	f000 f80e 	bl	8002ff8 <__malloc_unlock>
 8002fdc:	e797      	b.n	8002f0e <_malloc_r+0x22>
 8002fde:	6025      	str	r5, [r4, #0]
 8002fe0:	e7dc      	b.n	8002f9c <_malloc_r+0xb0>
 8002fe2:	605b      	str	r3, [r3, #4]
 8002fe4:	deff      	udf	#255	; 0xff
 8002fe6:	bf00      	nop
 8002fe8:	2000033c 	.word	0x2000033c

08002fec <__malloc_lock>:
 8002fec:	4801      	ldr	r0, [pc, #4]	; (8002ff4 <__malloc_lock+0x8>)
 8002fee:	f7ff b87e 	b.w	80020ee <__retarget_lock_acquire_recursive>
 8002ff2:	bf00      	nop
 8002ff4:	20000338 	.word	0x20000338

08002ff8 <__malloc_unlock>:
 8002ff8:	4801      	ldr	r0, [pc, #4]	; (8003000 <__malloc_unlock+0x8>)
 8002ffa:	f7ff b879 	b.w	80020f0 <__retarget_lock_release_recursive>
 8002ffe:	bf00      	nop
 8003000:	20000338 	.word	0x20000338

08003004 <_Balloc>:
 8003004:	b570      	push	{r4, r5, r6, lr}
 8003006:	69c6      	ldr	r6, [r0, #28]
 8003008:	4604      	mov	r4, r0
 800300a:	460d      	mov	r5, r1
 800300c:	b976      	cbnz	r6, 800302c <_Balloc+0x28>
 800300e:	2010      	movs	r0, #16
 8003010:	f7ff ff44 	bl	8002e9c <malloc>
 8003014:	4602      	mov	r2, r0
 8003016:	61e0      	str	r0, [r4, #28]
 8003018:	b920      	cbnz	r0, 8003024 <_Balloc+0x20>
 800301a:	4b18      	ldr	r3, [pc, #96]	; (800307c <_Balloc+0x78>)
 800301c:	4818      	ldr	r0, [pc, #96]	; (8003080 <_Balloc+0x7c>)
 800301e:	216b      	movs	r1, #107	; 0x6b
 8003020:	f000 fdf2 	bl	8003c08 <__assert_func>
 8003024:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8003028:	6006      	str	r6, [r0, #0]
 800302a:	60c6      	str	r6, [r0, #12]
 800302c:	69e6      	ldr	r6, [r4, #28]
 800302e:	68f3      	ldr	r3, [r6, #12]
 8003030:	b183      	cbz	r3, 8003054 <_Balloc+0x50>
 8003032:	69e3      	ldr	r3, [r4, #28]
 8003034:	68db      	ldr	r3, [r3, #12]
 8003036:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 800303a:	b9b8      	cbnz	r0, 800306c <_Balloc+0x68>
 800303c:	2101      	movs	r1, #1
 800303e:	fa01 f605 	lsl.w	r6, r1, r5
 8003042:	1d72      	adds	r2, r6, #5
 8003044:	0092      	lsls	r2, r2, #2
 8003046:	4620      	mov	r0, r4
 8003048:	f000 fdfc 	bl	8003c44 <_calloc_r>
 800304c:	b160      	cbz	r0, 8003068 <_Balloc+0x64>
 800304e:	e9c0 5601 	strd	r5, r6, [r0, #4]
 8003052:	e00e      	b.n	8003072 <_Balloc+0x6e>
 8003054:	2221      	movs	r2, #33	; 0x21
 8003056:	2104      	movs	r1, #4
 8003058:	4620      	mov	r0, r4
 800305a:	f000 fdf3 	bl	8003c44 <_calloc_r>
 800305e:	69e3      	ldr	r3, [r4, #28]
 8003060:	60f0      	str	r0, [r6, #12]
 8003062:	68db      	ldr	r3, [r3, #12]
 8003064:	2b00      	cmp	r3, #0
 8003066:	d1e4      	bne.n	8003032 <_Balloc+0x2e>
 8003068:	2000      	movs	r0, #0
 800306a:	bd70      	pop	{r4, r5, r6, pc}
 800306c:	6802      	ldr	r2, [r0, #0]
 800306e:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8003072:	2300      	movs	r3, #0
 8003074:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8003078:	e7f7      	b.n	800306a <_Balloc+0x66>
 800307a:	bf00      	nop
 800307c:	08003dc9 	.word	0x08003dc9
 8003080:	08003e49 	.word	0x08003e49

08003084 <_Bfree>:
 8003084:	b570      	push	{r4, r5, r6, lr}
 8003086:	69c6      	ldr	r6, [r0, #28]
 8003088:	4605      	mov	r5, r0
 800308a:	460c      	mov	r4, r1
 800308c:	b976      	cbnz	r6, 80030ac <_Bfree+0x28>
 800308e:	2010      	movs	r0, #16
 8003090:	f7ff ff04 	bl	8002e9c <malloc>
 8003094:	4602      	mov	r2, r0
 8003096:	61e8      	str	r0, [r5, #28]
 8003098:	b920      	cbnz	r0, 80030a4 <_Bfree+0x20>
 800309a:	4b09      	ldr	r3, [pc, #36]	; (80030c0 <_Bfree+0x3c>)
 800309c:	4809      	ldr	r0, [pc, #36]	; (80030c4 <_Bfree+0x40>)
 800309e:	218f      	movs	r1, #143	; 0x8f
 80030a0:	f000 fdb2 	bl	8003c08 <__assert_func>
 80030a4:	e9c0 6601 	strd	r6, r6, [r0, #4]
 80030a8:	6006      	str	r6, [r0, #0]
 80030aa:	60c6      	str	r6, [r0, #12]
 80030ac:	b13c      	cbz	r4, 80030be <_Bfree+0x3a>
 80030ae:	69eb      	ldr	r3, [r5, #28]
 80030b0:	6862      	ldr	r2, [r4, #4]
 80030b2:	68db      	ldr	r3, [r3, #12]
 80030b4:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80030b8:	6021      	str	r1, [r4, #0]
 80030ba:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 80030be:	bd70      	pop	{r4, r5, r6, pc}
 80030c0:	08003dc9 	.word	0x08003dc9
 80030c4:	08003e49 	.word	0x08003e49

080030c8 <__multadd>:
 80030c8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80030cc:	690d      	ldr	r5, [r1, #16]
 80030ce:	4607      	mov	r7, r0
 80030d0:	460c      	mov	r4, r1
 80030d2:	461e      	mov	r6, r3
 80030d4:	f101 0c14 	add.w	ip, r1, #20
 80030d8:	2000      	movs	r0, #0
 80030da:	f8dc 3000 	ldr.w	r3, [ip]
 80030de:	b299      	uxth	r1, r3
 80030e0:	fb02 6101 	mla	r1, r2, r1, r6
 80030e4:	0c1e      	lsrs	r6, r3, #16
 80030e6:	0c0b      	lsrs	r3, r1, #16
 80030e8:	fb02 3306 	mla	r3, r2, r6, r3
 80030ec:	b289      	uxth	r1, r1
 80030ee:	3001      	adds	r0, #1
 80030f0:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 80030f4:	4285      	cmp	r5, r0
 80030f6:	f84c 1b04 	str.w	r1, [ip], #4
 80030fa:	ea4f 4613 	mov.w	r6, r3, lsr #16
 80030fe:	dcec      	bgt.n	80030da <__multadd+0x12>
 8003100:	b30e      	cbz	r6, 8003146 <__multadd+0x7e>
 8003102:	68a3      	ldr	r3, [r4, #8]
 8003104:	42ab      	cmp	r3, r5
 8003106:	dc19      	bgt.n	800313c <__multadd+0x74>
 8003108:	6861      	ldr	r1, [r4, #4]
 800310a:	4638      	mov	r0, r7
 800310c:	3101      	adds	r1, #1
 800310e:	f7ff ff79 	bl	8003004 <_Balloc>
 8003112:	4680      	mov	r8, r0
 8003114:	b928      	cbnz	r0, 8003122 <__multadd+0x5a>
 8003116:	4602      	mov	r2, r0
 8003118:	4b0c      	ldr	r3, [pc, #48]	; (800314c <__multadd+0x84>)
 800311a:	480d      	ldr	r0, [pc, #52]	; (8003150 <__multadd+0x88>)
 800311c:	21ba      	movs	r1, #186	; 0xba
 800311e:	f000 fd73 	bl	8003c08 <__assert_func>
 8003122:	6922      	ldr	r2, [r4, #16]
 8003124:	3202      	adds	r2, #2
 8003126:	f104 010c 	add.w	r1, r4, #12
 800312a:	0092      	lsls	r2, r2, #2
 800312c:	300c      	adds	r0, #12
 800312e:	f7fe ffe0 	bl	80020f2 <memcpy>
 8003132:	4621      	mov	r1, r4
 8003134:	4638      	mov	r0, r7
 8003136:	f7ff ffa5 	bl	8003084 <_Bfree>
 800313a:	4644      	mov	r4, r8
 800313c:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8003140:	3501      	adds	r5, #1
 8003142:	615e      	str	r6, [r3, #20]
 8003144:	6125      	str	r5, [r4, #16]
 8003146:	4620      	mov	r0, r4
 8003148:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800314c:	08003e38 	.word	0x08003e38
 8003150:	08003e49 	.word	0x08003e49

08003154 <__hi0bits>:
 8003154:	0c03      	lsrs	r3, r0, #16
 8003156:	041b      	lsls	r3, r3, #16
 8003158:	b9d3      	cbnz	r3, 8003190 <__hi0bits+0x3c>
 800315a:	0400      	lsls	r0, r0, #16
 800315c:	2310      	movs	r3, #16
 800315e:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 8003162:	bf04      	itt	eq
 8003164:	0200      	lsleq	r0, r0, #8
 8003166:	3308      	addeq	r3, #8
 8003168:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
 800316c:	bf04      	itt	eq
 800316e:	0100      	lsleq	r0, r0, #4
 8003170:	3304      	addeq	r3, #4
 8003172:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
 8003176:	bf04      	itt	eq
 8003178:	0080      	lsleq	r0, r0, #2
 800317a:	3302      	addeq	r3, #2
 800317c:	2800      	cmp	r0, #0
 800317e:	db05      	blt.n	800318c <__hi0bits+0x38>
 8003180:	f010 4f80 	tst.w	r0, #1073741824	; 0x40000000
 8003184:	f103 0301 	add.w	r3, r3, #1
 8003188:	bf08      	it	eq
 800318a:	2320      	moveq	r3, #32
 800318c:	4618      	mov	r0, r3
 800318e:	4770      	bx	lr
 8003190:	2300      	movs	r3, #0
 8003192:	e7e4      	b.n	800315e <__hi0bits+0xa>

08003194 <__lo0bits>:
 8003194:	6803      	ldr	r3, [r0, #0]
 8003196:	f013 0207 	ands.w	r2, r3, #7
 800319a:	d00c      	beq.n	80031b6 <__lo0bits+0x22>
 800319c:	07d9      	lsls	r1, r3, #31
 800319e:	d422      	bmi.n	80031e6 <__lo0bits+0x52>
 80031a0:	079a      	lsls	r2, r3, #30
 80031a2:	bf49      	itett	mi
 80031a4:	085b      	lsrmi	r3, r3, #1
 80031a6:	089b      	lsrpl	r3, r3, #2
 80031a8:	6003      	strmi	r3, [r0, #0]
 80031aa:	2201      	movmi	r2, #1
 80031ac:	bf5c      	itt	pl
 80031ae:	6003      	strpl	r3, [r0, #0]
 80031b0:	2202      	movpl	r2, #2
 80031b2:	4610      	mov	r0, r2
 80031b4:	4770      	bx	lr
 80031b6:	b299      	uxth	r1, r3
 80031b8:	b909      	cbnz	r1, 80031be <__lo0bits+0x2a>
 80031ba:	0c1b      	lsrs	r3, r3, #16
 80031bc:	2210      	movs	r2, #16
 80031be:	b2d9      	uxtb	r1, r3
 80031c0:	b909      	cbnz	r1, 80031c6 <__lo0bits+0x32>
 80031c2:	3208      	adds	r2, #8
 80031c4:	0a1b      	lsrs	r3, r3, #8
 80031c6:	0719      	lsls	r1, r3, #28
 80031c8:	bf04      	itt	eq
 80031ca:	091b      	lsreq	r3, r3, #4
 80031cc:	3204      	addeq	r2, #4
 80031ce:	0799      	lsls	r1, r3, #30
 80031d0:	bf04      	itt	eq
 80031d2:	089b      	lsreq	r3, r3, #2
 80031d4:	3202      	addeq	r2, #2
 80031d6:	07d9      	lsls	r1, r3, #31
 80031d8:	d403      	bmi.n	80031e2 <__lo0bits+0x4e>
 80031da:	085b      	lsrs	r3, r3, #1
 80031dc:	f102 0201 	add.w	r2, r2, #1
 80031e0:	d003      	beq.n	80031ea <__lo0bits+0x56>
 80031e2:	6003      	str	r3, [r0, #0]
 80031e4:	e7e5      	b.n	80031b2 <__lo0bits+0x1e>
 80031e6:	2200      	movs	r2, #0
 80031e8:	e7e3      	b.n	80031b2 <__lo0bits+0x1e>
 80031ea:	2220      	movs	r2, #32
 80031ec:	e7e1      	b.n	80031b2 <__lo0bits+0x1e>
	...

080031f0 <__i2b>:
 80031f0:	b510      	push	{r4, lr}
 80031f2:	460c      	mov	r4, r1
 80031f4:	2101      	movs	r1, #1
 80031f6:	f7ff ff05 	bl	8003004 <_Balloc>
 80031fa:	4602      	mov	r2, r0
 80031fc:	b928      	cbnz	r0, 800320a <__i2b+0x1a>
 80031fe:	4b05      	ldr	r3, [pc, #20]	; (8003214 <__i2b+0x24>)
 8003200:	4805      	ldr	r0, [pc, #20]	; (8003218 <__i2b+0x28>)
 8003202:	f240 1145 	movw	r1, #325	; 0x145
 8003206:	f000 fcff 	bl	8003c08 <__assert_func>
 800320a:	2301      	movs	r3, #1
 800320c:	6144      	str	r4, [r0, #20]
 800320e:	6103      	str	r3, [r0, #16]
 8003210:	bd10      	pop	{r4, pc}
 8003212:	bf00      	nop
 8003214:	08003e38 	.word	0x08003e38
 8003218:	08003e49 	.word	0x08003e49

0800321c <__multiply>:
 800321c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003220:	4691      	mov	r9, r2
 8003222:	690a      	ldr	r2, [r1, #16]
 8003224:	f8d9 3010 	ldr.w	r3, [r9, #16]
 8003228:	429a      	cmp	r2, r3
 800322a:	bfb8      	it	lt
 800322c:	460b      	movlt	r3, r1
 800322e:	460c      	mov	r4, r1
 8003230:	bfbc      	itt	lt
 8003232:	464c      	movlt	r4, r9
 8003234:	4699      	movlt	r9, r3
 8003236:	6927      	ldr	r7, [r4, #16]
 8003238:	f8d9 a010 	ldr.w	sl, [r9, #16]
 800323c:	68a3      	ldr	r3, [r4, #8]
 800323e:	6861      	ldr	r1, [r4, #4]
 8003240:	eb07 060a 	add.w	r6, r7, sl
 8003244:	42b3      	cmp	r3, r6
 8003246:	b085      	sub	sp, #20
 8003248:	bfb8      	it	lt
 800324a:	3101      	addlt	r1, #1
 800324c:	f7ff feda 	bl	8003004 <_Balloc>
 8003250:	b930      	cbnz	r0, 8003260 <__multiply+0x44>
 8003252:	4602      	mov	r2, r0
 8003254:	4b44      	ldr	r3, [pc, #272]	; (8003368 <__multiply+0x14c>)
 8003256:	4845      	ldr	r0, [pc, #276]	; (800336c <__multiply+0x150>)
 8003258:	f44f 71b1 	mov.w	r1, #354	; 0x162
 800325c:	f000 fcd4 	bl	8003c08 <__assert_func>
 8003260:	f100 0514 	add.w	r5, r0, #20
 8003264:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 8003268:	462b      	mov	r3, r5
 800326a:	2200      	movs	r2, #0
 800326c:	4543      	cmp	r3, r8
 800326e:	d321      	bcc.n	80032b4 <__multiply+0x98>
 8003270:	f104 0314 	add.w	r3, r4, #20
 8003274:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 8003278:	f109 0314 	add.w	r3, r9, #20
 800327c:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 8003280:	9202      	str	r2, [sp, #8]
 8003282:	1b3a      	subs	r2, r7, r4
 8003284:	3a15      	subs	r2, #21
 8003286:	f022 0203 	bic.w	r2, r2, #3
 800328a:	3204      	adds	r2, #4
 800328c:	f104 0115 	add.w	r1, r4, #21
 8003290:	428f      	cmp	r7, r1
 8003292:	bf38      	it	cc
 8003294:	2204      	movcc	r2, #4
 8003296:	9201      	str	r2, [sp, #4]
 8003298:	9a02      	ldr	r2, [sp, #8]
 800329a:	9303      	str	r3, [sp, #12]
 800329c:	429a      	cmp	r2, r3
 800329e:	d80c      	bhi.n	80032ba <__multiply+0x9e>
 80032a0:	2e00      	cmp	r6, #0
 80032a2:	dd03      	ble.n	80032ac <__multiply+0x90>
 80032a4:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 80032a8:	2b00      	cmp	r3, #0
 80032aa:	d05b      	beq.n	8003364 <__multiply+0x148>
 80032ac:	6106      	str	r6, [r0, #16]
 80032ae:	b005      	add	sp, #20
 80032b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80032b4:	f843 2b04 	str.w	r2, [r3], #4
 80032b8:	e7d8      	b.n	800326c <__multiply+0x50>
 80032ba:	f8b3 a000 	ldrh.w	sl, [r3]
 80032be:	f1ba 0f00 	cmp.w	sl, #0
 80032c2:	d024      	beq.n	800330e <__multiply+0xf2>
 80032c4:	f104 0e14 	add.w	lr, r4, #20
 80032c8:	46a9      	mov	r9, r5
 80032ca:	f04f 0c00 	mov.w	ip, #0
 80032ce:	f85e 2b04 	ldr.w	r2, [lr], #4
 80032d2:	f8d9 1000 	ldr.w	r1, [r9]
 80032d6:	fa1f fb82 	uxth.w	fp, r2
 80032da:	b289      	uxth	r1, r1
 80032dc:	fb0a 110b 	mla	r1, sl, fp, r1
 80032e0:	ea4f 4b12 	mov.w	fp, r2, lsr #16
 80032e4:	f8d9 2000 	ldr.w	r2, [r9]
 80032e8:	4461      	add	r1, ip
 80032ea:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 80032ee:	fb0a c20b 	mla	r2, sl, fp, ip
 80032f2:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 80032f6:	b289      	uxth	r1, r1
 80032f8:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 80032fc:	4577      	cmp	r7, lr
 80032fe:	f849 1b04 	str.w	r1, [r9], #4
 8003302:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 8003306:	d8e2      	bhi.n	80032ce <__multiply+0xb2>
 8003308:	9a01      	ldr	r2, [sp, #4]
 800330a:	f845 c002 	str.w	ip, [r5, r2]
 800330e:	9a03      	ldr	r2, [sp, #12]
 8003310:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 8003314:	3304      	adds	r3, #4
 8003316:	f1b9 0f00 	cmp.w	r9, #0
 800331a:	d021      	beq.n	8003360 <__multiply+0x144>
 800331c:	6829      	ldr	r1, [r5, #0]
 800331e:	f104 0c14 	add.w	ip, r4, #20
 8003322:	46ae      	mov	lr, r5
 8003324:	f04f 0a00 	mov.w	sl, #0
 8003328:	f8bc b000 	ldrh.w	fp, [ip]
 800332c:	f8be 2002 	ldrh.w	r2, [lr, #2]
 8003330:	fb09 220b 	mla	r2, r9, fp, r2
 8003334:	4452      	add	r2, sl
 8003336:	b289      	uxth	r1, r1
 8003338:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800333c:	f84e 1b04 	str.w	r1, [lr], #4
 8003340:	f85c 1b04 	ldr.w	r1, [ip], #4
 8003344:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8003348:	f8be 1000 	ldrh.w	r1, [lr]
 800334c:	fb09 110a 	mla	r1, r9, sl, r1
 8003350:	eb01 4112 	add.w	r1, r1, r2, lsr #16
 8003354:	4567      	cmp	r7, ip
 8003356:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 800335a:	d8e5      	bhi.n	8003328 <__multiply+0x10c>
 800335c:	9a01      	ldr	r2, [sp, #4]
 800335e:	50a9      	str	r1, [r5, r2]
 8003360:	3504      	adds	r5, #4
 8003362:	e799      	b.n	8003298 <__multiply+0x7c>
 8003364:	3e01      	subs	r6, #1
 8003366:	e79b      	b.n	80032a0 <__multiply+0x84>
 8003368:	08003e38 	.word	0x08003e38
 800336c:	08003e49 	.word	0x08003e49

08003370 <__pow5mult>:
 8003370:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003374:	4615      	mov	r5, r2
 8003376:	f012 0203 	ands.w	r2, r2, #3
 800337a:	4606      	mov	r6, r0
 800337c:	460f      	mov	r7, r1
 800337e:	d007      	beq.n	8003390 <__pow5mult+0x20>
 8003380:	4c25      	ldr	r4, [pc, #148]	; (8003418 <__pow5mult+0xa8>)
 8003382:	3a01      	subs	r2, #1
 8003384:	2300      	movs	r3, #0
 8003386:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 800338a:	f7ff fe9d 	bl	80030c8 <__multadd>
 800338e:	4607      	mov	r7, r0
 8003390:	10ad      	asrs	r5, r5, #2
 8003392:	d03d      	beq.n	8003410 <__pow5mult+0xa0>
 8003394:	69f4      	ldr	r4, [r6, #28]
 8003396:	b97c      	cbnz	r4, 80033b8 <__pow5mult+0x48>
 8003398:	2010      	movs	r0, #16
 800339a:	f7ff fd7f 	bl	8002e9c <malloc>
 800339e:	4602      	mov	r2, r0
 80033a0:	61f0      	str	r0, [r6, #28]
 80033a2:	b928      	cbnz	r0, 80033b0 <__pow5mult+0x40>
 80033a4:	4b1d      	ldr	r3, [pc, #116]	; (800341c <__pow5mult+0xac>)
 80033a6:	481e      	ldr	r0, [pc, #120]	; (8003420 <__pow5mult+0xb0>)
 80033a8:	f240 11b3 	movw	r1, #435	; 0x1b3
 80033ac:	f000 fc2c 	bl	8003c08 <__assert_func>
 80033b0:	e9c0 4401 	strd	r4, r4, [r0, #4]
 80033b4:	6004      	str	r4, [r0, #0]
 80033b6:	60c4      	str	r4, [r0, #12]
 80033b8:	f8d6 801c 	ldr.w	r8, [r6, #28]
 80033bc:	f8d8 4008 	ldr.w	r4, [r8, #8]
 80033c0:	b94c      	cbnz	r4, 80033d6 <__pow5mult+0x66>
 80033c2:	f240 2171 	movw	r1, #625	; 0x271
 80033c6:	4630      	mov	r0, r6
 80033c8:	f7ff ff12 	bl	80031f0 <__i2b>
 80033cc:	2300      	movs	r3, #0
 80033ce:	f8c8 0008 	str.w	r0, [r8, #8]
 80033d2:	4604      	mov	r4, r0
 80033d4:	6003      	str	r3, [r0, #0]
 80033d6:	f04f 0900 	mov.w	r9, #0
 80033da:	07eb      	lsls	r3, r5, #31
 80033dc:	d50a      	bpl.n	80033f4 <__pow5mult+0x84>
 80033de:	4639      	mov	r1, r7
 80033e0:	4622      	mov	r2, r4
 80033e2:	4630      	mov	r0, r6
 80033e4:	f7ff ff1a 	bl	800321c <__multiply>
 80033e8:	4639      	mov	r1, r7
 80033ea:	4680      	mov	r8, r0
 80033ec:	4630      	mov	r0, r6
 80033ee:	f7ff fe49 	bl	8003084 <_Bfree>
 80033f2:	4647      	mov	r7, r8
 80033f4:	106d      	asrs	r5, r5, #1
 80033f6:	d00b      	beq.n	8003410 <__pow5mult+0xa0>
 80033f8:	6820      	ldr	r0, [r4, #0]
 80033fa:	b938      	cbnz	r0, 800340c <__pow5mult+0x9c>
 80033fc:	4622      	mov	r2, r4
 80033fe:	4621      	mov	r1, r4
 8003400:	4630      	mov	r0, r6
 8003402:	f7ff ff0b 	bl	800321c <__multiply>
 8003406:	6020      	str	r0, [r4, #0]
 8003408:	f8c0 9000 	str.w	r9, [r0]
 800340c:	4604      	mov	r4, r0
 800340e:	e7e4      	b.n	80033da <__pow5mult+0x6a>
 8003410:	4638      	mov	r0, r7
 8003412:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8003416:	bf00      	nop
 8003418:	08003f98 	.word	0x08003f98
 800341c:	08003dc9 	.word	0x08003dc9
 8003420:	08003e49 	.word	0x08003e49

08003424 <__lshift>:
 8003424:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003428:	460c      	mov	r4, r1
 800342a:	6849      	ldr	r1, [r1, #4]
 800342c:	6923      	ldr	r3, [r4, #16]
 800342e:	eb03 1862 	add.w	r8, r3, r2, asr #5
 8003432:	68a3      	ldr	r3, [r4, #8]
 8003434:	4607      	mov	r7, r0
 8003436:	4691      	mov	r9, r2
 8003438:	ea4f 1a62 	mov.w	sl, r2, asr #5
 800343c:	f108 0601 	add.w	r6, r8, #1
 8003440:	42b3      	cmp	r3, r6
 8003442:	db0b      	blt.n	800345c <__lshift+0x38>
 8003444:	4638      	mov	r0, r7
 8003446:	f7ff fddd 	bl	8003004 <_Balloc>
 800344a:	4605      	mov	r5, r0
 800344c:	b948      	cbnz	r0, 8003462 <__lshift+0x3e>
 800344e:	4602      	mov	r2, r0
 8003450:	4b28      	ldr	r3, [pc, #160]	; (80034f4 <__lshift+0xd0>)
 8003452:	4829      	ldr	r0, [pc, #164]	; (80034f8 <__lshift+0xd4>)
 8003454:	f44f 71ef 	mov.w	r1, #478	; 0x1de
 8003458:	f000 fbd6 	bl	8003c08 <__assert_func>
 800345c:	3101      	adds	r1, #1
 800345e:	005b      	lsls	r3, r3, #1
 8003460:	e7ee      	b.n	8003440 <__lshift+0x1c>
 8003462:	2300      	movs	r3, #0
 8003464:	f100 0114 	add.w	r1, r0, #20
 8003468:	f100 0210 	add.w	r2, r0, #16
 800346c:	4618      	mov	r0, r3
 800346e:	4553      	cmp	r3, sl
 8003470:	db33      	blt.n	80034da <__lshift+0xb6>
 8003472:	6920      	ldr	r0, [r4, #16]
 8003474:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8003478:	f104 0314 	add.w	r3, r4, #20
 800347c:	f019 091f 	ands.w	r9, r9, #31
 8003480:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8003484:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8003488:	d02b      	beq.n	80034e2 <__lshift+0xbe>
 800348a:	f1c9 0e20 	rsb	lr, r9, #32
 800348e:	468a      	mov	sl, r1
 8003490:	2200      	movs	r2, #0
 8003492:	6818      	ldr	r0, [r3, #0]
 8003494:	fa00 f009 	lsl.w	r0, r0, r9
 8003498:	4310      	orrs	r0, r2
 800349a:	f84a 0b04 	str.w	r0, [sl], #4
 800349e:	f853 2b04 	ldr.w	r2, [r3], #4
 80034a2:	459c      	cmp	ip, r3
 80034a4:	fa22 f20e 	lsr.w	r2, r2, lr
 80034a8:	d8f3      	bhi.n	8003492 <__lshift+0x6e>
 80034aa:	ebac 0304 	sub.w	r3, ip, r4
 80034ae:	3b15      	subs	r3, #21
 80034b0:	f023 0303 	bic.w	r3, r3, #3
 80034b4:	3304      	adds	r3, #4
 80034b6:	f104 0015 	add.w	r0, r4, #21
 80034ba:	4584      	cmp	ip, r0
 80034bc:	bf38      	it	cc
 80034be:	2304      	movcc	r3, #4
 80034c0:	50ca      	str	r2, [r1, r3]
 80034c2:	b10a      	cbz	r2, 80034c8 <__lshift+0xa4>
 80034c4:	f108 0602 	add.w	r6, r8, #2
 80034c8:	3e01      	subs	r6, #1
 80034ca:	4638      	mov	r0, r7
 80034cc:	612e      	str	r6, [r5, #16]
 80034ce:	4621      	mov	r1, r4
 80034d0:	f7ff fdd8 	bl	8003084 <_Bfree>
 80034d4:	4628      	mov	r0, r5
 80034d6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80034da:	f842 0f04 	str.w	r0, [r2, #4]!
 80034de:	3301      	adds	r3, #1
 80034e0:	e7c5      	b.n	800346e <__lshift+0x4a>
 80034e2:	3904      	subs	r1, #4
 80034e4:	f853 2b04 	ldr.w	r2, [r3], #4
 80034e8:	f841 2f04 	str.w	r2, [r1, #4]!
 80034ec:	459c      	cmp	ip, r3
 80034ee:	d8f9      	bhi.n	80034e4 <__lshift+0xc0>
 80034f0:	e7ea      	b.n	80034c8 <__lshift+0xa4>
 80034f2:	bf00      	nop
 80034f4:	08003e38 	.word	0x08003e38
 80034f8:	08003e49 	.word	0x08003e49

080034fc <__mcmp>:
 80034fc:	b530      	push	{r4, r5, lr}
 80034fe:	6902      	ldr	r2, [r0, #16]
 8003500:	690c      	ldr	r4, [r1, #16]
 8003502:	1b12      	subs	r2, r2, r4
 8003504:	d10e      	bne.n	8003524 <__mcmp+0x28>
 8003506:	f100 0314 	add.w	r3, r0, #20
 800350a:	3114      	adds	r1, #20
 800350c:	eb03 0084 	add.w	r0, r3, r4, lsl #2
 8003510:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 8003514:	f850 5d04 	ldr.w	r5, [r0, #-4]!
 8003518:	f851 4d04 	ldr.w	r4, [r1, #-4]!
 800351c:	42a5      	cmp	r5, r4
 800351e:	d003      	beq.n	8003528 <__mcmp+0x2c>
 8003520:	d305      	bcc.n	800352e <__mcmp+0x32>
 8003522:	2201      	movs	r2, #1
 8003524:	4610      	mov	r0, r2
 8003526:	bd30      	pop	{r4, r5, pc}
 8003528:	4283      	cmp	r3, r0
 800352a:	d3f3      	bcc.n	8003514 <__mcmp+0x18>
 800352c:	e7fa      	b.n	8003524 <__mcmp+0x28>
 800352e:	f04f 32ff 	mov.w	r2, #4294967295
 8003532:	e7f7      	b.n	8003524 <__mcmp+0x28>

08003534 <__mdiff>:
 8003534:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003538:	460c      	mov	r4, r1
 800353a:	4606      	mov	r6, r0
 800353c:	4611      	mov	r1, r2
 800353e:	4620      	mov	r0, r4
 8003540:	4690      	mov	r8, r2
 8003542:	f7ff ffdb 	bl	80034fc <__mcmp>
 8003546:	1e05      	subs	r5, r0, #0
 8003548:	d110      	bne.n	800356c <__mdiff+0x38>
 800354a:	4629      	mov	r1, r5
 800354c:	4630      	mov	r0, r6
 800354e:	f7ff fd59 	bl	8003004 <_Balloc>
 8003552:	b930      	cbnz	r0, 8003562 <__mdiff+0x2e>
 8003554:	4b3a      	ldr	r3, [pc, #232]	; (8003640 <__mdiff+0x10c>)
 8003556:	4602      	mov	r2, r0
 8003558:	f240 2137 	movw	r1, #567	; 0x237
 800355c:	4839      	ldr	r0, [pc, #228]	; (8003644 <__mdiff+0x110>)
 800355e:	f000 fb53 	bl	8003c08 <__assert_func>
 8003562:	2301      	movs	r3, #1
 8003564:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8003568:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800356c:	bfa4      	itt	ge
 800356e:	4643      	movge	r3, r8
 8003570:	46a0      	movge	r8, r4
 8003572:	4630      	mov	r0, r6
 8003574:	f8d8 1004 	ldr.w	r1, [r8, #4]
 8003578:	bfa6      	itte	ge
 800357a:	461c      	movge	r4, r3
 800357c:	2500      	movge	r5, #0
 800357e:	2501      	movlt	r5, #1
 8003580:	f7ff fd40 	bl	8003004 <_Balloc>
 8003584:	b920      	cbnz	r0, 8003590 <__mdiff+0x5c>
 8003586:	4b2e      	ldr	r3, [pc, #184]	; (8003640 <__mdiff+0x10c>)
 8003588:	4602      	mov	r2, r0
 800358a:	f240 2145 	movw	r1, #581	; 0x245
 800358e:	e7e5      	b.n	800355c <__mdiff+0x28>
 8003590:	f8d8 7010 	ldr.w	r7, [r8, #16]
 8003594:	6926      	ldr	r6, [r4, #16]
 8003596:	60c5      	str	r5, [r0, #12]
 8003598:	f104 0914 	add.w	r9, r4, #20
 800359c:	f108 0514 	add.w	r5, r8, #20
 80035a0:	f100 0e14 	add.w	lr, r0, #20
 80035a4:	eb05 0c87 	add.w	ip, r5, r7, lsl #2
 80035a8:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 80035ac:	f108 0210 	add.w	r2, r8, #16
 80035b0:	46f2      	mov	sl, lr
 80035b2:	2100      	movs	r1, #0
 80035b4:	f859 3b04 	ldr.w	r3, [r9], #4
 80035b8:	f852 bf04 	ldr.w	fp, [r2, #4]!
 80035bc:	fa11 f88b 	uxtah	r8, r1, fp
 80035c0:	b299      	uxth	r1, r3
 80035c2:	0c1b      	lsrs	r3, r3, #16
 80035c4:	eba8 0801 	sub.w	r8, r8, r1
 80035c8:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 80035cc:	eb03 4328 	add.w	r3, r3, r8, asr #16
 80035d0:	fa1f f888 	uxth.w	r8, r8
 80035d4:	1419      	asrs	r1, r3, #16
 80035d6:	454e      	cmp	r6, r9
 80035d8:	ea48 4303 	orr.w	r3, r8, r3, lsl #16
 80035dc:	f84a 3b04 	str.w	r3, [sl], #4
 80035e0:	d8e8      	bhi.n	80035b4 <__mdiff+0x80>
 80035e2:	1b33      	subs	r3, r6, r4
 80035e4:	3b15      	subs	r3, #21
 80035e6:	f023 0303 	bic.w	r3, r3, #3
 80035ea:	3304      	adds	r3, #4
 80035ec:	3415      	adds	r4, #21
 80035ee:	42a6      	cmp	r6, r4
 80035f0:	bf38      	it	cc
 80035f2:	2304      	movcc	r3, #4
 80035f4:	441d      	add	r5, r3
 80035f6:	4473      	add	r3, lr
 80035f8:	469e      	mov	lr, r3
 80035fa:	462e      	mov	r6, r5
 80035fc:	4566      	cmp	r6, ip
 80035fe:	d30e      	bcc.n	800361e <__mdiff+0xea>
 8003600:	f10c 0203 	add.w	r2, ip, #3
 8003604:	1b52      	subs	r2, r2, r5
 8003606:	f022 0203 	bic.w	r2, r2, #3
 800360a:	3d03      	subs	r5, #3
 800360c:	45ac      	cmp	ip, r5
 800360e:	bf38      	it	cc
 8003610:	2200      	movcc	r2, #0
 8003612:	4413      	add	r3, r2
 8003614:	f853 2d04 	ldr.w	r2, [r3, #-4]!
 8003618:	b17a      	cbz	r2, 800363a <__mdiff+0x106>
 800361a:	6107      	str	r7, [r0, #16]
 800361c:	e7a4      	b.n	8003568 <__mdiff+0x34>
 800361e:	f856 8b04 	ldr.w	r8, [r6], #4
 8003622:	fa11 f288 	uxtah	r2, r1, r8
 8003626:	1414      	asrs	r4, r2, #16
 8003628:	eb04 4418 	add.w	r4, r4, r8, lsr #16
 800362c:	b292      	uxth	r2, r2
 800362e:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 8003632:	f84e 2b04 	str.w	r2, [lr], #4
 8003636:	1421      	asrs	r1, r4, #16
 8003638:	e7e0      	b.n	80035fc <__mdiff+0xc8>
 800363a:	3f01      	subs	r7, #1
 800363c:	e7ea      	b.n	8003614 <__mdiff+0xe0>
 800363e:	bf00      	nop
 8003640:	08003e38 	.word	0x08003e38
 8003644:	08003e49 	.word	0x08003e49

08003648 <__d2b>:
 8003648:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800364c:	460f      	mov	r7, r1
 800364e:	2101      	movs	r1, #1
 8003650:	ec59 8b10 	vmov	r8, r9, d0
 8003654:	4616      	mov	r6, r2
 8003656:	f7ff fcd5 	bl	8003004 <_Balloc>
 800365a:	4604      	mov	r4, r0
 800365c:	b930      	cbnz	r0, 800366c <__d2b+0x24>
 800365e:	4602      	mov	r2, r0
 8003660:	4b24      	ldr	r3, [pc, #144]	; (80036f4 <__d2b+0xac>)
 8003662:	4825      	ldr	r0, [pc, #148]	; (80036f8 <__d2b+0xb0>)
 8003664:	f240 310f 	movw	r1, #783	; 0x30f
 8003668:	f000 face 	bl	8003c08 <__assert_func>
 800366c:	f3c9 550a 	ubfx	r5, r9, #20, #11
 8003670:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8003674:	bb2d      	cbnz	r5, 80036c2 <__d2b+0x7a>
 8003676:	9301      	str	r3, [sp, #4]
 8003678:	f1b8 0300 	subs.w	r3, r8, #0
 800367c:	d026      	beq.n	80036cc <__d2b+0x84>
 800367e:	4668      	mov	r0, sp
 8003680:	9300      	str	r3, [sp, #0]
 8003682:	f7ff fd87 	bl	8003194 <__lo0bits>
 8003686:	e9dd 1200 	ldrd	r1, r2, [sp]
 800368a:	b1e8      	cbz	r0, 80036c8 <__d2b+0x80>
 800368c:	f1c0 0320 	rsb	r3, r0, #32
 8003690:	fa02 f303 	lsl.w	r3, r2, r3
 8003694:	430b      	orrs	r3, r1
 8003696:	40c2      	lsrs	r2, r0
 8003698:	6163      	str	r3, [r4, #20]
 800369a:	9201      	str	r2, [sp, #4]
 800369c:	9b01      	ldr	r3, [sp, #4]
 800369e:	61a3      	str	r3, [r4, #24]
 80036a0:	2b00      	cmp	r3, #0
 80036a2:	bf14      	ite	ne
 80036a4:	2202      	movne	r2, #2
 80036a6:	2201      	moveq	r2, #1
 80036a8:	6122      	str	r2, [r4, #16]
 80036aa:	b1bd      	cbz	r5, 80036dc <__d2b+0x94>
 80036ac:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 80036b0:	4405      	add	r5, r0
 80036b2:	603d      	str	r5, [r7, #0]
 80036b4:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 80036b8:	6030      	str	r0, [r6, #0]
 80036ba:	4620      	mov	r0, r4
 80036bc:	b003      	add	sp, #12
 80036be:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80036c2:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80036c6:	e7d6      	b.n	8003676 <__d2b+0x2e>
 80036c8:	6161      	str	r1, [r4, #20]
 80036ca:	e7e7      	b.n	800369c <__d2b+0x54>
 80036cc:	a801      	add	r0, sp, #4
 80036ce:	f7ff fd61 	bl	8003194 <__lo0bits>
 80036d2:	9b01      	ldr	r3, [sp, #4]
 80036d4:	6163      	str	r3, [r4, #20]
 80036d6:	3020      	adds	r0, #32
 80036d8:	2201      	movs	r2, #1
 80036da:	e7e5      	b.n	80036a8 <__d2b+0x60>
 80036dc:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 80036e0:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 80036e4:	6038      	str	r0, [r7, #0]
 80036e6:	6918      	ldr	r0, [r3, #16]
 80036e8:	f7ff fd34 	bl	8003154 <__hi0bits>
 80036ec:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 80036f0:	e7e2      	b.n	80036b8 <__d2b+0x70>
 80036f2:	bf00      	nop
 80036f4:	08003e38 	.word	0x08003e38
 80036f8:	08003e49 	.word	0x08003e49

080036fc <__sfputc_r>:
 80036fc:	6893      	ldr	r3, [r2, #8]
 80036fe:	3b01      	subs	r3, #1
 8003700:	2b00      	cmp	r3, #0
 8003702:	b410      	push	{r4}
 8003704:	6093      	str	r3, [r2, #8]
 8003706:	da08      	bge.n	800371a <__sfputc_r+0x1e>
 8003708:	6994      	ldr	r4, [r2, #24]
 800370a:	42a3      	cmp	r3, r4
 800370c:	db01      	blt.n	8003712 <__sfputc_r+0x16>
 800370e:	290a      	cmp	r1, #10
 8003710:	d103      	bne.n	800371a <__sfputc_r+0x1e>
 8003712:	f85d 4b04 	ldr.w	r4, [sp], #4
 8003716:	f7fe bbd8 	b.w	8001eca <__swbuf_r>
 800371a:	6813      	ldr	r3, [r2, #0]
 800371c:	1c58      	adds	r0, r3, #1
 800371e:	6010      	str	r0, [r2, #0]
 8003720:	7019      	strb	r1, [r3, #0]
 8003722:	4608      	mov	r0, r1
 8003724:	f85d 4b04 	ldr.w	r4, [sp], #4
 8003728:	4770      	bx	lr

0800372a <__sfputs_r>:
 800372a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800372c:	4606      	mov	r6, r0
 800372e:	460f      	mov	r7, r1
 8003730:	4614      	mov	r4, r2
 8003732:	18d5      	adds	r5, r2, r3
 8003734:	42ac      	cmp	r4, r5
 8003736:	d101      	bne.n	800373c <__sfputs_r+0x12>
 8003738:	2000      	movs	r0, #0
 800373a:	e007      	b.n	800374c <__sfputs_r+0x22>
 800373c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003740:	463a      	mov	r2, r7
 8003742:	4630      	mov	r0, r6
 8003744:	f7ff ffda 	bl	80036fc <__sfputc_r>
 8003748:	1c43      	adds	r3, r0, #1
 800374a:	d1f3      	bne.n	8003734 <__sfputs_r+0xa>
 800374c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08003750 <_vfiprintf_r>:
 8003750:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003754:	460d      	mov	r5, r1
 8003756:	b09d      	sub	sp, #116	; 0x74
 8003758:	4614      	mov	r4, r2
 800375a:	4698      	mov	r8, r3
 800375c:	4606      	mov	r6, r0
 800375e:	b118      	cbz	r0, 8003768 <_vfiprintf_r+0x18>
 8003760:	6a03      	ldr	r3, [r0, #32]
 8003762:	b90b      	cbnz	r3, 8003768 <_vfiprintf_r+0x18>
 8003764:	f7fe fb38 	bl	8001dd8 <__sinit>
 8003768:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800376a:	07d9      	lsls	r1, r3, #31
 800376c:	d405      	bmi.n	800377a <_vfiprintf_r+0x2a>
 800376e:	89ab      	ldrh	r3, [r5, #12]
 8003770:	059a      	lsls	r2, r3, #22
 8003772:	d402      	bmi.n	800377a <_vfiprintf_r+0x2a>
 8003774:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8003776:	f7fe fcba 	bl	80020ee <__retarget_lock_acquire_recursive>
 800377a:	89ab      	ldrh	r3, [r5, #12]
 800377c:	071b      	lsls	r3, r3, #28
 800377e:	d501      	bpl.n	8003784 <_vfiprintf_r+0x34>
 8003780:	692b      	ldr	r3, [r5, #16]
 8003782:	b99b      	cbnz	r3, 80037ac <_vfiprintf_r+0x5c>
 8003784:	4629      	mov	r1, r5
 8003786:	4630      	mov	r0, r6
 8003788:	f7fe fbdc 	bl	8001f44 <__swsetup_r>
 800378c:	b170      	cbz	r0, 80037ac <_vfiprintf_r+0x5c>
 800378e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8003790:	07dc      	lsls	r4, r3, #31
 8003792:	d504      	bpl.n	800379e <_vfiprintf_r+0x4e>
 8003794:	f04f 30ff 	mov.w	r0, #4294967295
 8003798:	b01d      	add	sp, #116	; 0x74
 800379a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800379e:	89ab      	ldrh	r3, [r5, #12]
 80037a0:	0598      	lsls	r0, r3, #22
 80037a2:	d4f7      	bmi.n	8003794 <_vfiprintf_r+0x44>
 80037a4:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80037a6:	f7fe fca3 	bl	80020f0 <__retarget_lock_release_recursive>
 80037aa:	e7f3      	b.n	8003794 <_vfiprintf_r+0x44>
 80037ac:	2300      	movs	r3, #0
 80037ae:	9309      	str	r3, [sp, #36]	; 0x24
 80037b0:	2320      	movs	r3, #32
 80037b2:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80037b6:	f8cd 800c 	str.w	r8, [sp, #12]
 80037ba:	2330      	movs	r3, #48	; 0x30
 80037bc:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 8003970 <_vfiprintf_r+0x220>
 80037c0:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80037c4:	f04f 0901 	mov.w	r9, #1
 80037c8:	4623      	mov	r3, r4
 80037ca:	469a      	mov	sl, r3
 80037cc:	f813 2b01 	ldrb.w	r2, [r3], #1
 80037d0:	b10a      	cbz	r2, 80037d6 <_vfiprintf_r+0x86>
 80037d2:	2a25      	cmp	r2, #37	; 0x25
 80037d4:	d1f9      	bne.n	80037ca <_vfiprintf_r+0x7a>
 80037d6:	ebba 0b04 	subs.w	fp, sl, r4
 80037da:	d00b      	beq.n	80037f4 <_vfiprintf_r+0xa4>
 80037dc:	465b      	mov	r3, fp
 80037de:	4622      	mov	r2, r4
 80037e0:	4629      	mov	r1, r5
 80037e2:	4630      	mov	r0, r6
 80037e4:	f7ff ffa1 	bl	800372a <__sfputs_r>
 80037e8:	3001      	adds	r0, #1
 80037ea:	f000 80a9 	beq.w	8003940 <_vfiprintf_r+0x1f0>
 80037ee:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80037f0:	445a      	add	r2, fp
 80037f2:	9209      	str	r2, [sp, #36]	; 0x24
 80037f4:	f89a 3000 	ldrb.w	r3, [sl]
 80037f8:	2b00      	cmp	r3, #0
 80037fa:	f000 80a1 	beq.w	8003940 <_vfiprintf_r+0x1f0>
 80037fe:	2300      	movs	r3, #0
 8003800:	f04f 32ff 	mov.w	r2, #4294967295
 8003804:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8003808:	f10a 0a01 	add.w	sl, sl, #1
 800380c:	9304      	str	r3, [sp, #16]
 800380e:	9307      	str	r3, [sp, #28]
 8003810:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8003814:	931a      	str	r3, [sp, #104]	; 0x68
 8003816:	4654      	mov	r4, sl
 8003818:	2205      	movs	r2, #5
 800381a:	f814 1b01 	ldrb.w	r1, [r4], #1
 800381e:	4854      	ldr	r0, [pc, #336]	; (8003970 <_vfiprintf_r+0x220>)
 8003820:	f7fc fcde 	bl	80001e0 <memchr>
 8003824:	9a04      	ldr	r2, [sp, #16]
 8003826:	b9d8      	cbnz	r0, 8003860 <_vfiprintf_r+0x110>
 8003828:	06d1      	lsls	r1, r2, #27
 800382a:	bf44      	itt	mi
 800382c:	2320      	movmi	r3, #32
 800382e:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8003832:	0713      	lsls	r3, r2, #28
 8003834:	bf44      	itt	mi
 8003836:	232b      	movmi	r3, #43	; 0x2b
 8003838:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800383c:	f89a 3000 	ldrb.w	r3, [sl]
 8003840:	2b2a      	cmp	r3, #42	; 0x2a
 8003842:	d015      	beq.n	8003870 <_vfiprintf_r+0x120>
 8003844:	9a07      	ldr	r2, [sp, #28]
 8003846:	4654      	mov	r4, sl
 8003848:	2000      	movs	r0, #0
 800384a:	f04f 0c0a 	mov.w	ip, #10
 800384e:	4621      	mov	r1, r4
 8003850:	f811 3b01 	ldrb.w	r3, [r1], #1
 8003854:	3b30      	subs	r3, #48	; 0x30
 8003856:	2b09      	cmp	r3, #9
 8003858:	d94d      	bls.n	80038f6 <_vfiprintf_r+0x1a6>
 800385a:	b1b0      	cbz	r0, 800388a <_vfiprintf_r+0x13a>
 800385c:	9207      	str	r2, [sp, #28]
 800385e:	e014      	b.n	800388a <_vfiprintf_r+0x13a>
 8003860:	eba0 0308 	sub.w	r3, r0, r8
 8003864:	fa09 f303 	lsl.w	r3, r9, r3
 8003868:	4313      	orrs	r3, r2
 800386a:	9304      	str	r3, [sp, #16]
 800386c:	46a2      	mov	sl, r4
 800386e:	e7d2      	b.n	8003816 <_vfiprintf_r+0xc6>
 8003870:	9b03      	ldr	r3, [sp, #12]
 8003872:	1d19      	adds	r1, r3, #4
 8003874:	681b      	ldr	r3, [r3, #0]
 8003876:	9103      	str	r1, [sp, #12]
 8003878:	2b00      	cmp	r3, #0
 800387a:	bfbb      	ittet	lt
 800387c:	425b      	neglt	r3, r3
 800387e:	f042 0202 	orrlt.w	r2, r2, #2
 8003882:	9307      	strge	r3, [sp, #28]
 8003884:	9307      	strlt	r3, [sp, #28]
 8003886:	bfb8      	it	lt
 8003888:	9204      	strlt	r2, [sp, #16]
 800388a:	7823      	ldrb	r3, [r4, #0]
 800388c:	2b2e      	cmp	r3, #46	; 0x2e
 800388e:	d10c      	bne.n	80038aa <_vfiprintf_r+0x15a>
 8003890:	7863      	ldrb	r3, [r4, #1]
 8003892:	2b2a      	cmp	r3, #42	; 0x2a
 8003894:	d134      	bne.n	8003900 <_vfiprintf_r+0x1b0>
 8003896:	9b03      	ldr	r3, [sp, #12]
 8003898:	1d1a      	adds	r2, r3, #4
 800389a:	681b      	ldr	r3, [r3, #0]
 800389c:	9203      	str	r2, [sp, #12]
 800389e:	2b00      	cmp	r3, #0
 80038a0:	bfb8      	it	lt
 80038a2:	f04f 33ff 	movlt.w	r3, #4294967295
 80038a6:	3402      	adds	r4, #2
 80038a8:	9305      	str	r3, [sp, #20]
 80038aa:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 8003980 <_vfiprintf_r+0x230>
 80038ae:	7821      	ldrb	r1, [r4, #0]
 80038b0:	2203      	movs	r2, #3
 80038b2:	4650      	mov	r0, sl
 80038b4:	f7fc fc94 	bl	80001e0 <memchr>
 80038b8:	b138      	cbz	r0, 80038ca <_vfiprintf_r+0x17a>
 80038ba:	9b04      	ldr	r3, [sp, #16]
 80038bc:	eba0 000a 	sub.w	r0, r0, sl
 80038c0:	2240      	movs	r2, #64	; 0x40
 80038c2:	4082      	lsls	r2, r0
 80038c4:	4313      	orrs	r3, r2
 80038c6:	3401      	adds	r4, #1
 80038c8:	9304      	str	r3, [sp, #16]
 80038ca:	f814 1b01 	ldrb.w	r1, [r4], #1
 80038ce:	4829      	ldr	r0, [pc, #164]	; (8003974 <_vfiprintf_r+0x224>)
 80038d0:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80038d4:	2206      	movs	r2, #6
 80038d6:	f7fc fc83 	bl	80001e0 <memchr>
 80038da:	2800      	cmp	r0, #0
 80038dc:	d03f      	beq.n	800395e <_vfiprintf_r+0x20e>
 80038de:	4b26      	ldr	r3, [pc, #152]	; (8003978 <_vfiprintf_r+0x228>)
 80038e0:	bb1b      	cbnz	r3, 800392a <_vfiprintf_r+0x1da>
 80038e2:	9b03      	ldr	r3, [sp, #12]
 80038e4:	3307      	adds	r3, #7
 80038e6:	f023 0307 	bic.w	r3, r3, #7
 80038ea:	3308      	adds	r3, #8
 80038ec:	9303      	str	r3, [sp, #12]
 80038ee:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80038f0:	443b      	add	r3, r7
 80038f2:	9309      	str	r3, [sp, #36]	; 0x24
 80038f4:	e768      	b.n	80037c8 <_vfiprintf_r+0x78>
 80038f6:	fb0c 3202 	mla	r2, ip, r2, r3
 80038fa:	460c      	mov	r4, r1
 80038fc:	2001      	movs	r0, #1
 80038fe:	e7a6      	b.n	800384e <_vfiprintf_r+0xfe>
 8003900:	2300      	movs	r3, #0
 8003902:	3401      	adds	r4, #1
 8003904:	9305      	str	r3, [sp, #20]
 8003906:	4619      	mov	r1, r3
 8003908:	f04f 0c0a 	mov.w	ip, #10
 800390c:	4620      	mov	r0, r4
 800390e:	f810 2b01 	ldrb.w	r2, [r0], #1
 8003912:	3a30      	subs	r2, #48	; 0x30
 8003914:	2a09      	cmp	r2, #9
 8003916:	d903      	bls.n	8003920 <_vfiprintf_r+0x1d0>
 8003918:	2b00      	cmp	r3, #0
 800391a:	d0c6      	beq.n	80038aa <_vfiprintf_r+0x15a>
 800391c:	9105      	str	r1, [sp, #20]
 800391e:	e7c4      	b.n	80038aa <_vfiprintf_r+0x15a>
 8003920:	fb0c 2101 	mla	r1, ip, r1, r2
 8003924:	4604      	mov	r4, r0
 8003926:	2301      	movs	r3, #1
 8003928:	e7f0      	b.n	800390c <_vfiprintf_r+0x1bc>
 800392a:	ab03      	add	r3, sp, #12
 800392c:	9300      	str	r3, [sp, #0]
 800392e:	462a      	mov	r2, r5
 8003930:	4b12      	ldr	r3, [pc, #72]	; (800397c <_vfiprintf_r+0x22c>)
 8003932:	a904      	add	r1, sp, #16
 8003934:	4630      	mov	r0, r6
 8003936:	f7fd fdfd 	bl	8001534 <_printf_float>
 800393a:	4607      	mov	r7, r0
 800393c:	1c78      	adds	r0, r7, #1
 800393e:	d1d6      	bne.n	80038ee <_vfiprintf_r+0x19e>
 8003940:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8003942:	07d9      	lsls	r1, r3, #31
 8003944:	d405      	bmi.n	8003952 <_vfiprintf_r+0x202>
 8003946:	89ab      	ldrh	r3, [r5, #12]
 8003948:	059a      	lsls	r2, r3, #22
 800394a:	d402      	bmi.n	8003952 <_vfiprintf_r+0x202>
 800394c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800394e:	f7fe fbcf 	bl	80020f0 <__retarget_lock_release_recursive>
 8003952:	89ab      	ldrh	r3, [r5, #12]
 8003954:	065b      	lsls	r3, r3, #25
 8003956:	f53f af1d 	bmi.w	8003794 <_vfiprintf_r+0x44>
 800395a:	9809      	ldr	r0, [sp, #36]	; 0x24
 800395c:	e71c      	b.n	8003798 <_vfiprintf_r+0x48>
 800395e:	ab03      	add	r3, sp, #12
 8003960:	9300      	str	r3, [sp, #0]
 8003962:	462a      	mov	r2, r5
 8003964:	4b05      	ldr	r3, [pc, #20]	; (800397c <_vfiprintf_r+0x22c>)
 8003966:	a904      	add	r1, sp, #16
 8003968:	4630      	mov	r0, r6
 800396a:	f7fe f887 	bl	8001a7c <_printf_i>
 800396e:	e7e4      	b.n	800393a <_vfiprintf_r+0x1ea>
 8003970:	08003fa4 	.word	0x08003fa4
 8003974:	08003fae 	.word	0x08003fae
 8003978:	08001535 	.word	0x08001535
 800397c:	0800372b 	.word	0x0800372b
 8003980:	08003faa 	.word	0x08003faa

08003984 <__sflush_r>:
 8003984:	898a      	ldrh	r2, [r1, #12]
 8003986:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800398a:	4605      	mov	r5, r0
 800398c:	0710      	lsls	r0, r2, #28
 800398e:	460c      	mov	r4, r1
 8003990:	d458      	bmi.n	8003a44 <__sflush_r+0xc0>
 8003992:	684b      	ldr	r3, [r1, #4]
 8003994:	2b00      	cmp	r3, #0
 8003996:	dc05      	bgt.n	80039a4 <__sflush_r+0x20>
 8003998:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800399a:	2b00      	cmp	r3, #0
 800399c:	dc02      	bgt.n	80039a4 <__sflush_r+0x20>
 800399e:	2000      	movs	r0, #0
 80039a0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80039a4:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80039a6:	2e00      	cmp	r6, #0
 80039a8:	d0f9      	beq.n	800399e <__sflush_r+0x1a>
 80039aa:	2300      	movs	r3, #0
 80039ac:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80039b0:	682f      	ldr	r7, [r5, #0]
 80039b2:	6a21      	ldr	r1, [r4, #32]
 80039b4:	602b      	str	r3, [r5, #0]
 80039b6:	d032      	beq.n	8003a1e <__sflush_r+0x9a>
 80039b8:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80039ba:	89a3      	ldrh	r3, [r4, #12]
 80039bc:	075a      	lsls	r2, r3, #29
 80039be:	d505      	bpl.n	80039cc <__sflush_r+0x48>
 80039c0:	6863      	ldr	r3, [r4, #4]
 80039c2:	1ac0      	subs	r0, r0, r3
 80039c4:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80039c6:	b10b      	cbz	r3, 80039cc <__sflush_r+0x48>
 80039c8:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80039ca:	1ac0      	subs	r0, r0, r3
 80039cc:	2300      	movs	r3, #0
 80039ce:	4602      	mov	r2, r0
 80039d0:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80039d2:	6a21      	ldr	r1, [r4, #32]
 80039d4:	4628      	mov	r0, r5
 80039d6:	47b0      	blx	r6
 80039d8:	1c43      	adds	r3, r0, #1
 80039da:	89a3      	ldrh	r3, [r4, #12]
 80039dc:	d106      	bne.n	80039ec <__sflush_r+0x68>
 80039de:	6829      	ldr	r1, [r5, #0]
 80039e0:	291d      	cmp	r1, #29
 80039e2:	d82b      	bhi.n	8003a3c <__sflush_r+0xb8>
 80039e4:	4a29      	ldr	r2, [pc, #164]	; (8003a8c <__sflush_r+0x108>)
 80039e6:	410a      	asrs	r2, r1
 80039e8:	07d6      	lsls	r6, r2, #31
 80039ea:	d427      	bmi.n	8003a3c <__sflush_r+0xb8>
 80039ec:	2200      	movs	r2, #0
 80039ee:	6062      	str	r2, [r4, #4]
 80039f0:	04d9      	lsls	r1, r3, #19
 80039f2:	6922      	ldr	r2, [r4, #16]
 80039f4:	6022      	str	r2, [r4, #0]
 80039f6:	d504      	bpl.n	8003a02 <__sflush_r+0x7e>
 80039f8:	1c42      	adds	r2, r0, #1
 80039fa:	d101      	bne.n	8003a00 <__sflush_r+0x7c>
 80039fc:	682b      	ldr	r3, [r5, #0]
 80039fe:	b903      	cbnz	r3, 8003a02 <__sflush_r+0x7e>
 8003a00:	6560      	str	r0, [r4, #84]	; 0x54
 8003a02:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8003a04:	602f      	str	r7, [r5, #0]
 8003a06:	2900      	cmp	r1, #0
 8003a08:	d0c9      	beq.n	800399e <__sflush_r+0x1a>
 8003a0a:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8003a0e:	4299      	cmp	r1, r3
 8003a10:	d002      	beq.n	8003a18 <__sflush_r+0x94>
 8003a12:	4628      	mov	r0, r5
 8003a14:	f7ff f9f6 	bl	8002e04 <_free_r>
 8003a18:	2000      	movs	r0, #0
 8003a1a:	6360      	str	r0, [r4, #52]	; 0x34
 8003a1c:	e7c0      	b.n	80039a0 <__sflush_r+0x1c>
 8003a1e:	2301      	movs	r3, #1
 8003a20:	4628      	mov	r0, r5
 8003a22:	47b0      	blx	r6
 8003a24:	1c41      	adds	r1, r0, #1
 8003a26:	d1c8      	bne.n	80039ba <__sflush_r+0x36>
 8003a28:	682b      	ldr	r3, [r5, #0]
 8003a2a:	2b00      	cmp	r3, #0
 8003a2c:	d0c5      	beq.n	80039ba <__sflush_r+0x36>
 8003a2e:	2b1d      	cmp	r3, #29
 8003a30:	d001      	beq.n	8003a36 <__sflush_r+0xb2>
 8003a32:	2b16      	cmp	r3, #22
 8003a34:	d101      	bne.n	8003a3a <__sflush_r+0xb6>
 8003a36:	602f      	str	r7, [r5, #0]
 8003a38:	e7b1      	b.n	800399e <__sflush_r+0x1a>
 8003a3a:	89a3      	ldrh	r3, [r4, #12]
 8003a3c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003a40:	81a3      	strh	r3, [r4, #12]
 8003a42:	e7ad      	b.n	80039a0 <__sflush_r+0x1c>
 8003a44:	690f      	ldr	r7, [r1, #16]
 8003a46:	2f00      	cmp	r7, #0
 8003a48:	d0a9      	beq.n	800399e <__sflush_r+0x1a>
 8003a4a:	0793      	lsls	r3, r2, #30
 8003a4c:	680e      	ldr	r6, [r1, #0]
 8003a4e:	bf08      	it	eq
 8003a50:	694b      	ldreq	r3, [r1, #20]
 8003a52:	600f      	str	r7, [r1, #0]
 8003a54:	bf18      	it	ne
 8003a56:	2300      	movne	r3, #0
 8003a58:	eba6 0807 	sub.w	r8, r6, r7
 8003a5c:	608b      	str	r3, [r1, #8]
 8003a5e:	f1b8 0f00 	cmp.w	r8, #0
 8003a62:	dd9c      	ble.n	800399e <__sflush_r+0x1a>
 8003a64:	6a21      	ldr	r1, [r4, #32]
 8003a66:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8003a68:	4643      	mov	r3, r8
 8003a6a:	463a      	mov	r2, r7
 8003a6c:	4628      	mov	r0, r5
 8003a6e:	47b0      	blx	r6
 8003a70:	2800      	cmp	r0, #0
 8003a72:	dc06      	bgt.n	8003a82 <__sflush_r+0xfe>
 8003a74:	89a3      	ldrh	r3, [r4, #12]
 8003a76:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003a7a:	81a3      	strh	r3, [r4, #12]
 8003a7c:	f04f 30ff 	mov.w	r0, #4294967295
 8003a80:	e78e      	b.n	80039a0 <__sflush_r+0x1c>
 8003a82:	4407      	add	r7, r0
 8003a84:	eba8 0800 	sub.w	r8, r8, r0
 8003a88:	e7e9      	b.n	8003a5e <__sflush_r+0xda>
 8003a8a:	bf00      	nop
 8003a8c:	dfbffffe 	.word	0xdfbffffe

08003a90 <_fflush_r>:
 8003a90:	b538      	push	{r3, r4, r5, lr}
 8003a92:	690b      	ldr	r3, [r1, #16]
 8003a94:	4605      	mov	r5, r0
 8003a96:	460c      	mov	r4, r1
 8003a98:	b913      	cbnz	r3, 8003aa0 <_fflush_r+0x10>
 8003a9a:	2500      	movs	r5, #0
 8003a9c:	4628      	mov	r0, r5
 8003a9e:	bd38      	pop	{r3, r4, r5, pc}
 8003aa0:	b118      	cbz	r0, 8003aaa <_fflush_r+0x1a>
 8003aa2:	6a03      	ldr	r3, [r0, #32]
 8003aa4:	b90b      	cbnz	r3, 8003aaa <_fflush_r+0x1a>
 8003aa6:	f7fe f997 	bl	8001dd8 <__sinit>
 8003aaa:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003aae:	2b00      	cmp	r3, #0
 8003ab0:	d0f3      	beq.n	8003a9a <_fflush_r+0xa>
 8003ab2:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8003ab4:	07d0      	lsls	r0, r2, #31
 8003ab6:	d404      	bmi.n	8003ac2 <_fflush_r+0x32>
 8003ab8:	0599      	lsls	r1, r3, #22
 8003aba:	d402      	bmi.n	8003ac2 <_fflush_r+0x32>
 8003abc:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8003abe:	f7fe fb16 	bl	80020ee <__retarget_lock_acquire_recursive>
 8003ac2:	4628      	mov	r0, r5
 8003ac4:	4621      	mov	r1, r4
 8003ac6:	f7ff ff5d 	bl	8003984 <__sflush_r>
 8003aca:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8003acc:	07da      	lsls	r2, r3, #31
 8003ace:	4605      	mov	r5, r0
 8003ad0:	d4e4      	bmi.n	8003a9c <_fflush_r+0xc>
 8003ad2:	89a3      	ldrh	r3, [r4, #12]
 8003ad4:	059b      	lsls	r3, r3, #22
 8003ad6:	d4e1      	bmi.n	8003a9c <_fflush_r+0xc>
 8003ad8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8003ada:	f7fe fb09 	bl	80020f0 <__retarget_lock_release_recursive>
 8003ade:	e7dd      	b.n	8003a9c <_fflush_r+0xc>

08003ae0 <__swhatbuf_r>:
 8003ae0:	b570      	push	{r4, r5, r6, lr}
 8003ae2:	460c      	mov	r4, r1
 8003ae4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003ae8:	2900      	cmp	r1, #0
 8003aea:	b096      	sub	sp, #88	; 0x58
 8003aec:	4615      	mov	r5, r2
 8003aee:	461e      	mov	r6, r3
 8003af0:	da0d      	bge.n	8003b0e <__swhatbuf_r+0x2e>
 8003af2:	89a3      	ldrh	r3, [r4, #12]
 8003af4:	f013 0f80 	tst.w	r3, #128	; 0x80
 8003af8:	f04f 0100 	mov.w	r1, #0
 8003afc:	bf0c      	ite	eq
 8003afe:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 8003b02:	2340      	movne	r3, #64	; 0x40
 8003b04:	2000      	movs	r0, #0
 8003b06:	6031      	str	r1, [r6, #0]
 8003b08:	602b      	str	r3, [r5, #0]
 8003b0a:	b016      	add	sp, #88	; 0x58
 8003b0c:	bd70      	pop	{r4, r5, r6, pc}
 8003b0e:	466a      	mov	r2, sp
 8003b10:	f000 f848 	bl	8003ba4 <_fstat_r>
 8003b14:	2800      	cmp	r0, #0
 8003b16:	dbec      	blt.n	8003af2 <__swhatbuf_r+0x12>
 8003b18:	9901      	ldr	r1, [sp, #4]
 8003b1a:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 8003b1e:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 8003b22:	4259      	negs	r1, r3
 8003b24:	4159      	adcs	r1, r3
 8003b26:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8003b2a:	e7eb      	b.n	8003b04 <__swhatbuf_r+0x24>

08003b2c <__smakebuf_r>:
 8003b2c:	898b      	ldrh	r3, [r1, #12]
 8003b2e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8003b30:	079d      	lsls	r5, r3, #30
 8003b32:	4606      	mov	r6, r0
 8003b34:	460c      	mov	r4, r1
 8003b36:	d507      	bpl.n	8003b48 <__smakebuf_r+0x1c>
 8003b38:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8003b3c:	6023      	str	r3, [r4, #0]
 8003b3e:	6123      	str	r3, [r4, #16]
 8003b40:	2301      	movs	r3, #1
 8003b42:	6163      	str	r3, [r4, #20]
 8003b44:	b002      	add	sp, #8
 8003b46:	bd70      	pop	{r4, r5, r6, pc}
 8003b48:	ab01      	add	r3, sp, #4
 8003b4a:	466a      	mov	r2, sp
 8003b4c:	f7ff ffc8 	bl	8003ae0 <__swhatbuf_r>
 8003b50:	9900      	ldr	r1, [sp, #0]
 8003b52:	4605      	mov	r5, r0
 8003b54:	4630      	mov	r0, r6
 8003b56:	f7ff f9c9 	bl	8002eec <_malloc_r>
 8003b5a:	b948      	cbnz	r0, 8003b70 <__smakebuf_r+0x44>
 8003b5c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003b60:	059a      	lsls	r2, r3, #22
 8003b62:	d4ef      	bmi.n	8003b44 <__smakebuf_r+0x18>
 8003b64:	f023 0303 	bic.w	r3, r3, #3
 8003b68:	f043 0302 	orr.w	r3, r3, #2
 8003b6c:	81a3      	strh	r3, [r4, #12]
 8003b6e:	e7e3      	b.n	8003b38 <__smakebuf_r+0xc>
 8003b70:	89a3      	ldrh	r3, [r4, #12]
 8003b72:	6020      	str	r0, [r4, #0]
 8003b74:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8003b78:	81a3      	strh	r3, [r4, #12]
 8003b7a:	9b00      	ldr	r3, [sp, #0]
 8003b7c:	6163      	str	r3, [r4, #20]
 8003b7e:	9b01      	ldr	r3, [sp, #4]
 8003b80:	6120      	str	r0, [r4, #16]
 8003b82:	b15b      	cbz	r3, 8003b9c <__smakebuf_r+0x70>
 8003b84:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8003b88:	4630      	mov	r0, r6
 8003b8a:	f000 f81d 	bl	8003bc8 <_isatty_r>
 8003b8e:	b128      	cbz	r0, 8003b9c <__smakebuf_r+0x70>
 8003b90:	89a3      	ldrh	r3, [r4, #12]
 8003b92:	f023 0303 	bic.w	r3, r3, #3
 8003b96:	f043 0301 	orr.w	r3, r3, #1
 8003b9a:	81a3      	strh	r3, [r4, #12]
 8003b9c:	89a3      	ldrh	r3, [r4, #12]
 8003b9e:	431d      	orrs	r5, r3
 8003ba0:	81a5      	strh	r5, [r4, #12]
 8003ba2:	e7cf      	b.n	8003b44 <__smakebuf_r+0x18>

08003ba4 <_fstat_r>:
 8003ba4:	b538      	push	{r3, r4, r5, lr}
 8003ba6:	4d07      	ldr	r5, [pc, #28]	; (8003bc4 <_fstat_r+0x20>)
 8003ba8:	2300      	movs	r3, #0
 8003baa:	4604      	mov	r4, r0
 8003bac:	4608      	mov	r0, r1
 8003bae:	4611      	mov	r1, r2
 8003bb0:	602b      	str	r3, [r5, #0]
 8003bb2:	f7fd fb84 	bl	80012be <_fstat>
 8003bb6:	1c43      	adds	r3, r0, #1
 8003bb8:	d102      	bne.n	8003bc0 <_fstat_r+0x1c>
 8003bba:	682b      	ldr	r3, [r5, #0]
 8003bbc:	b103      	cbz	r3, 8003bc0 <_fstat_r+0x1c>
 8003bbe:	6023      	str	r3, [r4, #0]
 8003bc0:	bd38      	pop	{r3, r4, r5, pc}
 8003bc2:	bf00      	nop
 8003bc4:	20000334 	.word	0x20000334

08003bc8 <_isatty_r>:
 8003bc8:	b538      	push	{r3, r4, r5, lr}
 8003bca:	4d06      	ldr	r5, [pc, #24]	; (8003be4 <_isatty_r+0x1c>)
 8003bcc:	2300      	movs	r3, #0
 8003bce:	4604      	mov	r4, r0
 8003bd0:	4608      	mov	r0, r1
 8003bd2:	602b      	str	r3, [r5, #0]
 8003bd4:	f7fd fb83 	bl	80012de <_isatty>
 8003bd8:	1c43      	adds	r3, r0, #1
 8003bda:	d102      	bne.n	8003be2 <_isatty_r+0x1a>
 8003bdc:	682b      	ldr	r3, [r5, #0]
 8003bde:	b103      	cbz	r3, 8003be2 <_isatty_r+0x1a>
 8003be0:	6023      	str	r3, [r4, #0]
 8003be2:	bd38      	pop	{r3, r4, r5, pc}
 8003be4:	20000334 	.word	0x20000334

08003be8 <_sbrk_r>:
 8003be8:	b538      	push	{r3, r4, r5, lr}
 8003bea:	4d06      	ldr	r5, [pc, #24]	; (8003c04 <_sbrk_r+0x1c>)
 8003bec:	2300      	movs	r3, #0
 8003bee:	4604      	mov	r4, r0
 8003bf0:	4608      	mov	r0, r1
 8003bf2:	602b      	str	r3, [r5, #0]
 8003bf4:	f7fd fb8c 	bl	8001310 <_sbrk>
 8003bf8:	1c43      	adds	r3, r0, #1
 8003bfa:	d102      	bne.n	8003c02 <_sbrk_r+0x1a>
 8003bfc:	682b      	ldr	r3, [r5, #0]
 8003bfe:	b103      	cbz	r3, 8003c02 <_sbrk_r+0x1a>
 8003c00:	6023      	str	r3, [r4, #0]
 8003c02:	bd38      	pop	{r3, r4, r5, pc}
 8003c04:	20000334 	.word	0x20000334

08003c08 <__assert_func>:
 8003c08:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8003c0a:	4614      	mov	r4, r2
 8003c0c:	461a      	mov	r2, r3
 8003c0e:	4b09      	ldr	r3, [pc, #36]	; (8003c34 <__assert_func+0x2c>)
 8003c10:	681b      	ldr	r3, [r3, #0]
 8003c12:	4605      	mov	r5, r0
 8003c14:	68d8      	ldr	r0, [r3, #12]
 8003c16:	b14c      	cbz	r4, 8003c2c <__assert_func+0x24>
 8003c18:	4b07      	ldr	r3, [pc, #28]	; (8003c38 <__assert_func+0x30>)
 8003c1a:	9100      	str	r1, [sp, #0]
 8003c1c:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8003c20:	4906      	ldr	r1, [pc, #24]	; (8003c3c <__assert_func+0x34>)
 8003c22:	462b      	mov	r3, r5
 8003c24:	f000 f844 	bl	8003cb0 <fiprintf>
 8003c28:	f000 f854 	bl	8003cd4 <abort>
 8003c2c:	4b04      	ldr	r3, [pc, #16]	; (8003c40 <__assert_func+0x38>)
 8003c2e:	461c      	mov	r4, r3
 8003c30:	e7f3      	b.n	8003c1a <__assert_func+0x12>
 8003c32:	bf00      	nop
 8003c34:	20000058 	.word	0x20000058
 8003c38:	08003fbf 	.word	0x08003fbf
 8003c3c:	08003fcc 	.word	0x08003fcc
 8003c40:	08003ffa 	.word	0x08003ffa

08003c44 <_calloc_r>:
 8003c44:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8003c46:	fba1 2402 	umull	r2, r4, r1, r2
 8003c4a:	b94c      	cbnz	r4, 8003c60 <_calloc_r+0x1c>
 8003c4c:	4611      	mov	r1, r2
 8003c4e:	9201      	str	r2, [sp, #4]
 8003c50:	f7ff f94c 	bl	8002eec <_malloc_r>
 8003c54:	9a01      	ldr	r2, [sp, #4]
 8003c56:	4605      	mov	r5, r0
 8003c58:	b930      	cbnz	r0, 8003c68 <_calloc_r+0x24>
 8003c5a:	4628      	mov	r0, r5
 8003c5c:	b003      	add	sp, #12
 8003c5e:	bd30      	pop	{r4, r5, pc}
 8003c60:	220c      	movs	r2, #12
 8003c62:	6002      	str	r2, [r0, #0]
 8003c64:	2500      	movs	r5, #0
 8003c66:	e7f8      	b.n	8003c5a <_calloc_r+0x16>
 8003c68:	4621      	mov	r1, r4
 8003c6a:	f7fe f9c3 	bl	8001ff4 <memset>
 8003c6e:	e7f4      	b.n	8003c5a <_calloc_r+0x16>

08003c70 <__ascii_mbtowc>:
 8003c70:	b082      	sub	sp, #8
 8003c72:	b901      	cbnz	r1, 8003c76 <__ascii_mbtowc+0x6>
 8003c74:	a901      	add	r1, sp, #4
 8003c76:	b142      	cbz	r2, 8003c8a <__ascii_mbtowc+0x1a>
 8003c78:	b14b      	cbz	r3, 8003c8e <__ascii_mbtowc+0x1e>
 8003c7a:	7813      	ldrb	r3, [r2, #0]
 8003c7c:	600b      	str	r3, [r1, #0]
 8003c7e:	7812      	ldrb	r2, [r2, #0]
 8003c80:	1e10      	subs	r0, r2, #0
 8003c82:	bf18      	it	ne
 8003c84:	2001      	movne	r0, #1
 8003c86:	b002      	add	sp, #8
 8003c88:	4770      	bx	lr
 8003c8a:	4610      	mov	r0, r2
 8003c8c:	e7fb      	b.n	8003c86 <__ascii_mbtowc+0x16>
 8003c8e:	f06f 0001 	mvn.w	r0, #1
 8003c92:	e7f8      	b.n	8003c86 <__ascii_mbtowc+0x16>

08003c94 <__ascii_wctomb>:
 8003c94:	b149      	cbz	r1, 8003caa <__ascii_wctomb+0x16>
 8003c96:	2aff      	cmp	r2, #255	; 0xff
 8003c98:	bf85      	ittet	hi
 8003c9a:	238a      	movhi	r3, #138	; 0x8a
 8003c9c:	6003      	strhi	r3, [r0, #0]
 8003c9e:	700a      	strbls	r2, [r1, #0]
 8003ca0:	f04f 30ff 	movhi.w	r0, #4294967295
 8003ca4:	bf98      	it	ls
 8003ca6:	2001      	movls	r0, #1
 8003ca8:	4770      	bx	lr
 8003caa:	4608      	mov	r0, r1
 8003cac:	4770      	bx	lr
	...

08003cb0 <fiprintf>:
 8003cb0:	b40e      	push	{r1, r2, r3}
 8003cb2:	b503      	push	{r0, r1, lr}
 8003cb4:	4601      	mov	r1, r0
 8003cb6:	ab03      	add	r3, sp, #12
 8003cb8:	4805      	ldr	r0, [pc, #20]	; (8003cd0 <fiprintf+0x20>)
 8003cba:	f853 2b04 	ldr.w	r2, [r3], #4
 8003cbe:	6800      	ldr	r0, [r0, #0]
 8003cc0:	9301      	str	r3, [sp, #4]
 8003cc2:	f7ff fd45 	bl	8003750 <_vfiprintf_r>
 8003cc6:	b002      	add	sp, #8
 8003cc8:	f85d eb04 	ldr.w	lr, [sp], #4
 8003ccc:	b003      	add	sp, #12
 8003cce:	4770      	bx	lr
 8003cd0:	20000058 	.word	0x20000058

08003cd4 <abort>:
 8003cd4:	b508      	push	{r3, lr}
 8003cd6:	2006      	movs	r0, #6
 8003cd8:	f000 f82c 	bl	8003d34 <raise>
 8003cdc:	2001      	movs	r0, #1
 8003cde:	f7fd fa9f 	bl	8001220 <_exit>

08003ce2 <_raise_r>:
 8003ce2:	291f      	cmp	r1, #31
 8003ce4:	b538      	push	{r3, r4, r5, lr}
 8003ce6:	4604      	mov	r4, r0
 8003ce8:	460d      	mov	r5, r1
 8003cea:	d904      	bls.n	8003cf6 <_raise_r+0x14>
 8003cec:	2316      	movs	r3, #22
 8003cee:	6003      	str	r3, [r0, #0]
 8003cf0:	f04f 30ff 	mov.w	r0, #4294967295
 8003cf4:	bd38      	pop	{r3, r4, r5, pc}
 8003cf6:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 8003cf8:	b112      	cbz	r2, 8003d00 <_raise_r+0x1e>
 8003cfa:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8003cfe:	b94b      	cbnz	r3, 8003d14 <_raise_r+0x32>
 8003d00:	4620      	mov	r0, r4
 8003d02:	f000 f831 	bl	8003d68 <_getpid_r>
 8003d06:	462a      	mov	r2, r5
 8003d08:	4601      	mov	r1, r0
 8003d0a:	4620      	mov	r0, r4
 8003d0c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003d10:	f000 b818 	b.w	8003d44 <_kill_r>
 8003d14:	2b01      	cmp	r3, #1
 8003d16:	d00a      	beq.n	8003d2e <_raise_r+0x4c>
 8003d18:	1c59      	adds	r1, r3, #1
 8003d1a:	d103      	bne.n	8003d24 <_raise_r+0x42>
 8003d1c:	2316      	movs	r3, #22
 8003d1e:	6003      	str	r3, [r0, #0]
 8003d20:	2001      	movs	r0, #1
 8003d22:	e7e7      	b.n	8003cf4 <_raise_r+0x12>
 8003d24:	2400      	movs	r4, #0
 8003d26:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8003d2a:	4628      	mov	r0, r5
 8003d2c:	4798      	blx	r3
 8003d2e:	2000      	movs	r0, #0
 8003d30:	e7e0      	b.n	8003cf4 <_raise_r+0x12>
	...

08003d34 <raise>:
 8003d34:	4b02      	ldr	r3, [pc, #8]	; (8003d40 <raise+0xc>)
 8003d36:	4601      	mov	r1, r0
 8003d38:	6818      	ldr	r0, [r3, #0]
 8003d3a:	f7ff bfd2 	b.w	8003ce2 <_raise_r>
 8003d3e:	bf00      	nop
 8003d40:	20000058 	.word	0x20000058

08003d44 <_kill_r>:
 8003d44:	b538      	push	{r3, r4, r5, lr}
 8003d46:	4d07      	ldr	r5, [pc, #28]	; (8003d64 <_kill_r+0x20>)
 8003d48:	2300      	movs	r3, #0
 8003d4a:	4604      	mov	r4, r0
 8003d4c:	4608      	mov	r0, r1
 8003d4e:	4611      	mov	r1, r2
 8003d50:	602b      	str	r3, [r5, #0]
 8003d52:	f7fd fa55 	bl	8001200 <_kill>
 8003d56:	1c43      	adds	r3, r0, #1
 8003d58:	d102      	bne.n	8003d60 <_kill_r+0x1c>
 8003d5a:	682b      	ldr	r3, [r5, #0]
 8003d5c:	b103      	cbz	r3, 8003d60 <_kill_r+0x1c>
 8003d5e:	6023      	str	r3, [r4, #0]
 8003d60:	bd38      	pop	{r3, r4, r5, pc}
 8003d62:	bf00      	nop
 8003d64:	20000334 	.word	0x20000334

08003d68 <_getpid_r>:
 8003d68:	f7fd ba42 	b.w	80011f0 <_getpid>

08003d6c <_init>:
 8003d6c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003d6e:	bf00      	nop
 8003d70:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8003d72:	bc08      	pop	{r3}
 8003d74:	469e      	mov	lr, r3
 8003d76:	4770      	bx	lr

08003d78 <_fini>:
 8003d78:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003d7a:	bf00      	nop
 8003d7c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8003d7e:	bc08      	pop	{r3}
 8003d80:	469e      	mov	lr, r3
 8003d82:	4770      	bx	lr
