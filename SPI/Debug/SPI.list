
SPI.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00003c2c  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000003d8  08003dd0  08003dd0  00013dd0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080041a8  080041a8  000201f4  2**0
                  CONTENTS
  4 .ARM          00000000  080041a8  080041a8  000201f4  2**0
                  CONTENTS
  5 .preinit_array 00000000  080041a8  080041a8  000201f4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080041a8  080041a8  000141a8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080041ac  080041ac  000141ac  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001f4  20000000  080041b0  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000017c  200001f4  080043a4  000201f4  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000370  080043a4  00020370  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000201f4  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  00020224  2**0
                  CONTENTS, READONLY
 13 .debug_info   0000321c  00000000  00000000  00020267  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000c09  00000000  00000000  00023483  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000388  00000000  00000000  00024090  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 0000028f  00000000  00000000  00024418  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0000e052  00000000  00000000  000246a7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0000344f  00000000  00000000  000326f9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000593dd  00000000  00000000  00035b48  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00001d10  00000000  00000000  0008ef28  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000004b  00000000  00000000  00090c38  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	200001f4 	.word	0x200001f4
 80001bc:	00000000 	.word	0x00000000
 80001c0:	08003db4 	.word	0x08003db4

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	200001f8 	.word	0x200001f8
 80001dc:	08003db4 	.word	0x08003db4

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <strlen>:
 8000280:	4603      	mov	r3, r0
 8000282:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000286:	2a00      	cmp	r2, #0
 8000288:	d1fb      	bne.n	8000282 <strlen+0x2>
 800028a:	1a18      	subs	r0, r3, r0
 800028c:	3801      	subs	r0, #1
 800028e:	4770      	bx	lr

08000290 <__aeabi_drsub>:
 8000290:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000294:	e002      	b.n	800029c <__adddf3>
 8000296:	bf00      	nop

08000298 <__aeabi_dsub>:
 8000298:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800029c <__adddf3>:
 800029c:	b530      	push	{r4, r5, lr}
 800029e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002a2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002a6:	ea94 0f05 	teq	r4, r5
 80002aa:	bf08      	it	eq
 80002ac:	ea90 0f02 	teqeq	r0, r2
 80002b0:	bf1f      	itttt	ne
 80002b2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002b6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ba:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002be:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002c2:	f000 80e2 	beq.w	800048a <__adddf3+0x1ee>
 80002c6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ca:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002ce:	bfb8      	it	lt
 80002d0:	426d      	neglt	r5, r5
 80002d2:	dd0c      	ble.n	80002ee <__adddf3+0x52>
 80002d4:	442c      	add	r4, r5
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	ea82 0000 	eor.w	r0, r2, r0
 80002e2:	ea83 0101 	eor.w	r1, r3, r1
 80002e6:	ea80 0202 	eor.w	r2, r0, r2
 80002ea:	ea81 0303 	eor.w	r3, r1, r3
 80002ee:	2d36      	cmp	r5, #54	; 0x36
 80002f0:	bf88      	it	hi
 80002f2:	bd30      	pophi	{r4, r5, pc}
 80002f4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80002f8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002fc:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000300:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000304:	d002      	beq.n	800030c <__adddf3+0x70>
 8000306:	4240      	negs	r0, r0
 8000308:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800030c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000310:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000314:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000318:	d002      	beq.n	8000320 <__adddf3+0x84>
 800031a:	4252      	negs	r2, r2
 800031c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000320:	ea94 0f05 	teq	r4, r5
 8000324:	f000 80a7 	beq.w	8000476 <__adddf3+0x1da>
 8000328:	f1a4 0401 	sub.w	r4, r4, #1
 800032c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000330:	db0d      	blt.n	800034e <__adddf3+0xb2>
 8000332:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000336:	fa22 f205 	lsr.w	r2, r2, r5
 800033a:	1880      	adds	r0, r0, r2
 800033c:	f141 0100 	adc.w	r1, r1, #0
 8000340:	fa03 f20e 	lsl.w	r2, r3, lr
 8000344:	1880      	adds	r0, r0, r2
 8000346:	fa43 f305 	asr.w	r3, r3, r5
 800034a:	4159      	adcs	r1, r3
 800034c:	e00e      	b.n	800036c <__adddf3+0xd0>
 800034e:	f1a5 0520 	sub.w	r5, r5, #32
 8000352:	f10e 0e20 	add.w	lr, lr, #32
 8000356:	2a01      	cmp	r2, #1
 8000358:	fa03 fc0e 	lsl.w	ip, r3, lr
 800035c:	bf28      	it	cs
 800035e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000362:	fa43 f305 	asr.w	r3, r3, r5
 8000366:	18c0      	adds	r0, r0, r3
 8000368:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800036c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000370:	d507      	bpl.n	8000382 <__adddf3+0xe6>
 8000372:	f04f 0e00 	mov.w	lr, #0
 8000376:	f1dc 0c00 	rsbs	ip, ip, #0
 800037a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800037e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000382:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000386:	d31b      	bcc.n	80003c0 <__adddf3+0x124>
 8000388:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800038c:	d30c      	bcc.n	80003a8 <__adddf3+0x10c>
 800038e:	0849      	lsrs	r1, r1, #1
 8000390:	ea5f 0030 	movs.w	r0, r0, rrx
 8000394:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000398:	f104 0401 	add.w	r4, r4, #1
 800039c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003a0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003a4:	f080 809a 	bcs.w	80004dc <__adddf3+0x240>
 80003a8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003ac:	bf08      	it	eq
 80003ae:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003b2:	f150 0000 	adcs.w	r0, r0, #0
 80003b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ba:	ea41 0105 	orr.w	r1, r1, r5
 80003be:	bd30      	pop	{r4, r5, pc}
 80003c0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003c4:	4140      	adcs	r0, r0
 80003c6:	eb41 0101 	adc.w	r1, r1, r1
 80003ca:	3c01      	subs	r4, #1
 80003cc:	bf28      	it	cs
 80003ce:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80003d2:	d2e9      	bcs.n	80003a8 <__adddf3+0x10c>
 80003d4:	f091 0f00 	teq	r1, #0
 80003d8:	bf04      	itt	eq
 80003da:	4601      	moveq	r1, r0
 80003dc:	2000      	moveq	r0, #0
 80003de:	fab1 f381 	clz	r3, r1
 80003e2:	bf08      	it	eq
 80003e4:	3320      	addeq	r3, #32
 80003e6:	f1a3 030b 	sub.w	r3, r3, #11
 80003ea:	f1b3 0220 	subs.w	r2, r3, #32
 80003ee:	da0c      	bge.n	800040a <__adddf3+0x16e>
 80003f0:	320c      	adds	r2, #12
 80003f2:	dd08      	ble.n	8000406 <__adddf3+0x16a>
 80003f4:	f102 0c14 	add.w	ip, r2, #20
 80003f8:	f1c2 020c 	rsb	r2, r2, #12
 80003fc:	fa01 f00c 	lsl.w	r0, r1, ip
 8000400:	fa21 f102 	lsr.w	r1, r1, r2
 8000404:	e00c      	b.n	8000420 <__adddf3+0x184>
 8000406:	f102 0214 	add.w	r2, r2, #20
 800040a:	bfd8      	it	le
 800040c:	f1c2 0c20 	rsble	ip, r2, #32
 8000410:	fa01 f102 	lsl.w	r1, r1, r2
 8000414:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000418:	bfdc      	itt	le
 800041a:	ea41 010c 	orrle.w	r1, r1, ip
 800041e:	4090      	lslle	r0, r2
 8000420:	1ae4      	subs	r4, r4, r3
 8000422:	bfa2      	ittt	ge
 8000424:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000428:	4329      	orrge	r1, r5
 800042a:	bd30      	popge	{r4, r5, pc}
 800042c:	ea6f 0404 	mvn.w	r4, r4
 8000430:	3c1f      	subs	r4, #31
 8000432:	da1c      	bge.n	800046e <__adddf3+0x1d2>
 8000434:	340c      	adds	r4, #12
 8000436:	dc0e      	bgt.n	8000456 <__adddf3+0x1ba>
 8000438:	f104 0414 	add.w	r4, r4, #20
 800043c:	f1c4 0220 	rsb	r2, r4, #32
 8000440:	fa20 f004 	lsr.w	r0, r0, r4
 8000444:	fa01 f302 	lsl.w	r3, r1, r2
 8000448:	ea40 0003 	orr.w	r0, r0, r3
 800044c:	fa21 f304 	lsr.w	r3, r1, r4
 8000450:	ea45 0103 	orr.w	r1, r5, r3
 8000454:	bd30      	pop	{r4, r5, pc}
 8000456:	f1c4 040c 	rsb	r4, r4, #12
 800045a:	f1c4 0220 	rsb	r2, r4, #32
 800045e:	fa20 f002 	lsr.w	r0, r0, r2
 8000462:	fa01 f304 	lsl.w	r3, r1, r4
 8000466:	ea40 0003 	orr.w	r0, r0, r3
 800046a:	4629      	mov	r1, r5
 800046c:	bd30      	pop	{r4, r5, pc}
 800046e:	fa21 f004 	lsr.w	r0, r1, r4
 8000472:	4629      	mov	r1, r5
 8000474:	bd30      	pop	{r4, r5, pc}
 8000476:	f094 0f00 	teq	r4, #0
 800047a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800047e:	bf06      	itte	eq
 8000480:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000484:	3401      	addeq	r4, #1
 8000486:	3d01      	subne	r5, #1
 8000488:	e74e      	b.n	8000328 <__adddf3+0x8c>
 800048a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800048e:	bf18      	it	ne
 8000490:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000494:	d029      	beq.n	80004ea <__adddf3+0x24e>
 8000496:	ea94 0f05 	teq	r4, r5
 800049a:	bf08      	it	eq
 800049c:	ea90 0f02 	teqeq	r0, r2
 80004a0:	d005      	beq.n	80004ae <__adddf3+0x212>
 80004a2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004a6:	bf04      	itt	eq
 80004a8:	4619      	moveq	r1, r3
 80004aa:	4610      	moveq	r0, r2
 80004ac:	bd30      	pop	{r4, r5, pc}
 80004ae:	ea91 0f03 	teq	r1, r3
 80004b2:	bf1e      	ittt	ne
 80004b4:	2100      	movne	r1, #0
 80004b6:	2000      	movne	r0, #0
 80004b8:	bd30      	popne	{r4, r5, pc}
 80004ba:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004be:	d105      	bne.n	80004cc <__adddf3+0x230>
 80004c0:	0040      	lsls	r0, r0, #1
 80004c2:	4149      	adcs	r1, r1
 80004c4:	bf28      	it	cs
 80004c6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004ca:	bd30      	pop	{r4, r5, pc}
 80004cc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80004d0:	bf3c      	itt	cc
 80004d2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80004d6:	bd30      	popcc	{r4, r5, pc}
 80004d8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004dc:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80004e0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80004e4:	f04f 0000 	mov.w	r0, #0
 80004e8:	bd30      	pop	{r4, r5, pc}
 80004ea:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004ee:	bf1a      	itte	ne
 80004f0:	4619      	movne	r1, r3
 80004f2:	4610      	movne	r0, r2
 80004f4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004f8:	bf1c      	itt	ne
 80004fa:	460b      	movne	r3, r1
 80004fc:	4602      	movne	r2, r0
 80004fe:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000502:	bf06      	itte	eq
 8000504:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000508:	ea91 0f03 	teqeq	r1, r3
 800050c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000510:	bd30      	pop	{r4, r5, pc}
 8000512:	bf00      	nop

08000514 <__aeabi_ui2d>:
 8000514:	f090 0f00 	teq	r0, #0
 8000518:	bf04      	itt	eq
 800051a:	2100      	moveq	r1, #0
 800051c:	4770      	bxeq	lr
 800051e:	b530      	push	{r4, r5, lr}
 8000520:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000524:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000528:	f04f 0500 	mov.w	r5, #0
 800052c:	f04f 0100 	mov.w	r1, #0
 8000530:	e750      	b.n	80003d4 <__adddf3+0x138>
 8000532:	bf00      	nop

08000534 <__aeabi_i2d>:
 8000534:	f090 0f00 	teq	r0, #0
 8000538:	bf04      	itt	eq
 800053a:	2100      	moveq	r1, #0
 800053c:	4770      	bxeq	lr
 800053e:	b530      	push	{r4, r5, lr}
 8000540:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000544:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000548:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800054c:	bf48      	it	mi
 800054e:	4240      	negmi	r0, r0
 8000550:	f04f 0100 	mov.w	r1, #0
 8000554:	e73e      	b.n	80003d4 <__adddf3+0x138>
 8000556:	bf00      	nop

08000558 <__aeabi_f2d>:
 8000558:	0042      	lsls	r2, r0, #1
 800055a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800055e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000562:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000566:	bf1f      	itttt	ne
 8000568:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800056c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000570:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000574:	4770      	bxne	lr
 8000576:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800057a:	bf08      	it	eq
 800057c:	4770      	bxeq	lr
 800057e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000582:	bf04      	itt	eq
 8000584:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000588:	4770      	bxeq	lr
 800058a:	b530      	push	{r4, r5, lr}
 800058c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000590:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000594:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000598:	e71c      	b.n	80003d4 <__adddf3+0x138>
 800059a:	bf00      	nop

0800059c <__aeabi_ul2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f04f 0500 	mov.w	r5, #0
 80005aa:	e00a      	b.n	80005c2 <__aeabi_l2d+0x16>

080005ac <__aeabi_l2d>:
 80005ac:	ea50 0201 	orrs.w	r2, r0, r1
 80005b0:	bf08      	it	eq
 80005b2:	4770      	bxeq	lr
 80005b4:	b530      	push	{r4, r5, lr}
 80005b6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005ba:	d502      	bpl.n	80005c2 <__aeabi_l2d+0x16>
 80005bc:	4240      	negs	r0, r0
 80005be:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005c2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005c6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005ca:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005ce:	f43f aed8 	beq.w	8000382 <__adddf3+0xe6>
 80005d2:	f04f 0203 	mov.w	r2, #3
 80005d6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005da:	bf18      	it	ne
 80005dc:	3203      	addne	r2, #3
 80005de:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005e2:	bf18      	it	ne
 80005e4:	3203      	addne	r2, #3
 80005e6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005ea:	f1c2 0320 	rsb	r3, r2, #32
 80005ee:	fa00 fc03 	lsl.w	ip, r0, r3
 80005f2:	fa20 f002 	lsr.w	r0, r0, r2
 80005f6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005fa:	ea40 000e 	orr.w	r0, r0, lr
 80005fe:	fa21 f102 	lsr.w	r1, r1, r2
 8000602:	4414      	add	r4, r2
 8000604:	e6bd      	b.n	8000382 <__adddf3+0xe6>
 8000606:	bf00      	nop

08000608 <__aeabi_dmul>:
 8000608:	b570      	push	{r4, r5, r6, lr}
 800060a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800060e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000612:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000616:	bf1d      	ittte	ne
 8000618:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800061c:	ea94 0f0c 	teqne	r4, ip
 8000620:	ea95 0f0c 	teqne	r5, ip
 8000624:	f000 f8de 	bleq	80007e4 <__aeabi_dmul+0x1dc>
 8000628:	442c      	add	r4, r5
 800062a:	ea81 0603 	eor.w	r6, r1, r3
 800062e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000632:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000636:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800063a:	bf18      	it	ne
 800063c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000640:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000644:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000648:	d038      	beq.n	80006bc <__aeabi_dmul+0xb4>
 800064a:	fba0 ce02 	umull	ip, lr, r0, r2
 800064e:	f04f 0500 	mov.w	r5, #0
 8000652:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000656:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800065a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800065e:	f04f 0600 	mov.w	r6, #0
 8000662:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000666:	f09c 0f00 	teq	ip, #0
 800066a:	bf18      	it	ne
 800066c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000670:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000674:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000678:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800067c:	d204      	bcs.n	8000688 <__aeabi_dmul+0x80>
 800067e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000682:	416d      	adcs	r5, r5
 8000684:	eb46 0606 	adc.w	r6, r6, r6
 8000688:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800068c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000690:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000694:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000698:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800069c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006a0:	bf88      	it	hi
 80006a2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006a6:	d81e      	bhi.n	80006e6 <__aeabi_dmul+0xde>
 80006a8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006ac:	bf08      	it	eq
 80006ae:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006b2:	f150 0000 	adcs.w	r0, r0, #0
 80006b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ba:	bd70      	pop	{r4, r5, r6, pc}
 80006bc:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006c0:	ea46 0101 	orr.w	r1, r6, r1
 80006c4:	ea40 0002 	orr.w	r0, r0, r2
 80006c8:	ea81 0103 	eor.w	r1, r1, r3
 80006cc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006d0:	bfc2      	ittt	gt
 80006d2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006d6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006da:	bd70      	popgt	{r4, r5, r6, pc}
 80006dc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80006e0:	f04f 0e00 	mov.w	lr, #0
 80006e4:	3c01      	subs	r4, #1
 80006e6:	f300 80ab 	bgt.w	8000840 <__aeabi_dmul+0x238>
 80006ea:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80006ee:	bfde      	ittt	le
 80006f0:	2000      	movle	r0, #0
 80006f2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80006f6:	bd70      	pople	{r4, r5, r6, pc}
 80006f8:	f1c4 0400 	rsb	r4, r4, #0
 80006fc:	3c20      	subs	r4, #32
 80006fe:	da35      	bge.n	800076c <__aeabi_dmul+0x164>
 8000700:	340c      	adds	r4, #12
 8000702:	dc1b      	bgt.n	800073c <__aeabi_dmul+0x134>
 8000704:	f104 0414 	add.w	r4, r4, #20
 8000708:	f1c4 0520 	rsb	r5, r4, #32
 800070c:	fa00 f305 	lsl.w	r3, r0, r5
 8000710:	fa20 f004 	lsr.w	r0, r0, r4
 8000714:	fa01 f205 	lsl.w	r2, r1, r5
 8000718:	ea40 0002 	orr.w	r0, r0, r2
 800071c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000720:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000724:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000728:	fa21 f604 	lsr.w	r6, r1, r4
 800072c:	eb42 0106 	adc.w	r1, r2, r6
 8000730:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000734:	bf08      	it	eq
 8000736:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800073a:	bd70      	pop	{r4, r5, r6, pc}
 800073c:	f1c4 040c 	rsb	r4, r4, #12
 8000740:	f1c4 0520 	rsb	r5, r4, #32
 8000744:	fa00 f304 	lsl.w	r3, r0, r4
 8000748:	fa20 f005 	lsr.w	r0, r0, r5
 800074c:	fa01 f204 	lsl.w	r2, r1, r4
 8000750:	ea40 0002 	orr.w	r0, r0, r2
 8000754:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000758:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800075c:	f141 0100 	adc.w	r1, r1, #0
 8000760:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000764:	bf08      	it	eq
 8000766:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f1c4 0520 	rsb	r5, r4, #32
 8000770:	fa00 f205 	lsl.w	r2, r0, r5
 8000774:	ea4e 0e02 	orr.w	lr, lr, r2
 8000778:	fa20 f304 	lsr.w	r3, r0, r4
 800077c:	fa01 f205 	lsl.w	r2, r1, r5
 8000780:	ea43 0302 	orr.w	r3, r3, r2
 8000784:	fa21 f004 	lsr.w	r0, r1, r4
 8000788:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800078c:	fa21 f204 	lsr.w	r2, r1, r4
 8000790:	ea20 0002 	bic.w	r0, r0, r2
 8000794:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000798:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800079c:	bf08      	it	eq
 800079e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007a2:	bd70      	pop	{r4, r5, r6, pc}
 80007a4:	f094 0f00 	teq	r4, #0
 80007a8:	d10f      	bne.n	80007ca <__aeabi_dmul+0x1c2>
 80007aa:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007ae:	0040      	lsls	r0, r0, #1
 80007b0:	eb41 0101 	adc.w	r1, r1, r1
 80007b4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007b8:	bf08      	it	eq
 80007ba:	3c01      	subeq	r4, #1
 80007bc:	d0f7      	beq.n	80007ae <__aeabi_dmul+0x1a6>
 80007be:	ea41 0106 	orr.w	r1, r1, r6
 80007c2:	f095 0f00 	teq	r5, #0
 80007c6:	bf18      	it	ne
 80007c8:	4770      	bxne	lr
 80007ca:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007ce:	0052      	lsls	r2, r2, #1
 80007d0:	eb43 0303 	adc.w	r3, r3, r3
 80007d4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80007d8:	bf08      	it	eq
 80007da:	3d01      	subeq	r5, #1
 80007dc:	d0f7      	beq.n	80007ce <__aeabi_dmul+0x1c6>
 80007de:	ea43 0306 	orr.w	r3, r3, r6
 80007e2:	4770      	bx	lr
 80007e4:	ea94 0f0c 	teq	r4, ip
 80007e8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007ec:	bf18      	it	ne
 80007ee:	ea95 0f0c 	teqne	r5, ip
 80007f2:	d00c      	beq.n	800080e <__aeabi_dmul+0x206>
 80007f4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007f8:	bf18      	it	ne
 80007fa:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007fe:	d1d1      	bne.n	80007a4 <__aeabi_dmul+0x19c>
 8000800:	ea81 0103 	eor.w	r1, r1, r3
 8000804:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000808:	f04f 0000 	mov.w	r0, #0
 800080c:	bd70      	pop	{r4, r5, r6, pc}
 800080e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000812:	bf06      	itte	eq
 8000814:	4610      	moveq	r0, r2
 8000816:	4619      	moveq	r1, r3
 8000818:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800081c:	d019      	beq.n	8000852 <__aeabi_dmul+0x24a>
 800081e:	ea94 0f0c 	teq	r4, ip
 8000822:	d102      	bne.n	800082a <__aeabi_dmul+0x222>
 8000824:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000828:	d113      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800082a:	ea95 0f0c 	teq	r5, ip
 800082e:	d105      	bne.n	800083c <__aeabi_dmul+0x234>
 8000830:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000834:	bf1c      	itt	ne
 8000836:	4610      	movne	r0, r2
 8000838:	4619      	movne	r1, r3
 800083a:	d10a      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800083c:	ea81 0103 	eor.w	r1, r1, r3
 8000840:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000844:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000848:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800084c:	f04f 0000 	mov.w	r0, #0
 8000850:	bd70      	pop	{r4, r5, r6, pc}
 8000852:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000856:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800085a:	bd70      	pop	{r4, r5, r6, pc}

0800085c <__aeabi_ddiv>:
 800085c:	b570      	push	{r4, r5, r6, lr}
 800085e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000862:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000866:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800086a:	bf1d      	ittte	ne
 800086c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000870:	ea94 0f0c 	teqne	r4, ip
 8000874:	ea95 0f0c 	teqne	r5, ip
 8000878:	f000 f8a7 	bleq	80009ca <__aeabi_ddiv+0x16e>
 800087c:	eba4 0405 	sub.w	r4, r4, r5
 8000880:	ea81 0e03 	eor.w	lr, r1, r3
 8000884:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000888:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800088c:	f000 8088 	beq.w	80009a0 <__aeabi_ddiv+0x144>
 8000890:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000894:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000898:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800089c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008a0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008a4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008a8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008ac:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008b0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008b4:	429d      	cmp	r5, r3
 80008b6:	bf08      	it	eq
 80008b8:	4296      	cmpeq	r6, r2
 80008ba:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008be:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008c2:	d202      	bcs.n	80008ca <__aeabi_ddiv+0x6e>
 80008c4:	085b      	lsrs	r3, r3, #1
 80008c6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ca:	1ab6      	subs	r6, r6, r2
 80008cc:	eb65 0503 	sbc.w	r5, r5, r3
 80008d0:	085b      	lsrs	r3, r3, #1
 80008d2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008d6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80008da:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80008de:	ebb6 0e02 	subs.w	lr, r6, r2
 80008e2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008e6:	bf22      	ittt	cs
 80008e8:	1ab6      	subcs	r6, r6, r2
 80008ea:	4675      	movcs	r5, lr
 80008ec:	ea40 000c 	orrcs.w	r0, r0, ip
 80008f0:	085b      	lsrs	r3, r3, #1
 80008f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008f6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008fa:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008fe:	bf22      	ittt	cs
 8000900:	1ab6      	subcs	r6, r6, r2
 8000902:	4675      	movcs	r5, lr
 8000904:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000908:	085b      	lsrs	r3, r3, #1
 800090a:	ea4f 0232 	mov.w	r2, r2, rrx
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000920:	085b      	lsrs	r3, r3, #1
 8000922:	ea4f 0232 	mov.w	r2, r2, rrx
 8000926:	ebb6 0e02 	subs.w	lr, r6, r2
 800092a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092e:	bf22      	ittt	cs
 8000930:	1ab6      	subcs	r6, r6, r2
 8000932:	4675      	movcs	r5, lr
 8000934:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000938:	ea55 0e06 	orrs.w	lr, r5, r6
 800093c:	d018      	beq.n	8000970 <__aeabi_ddiv+0x114>
 800093e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000942:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000946:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800094a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800094e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000952:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000956:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800095a:	d1c0      	bne.n	80008de <__aeabi_ddiv+0x82>
 800095c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000960:	d10b      	bne.n	800097a <__aeabi_ddiv+0x11e>
 8000962:	ea41 0100 	orr.w	r1, r1, r0
 8000966:	f04f 0000 	mov.w	r0, #0
 800096a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800096e:	e7b6      	b.n	80008de <__aeabi_ddiv+0x82>
 8000970:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000974:	bf04      	itt	eq
 8000976:	4301      	orreq	r1, r0
 8000978:	2000      	moveq	r0, #0
 800097a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800097e:	bf88      	it	hi
 8000980:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000984:	f63f aeaf 	bhi.w	80006e6 <__aeabi_dmul+0xde>
 8000988:	ebb5 0c03 	subs.w	ip, r5, r3
 800098c:	bf04      	itt	eq
 800098e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000992:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000996:	f150 0000 	adcs.w	r0, r0, #0
 800099a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800099e:	bd70      	pop	{r4, r5, r6, pc}
 80009a0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009a4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009a8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009ac:	bfc2      	ittt	gt
 80009ae:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009b2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009b6:	bd70      	popgt	{r4, r5, r6, pc}
 80009b8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009bc:	f04f 0e00 	mov.w	lr, #0
 80009c0:	3c01      	subs	r4, #1
 80009c2:	e690      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009c4:	ea45 0e06 	orr.w	lr, r5, r6
 80009c8:	e68d      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009ca:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009ce:	ea94 0f0c 	teq	r4, ip
 80009d2:	bf08      	it	eq
 80009d4:	ea95 0f0c 	teqeq	r5, ip
 80009d8:	f43f af3b 	beq.w	8000852 <__aeabi_dmul+0x24a>
 80009dc:	ea94 0f0c 	teq	r4, ip
 80009e0:	d10a      	bne.n	80009f8 <__aeabi_ddiv+0x19c>
 80009e2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009e6:	f47f af34 	bne.w	8000852 <__aeabi_dmul+0x24a>
 80009ea:	ea95 0f0c 	teq	r5, ip
 80009ee:	f47f af25 	bne.w	800083c <__aeabi_dmul+0x234>
 80009f2:	4610      	mov	r0, r2
 80009f4:	4619      	mov	r1, r3
 80009f6:	e72c      	b.n	8000852 <__aeabi_dmul+0x24a>
 80009f8:	ea95 0f0c 	teq	r5, ip
 80009fc:	d106      	bne.n	8000a0c <__aeabi_ddiv+0x1b0>
 80009fe:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a02:	f43f aefd 	beq.w	8000800 <__aeabi_dmul+0x1f8>
 8000a06:	4610      	mov	r0, r2
 8000a08:	4619      	mov	r1, r3
 8000a0a:	e722      	b.n	8000852 <__aeabi_dmul+0x24a>
 8000a0c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a10:	bf18      	it	ne
 8000a12:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a16:	f47f aec5 	bne.w	80007a4 <__aeabi_dmul+0x19c>
 8000a1a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a1e:	f47f af0d 	bne.w	800083c <__aeabi_dmul+0x234>
 8000a22:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a26:	f47f aeeb 	bne.w	8000800 <__aeabi_dmul+0x1f8>
 8000a2a:	e712      	b.n	8000852 <__aeabi_dmul+0x24a>

08000a2c <__gedf2>:
 8000a2c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a30:	e006      	b.n	8000a40 <__cmpdf2+0x4>
 8000a32:	bf00      	nop

08000a34 <__ledf2>:
 8000a34:	f04f 0c01 	mov.w	ip, #1
 8000a38:	e002      	b.n	8000a40 <__cmpdf2+0x4>
 8000a3a:	bf00      	nop

08000a3c <__cmpdf2>:
 8000a3c:	f04f 0c01 	mov.w	ip, #1
 8000a40:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a44:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a48:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a50:	bf18      	it	ne
 8000a52:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a56:	d01b      	beq.n	8000a90 <__cmpdf2+0x54>
 8000a58:	b001      	add	sp, #4
 8000a5a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a5e:	bf0c      	ite	eq
 8000a60:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a64:	ea91 0f03 	teqne	r1, r3
 8000a68:	bf02      	ittt	eq
 8000a6a:	ea90 0f02 	teqeq	r0, r2
 8000a6e:	2000      	moveq	r0, #0
 8000a70:	4770      	bxeq	lr
 8000a72:	f110 0f00 	cmn.w	r0, #0
 8000a76:	ea91 0f03 	teq	r1, r3
 8000a7a:	bf58      	it	pl
 8000a7c:	4299      	cmppl	r1, r3
 8000a7e:	bf08      	it	eq
 8000a80:	4290      	cmpeq	r0, r2
 8000a82:	bf2c      	ite	cs
 8000a84:	17d8      	asrcs	r0, r3, #31
 8000a86:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a8a:	f040 0001 	orr.w	r0, r0, #1
 8000a8e:	4770      	bx	lr
 8000a90:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a98:	d102      	bne.n	8000aa0 <__cmpdf2+0x64>
 8000a9a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a9e:	d107      	bne.n	8000ab0 <__cmpdf2+0x74>
 8000aa0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000aa4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000aa8:	d1d6      	bne.n	8000a58 <__cmpdf2+0x1c>
 8000aaa:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000aae:	d0d3      	beq.n	8000a58 <__cmpdf2+0x1c>
 8000ab0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ab4:	4770      	bx	lr
 8000ab6:	bf00      	nop

08000ab8 <__aeabi_cdrcmple>:
 8000ab8:	4684      	mov	ip, r0
 8000aba:	4610      	mov	r0, r2
 8000abc:	4662      	mov	r2, ip
 8000abe:	468c      	mov	ip, r1
 8000ac0:	4619      	mov	r1, r3
 8000ac2:	4663      	mov	r3, ip
 8000ac4:	e000      	b.n	8000ac8 <__aeabi_cdcmpeq>
 8000ac6:	bf00      	nop

08000ac8 <__aeabi_cdcmpeq>:
 8000ac8:	b501      	push	{r0, lr}
 8000aca:	f7ff ffb7 	bl	8000a3c <__cmpdf2>
 8000ace:	2800      	cmp	r0, #0
 8000ad0:	bf48      	it	mi
 8000ad2:	f110 0f00 	cmnmi.w	r0, #0
 8000ad6:	bd01      	pop	{r0, pc}

08000ad8 <__aeabi_dcmpeq>:
 8000ad8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000adc:	f7ff fff4 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000ae0:	bf0c      	ite	eq
 8000ae2:	2001      	moveq	r0, #1
 8000ae4:	2000      	movne	r0, #0
 8000ae6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aea:	bf00      	nop

08000aec <__aeabi_dcmplt>:
 8000aec:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000af0:	f7ff ffea 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000af4:	bf34      	ite	cc
 8000af6:	2001      	movcc	r0, #1
 8000af8:	2000      	movcs	r0, #0
 8000afa:	f85d fb08 	ldr.w	pc, [sp], #8
 8000afe:	bf00      	nop

08000b00 <__aeabi_dcmple>:
 8000b00:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b04:	f7ff ffe0 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000b08:	bf94      	ite	ls
 8000b0a:	2001      	movls	r0, #1
 8000b0c:	2000      	movhi	r0, #0
 8000b0e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b12:	bf00      	nop

08000b14 <__aeabi_dcmpge>:
 8000b14:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b18:	f7ff ffce 	bl	8000ab8 <__aeabi_cdrcmple>
 8000b1c:	bf94      	ite	ls
 8000b1e:	2001      	movls	r0, #1
 8000b20:	2000      	movhi	r0, #0
 8000b22:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b26:	bf00      	nop

08000b28 <__aeabi_dcmpgt>:
 8000b28:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b2c:	f7ff ffc4 	bl	8000ab8 <__aeabi_cdrcmple>
 8000b30:	bf34      	ite	cc
 8000b32:	2001      	movcc	r0, #1
 8000b34:	2000      	movcs	r0, #0
 8000b36:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b3a:	bf00      	nop

08000b3c <__aeabi_dcmpun>:
 8000b3c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b44:	d102      	bne.n	8000b4c <__aeabi_dcmpun+0x10>
 8000b46:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b4a:	d10a      	bne.n	8000b62 <__aeabi_dcmpun+0x26>
 8000b4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b50:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b54:	d102      	bne.n	8000b5c <__aeabi_dcmpun+0x20>
 8000b56:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b5a:	d102      	bne.n	8000b62 <__aeabi_dcmpun+0x26>
 8000b5c:	f04f 0000 	mov.w	r0, #0
 8000b60:	4770      	bx	lr
 8000b62:	f04f 0001 	mov.w	r0, #1
 8000b66:	4770      	bx	lr

08000b68 <__aeabi_d2iz>:
 8000b68:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b6c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b70:	d215      	bcs.n	8000b9e <__aeabi_d2iz+0x36>
 8000b72:	d511      	bpl.n	8000b98 <__aeabi_d2iz+0x30>
 8000b74:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b78:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b7c:	d912      	bls.n	8000ba4 <__aeabi_d2iz+0x3c>
 8000b7e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b82:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b86:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b8a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000b8e:	fa23 f002 	lsr.w	r0, r3, r2
 8000b92:	bf18      	it	ne
 8000b94:	4240      	negne	r0, r0
 8000b96:	4770      	bx	lr
 8000b98:	f04f 0000 	mov.w	r0, #0
 8000b9c:	4770      	bx	lr
 8000b9e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000ba2:	d105      	bne.n	8000bb0 <__aeabi_d2iz+0x48>
 8000ba4:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000ba8:	bf08      	it	eq
 8000baa:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000bae:	4770      	bx	lr
 8000bb0:	f04f 0000 	mov.w	r0, #0
 8000bb4:	4770      	bx	lr
 8000bb6:	bf00      	nop

08000bb8 <wizchip_cris_enter>:
 * @brief Default function to enable interrupt.
 * @note This function help not to access wrong address. If you do not describe this function or register any functions,
 * null function is called.
 */
//void 	  wizchip_cris_enter(void)           {};
void 	  wizchip_cris_enter(void)           {}
 8000bb8:	b480      	push	{r7}
 8000bba:	af00      	add	r7, sp, #0
 8000bbc:	bf00      	nop
 8000bbe:	46bd      	mov	sp, r7
 8000bc0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000bc4:	4770      	bx	lr

08000bc6 <wizchip_cris_exit>:
 * @brief Default function to disable interrupt.
 * @note This function help not to access wrong address. If you do not describe this function or register any functions,
 * null function is called.
 */
//void 	  wizchip_cris_exit(void)          {};
void 	  wizchip_cris_exit(void)          {}
 8000bc6:	b480      	push	{r7}
 8000bc8:	af00      	add	r7, sp, #0
 8000bca:	bf00      	nop
 8000bcc:	46bd      	mov	sp, r7
 8000bce:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000bd2:	4770      	bx	lr

08000bd4 <wizchip_cs_select>:
 * @brief Default function to select chip.
 * @note This function help not to access wrong address. If you do not describe this function or register any functions,
 * null function is called.
 */
//void 	wizchip_cs_select(void)            {};
void 	wizchip_cs_select(void)            {}
 8000bd4:	b480      	push	{r7}
 8000bd6:	af00      	add	r7, sp, #0
 8000bd8:	bf00      	nop
 8000bda:	46bd      	mov	sp, r7
 8000bdc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000be0:	4770      	bx	lr

08000be2 <wizchip_cs_deselect>:
 * @brief Default function to deselect chip.
 * @note This function help not to access wrong address. If you do not describe this function or register any functions,
 * null function is called.
 */
//void 	wizchip_cs_deselect(void)          {};
void 	wizchip_cs_deselect(void)          {}
 8000be2:	b480      	push	{r7}
 8000be4:	af00      	add	r7, sp, #0
 8000be6:	bf00      	nop
 8000be8:	46bd      	mov	sp, r7
 8000bea:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000bee:	4770      	bx	lr

08000bf0 <wizchip_bus_readdata>:
 * @note This function help not to access wrong address. If you do not describe this function or register any functions,
 * null function is called.
 */
 //M20150601 : Rename the function for integrating with W5300
//uint8_t wizchip_bus_readbyte(uint32_t AddrSel) { return * ((volatile uint8_t *)((ptrdiff_t) AddrSel)); }
iodata_t wizchip_bus_readdata(uint32_t AddrSel) { return * ((volatile iodata_t *)((ptrdiff_t) AddrSel)); }
 8000bf0:	b480      	push	{r7}
 8000bf2:	b083      	sub	sp, #12
 8000bf4:	af00      	add	r7, sp, #0
 8000bf6:	6078      	str	r0, [r7, #4]
 8000bf8:	687b      	ldr	r3, [r7, #4]
 8000bfa:	781b      	ldrb	r3, [r3, #0]
 8000bfc:	b2db      	uxtb	r3, r3
 8000bfe:	4618      	mov	r0, r3
 8000c00:	370c      	adds	r7, #12
 8000c02:	46bd      	mov	sp, r7
 8000c04:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000c08:	4770      	bx	lr

08000c0a <wizchip_bus_writedata>:
 * @note This function help not to access wrong address. If you do not describe this function or register any functions,
 * null function is called.
 */
//M20150601 : Rename the function for integrating with W5300
//void 	wizchip_bus_writebyte(uint32_t AddrSel, uint8_t wb)  { *((volatile uint8_t*)((ptrdiff_t)AddrSel)) = wb; }
void 	wizchip_bus_writedata(uint32_t AddrSel, iodata_t wb)  { *((volatile iodata_t*)((ptrdiff_t)AddrSel)) = wb; }
 8000c0a:	b480      	push	{r7}
 8000c0c:	b083      	sub	sp, #12
 8000c0e:	af00      	add	r7, sp, #0
 8000c10:	6078      	str	r0, [r7, #4]
 8000c12:	460b      	mov	r3, r1
 8000c14:	70fb      	strb	r3, [r7, #3]
 8000c16:	687b      	ldr	r3, [r7, #4]
 8000c18:	78fa      	ldrb	r2, [r7, #3]
 8000c1a:	701a      	strb	r2, [r3, #0]
 8000c1c:	bf00      	nop
 8000c1e:	370c      	adds	r7, #12
 8000c20:	46bd      	mov	sp, r7
 8000c22:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000c26:	4770      	bx	lr

08000c28 <wizchip_spi_readbyte>:
 * @brief Default function to read in SPI interface.
 * @note This function help not to access wrong address. If you do not describe this function or register any functions,
 * null function is called.
 */
//uint8_t wizchip_spi_readbyte(void)        {return 0;};
uint8_t wizchip_spi_readbyte(void)        {return 0;}
 8000c28:	b480      	push	{r7}
 8000c2a:	af00      	add	r7, sp, #0
 8000c2c:	2300      	movs	r3, #0
 8000c2e:	4618      	mov	r0, r3
 8000c30:	46bd      	mov	sp, r7
 8000c32:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000c36:	4770      	bx	lr

08000c38 <wizchip_spi_writebyte>:
 * @brief Default function to write in SPI interface.
 * @note This function help not to access wrong address. If you do not describe this function or register any functions,
 * null function is called.
 */
//void 	wizchip_spi_writebyte(uint8_t wb) {};
void 	wizchip_spi_writebyte(uint8_t wb) {}
 8000c38:	b480      	push	{r7}
 8000c3a:	b083      	sub	sp, #12
 8000c3c:	af00      	add	r7, sp, #0
 8000c3e:	4603      	mov	r3, r0
 8000c40:	71fb      	strb	r3, [r7, #7]
 8000c42:	bf00      	nop
 8000c44:	370c      	adds	r7, #12
 8000c46:	46bd      	mov	sp, r7
 8000c48:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000c4c:	4770      	bx	lr
	...

08000c50 <reg_wizchip_cs_cbfunc>:
      WIZCHIP.CRIS._exit  = cris_ex;
   }
}

void reg_wizchip_cs_cbfunc(void(*cs_sel)(void), void(*cs_desel)(void))
{
 8000c50:	b480      	push	{r7}
 8000c52:	b083      	sub	sp, #12
 8000c54:	af00      	add	r7, sp, #0
 8000c56:	6078      	str	r0, [r7, #4]
 8000c58:	6039      	str	r1, [r7, #0]
   if(!cs_sel || !cs_desel)
 8000c5a:	687b      	ldr	r3, [r7, #4]
 8000c5c:	2b00      	cmp	r3, #0
 8000c5e:	d002      	beq.n	8000c66 <reg_wizchip_cs_cbfunc+0x16>
 8000c60:	683b      	ldr	r3, [r7, #0]
 8000c62:	2b00      	cmp	r3, #0
 8000c64:	d106      	bne.n	8000c74 <reg_wizchip_cs_cbfunc+0x24>
   {
      WIZCHIP.CS._select   = wizchip_cs_select;
 8000c66:	4b0a      	ldr	r3, [pc, #40]	; (8000c90 <reg_wizchip_cs_cbfunc+0x40>)
 8000c68:	4a0a      	ldr	r2, [pc, #40]	; (8000c94 <reg_wizchip_cs_cbfunc+0x44>)
 8000c6a:	615a      	str	r2, [r3, #20]
      WIZCHIP.CS._deselect = wizchip_cs_deselect;
 8000c6c:	4b08      	ldr	r3, [pc, #32]	; (8000c90 <reg_wizchip_cs_cbfunc+0x40>)
 8000c6e:	4a0a      	ldr	r2, [pc, #40]	; (8000c98 <reg_wizchip_cs_cbfunc+0x48>)
 8000c70:	619a      	str	r2, [r3, #24]
 8000c72:	e006      	b.n	8000c82 <reg_wizchip_cs_cbfunc+0x32>
   }
   else
   {
      WIZCHIP.CS._select   = cs_sel;
 8000c74:	4a06      	ldr	r2, [pc, #24]	; (8000c90 <reg_wizchip_cs_cbfunc+0x40>)
 8000c76:	687b      	ldr	r3, [r7, #4]
 8000c78:	6153      	str	r3, [r2, #20]
      WIZCHIP.CS._deselect = cs_desel;
 8000c7a:	4a05      	ldr	r2, [pc, #20]	; (8000c90 <reg_wizchip_cs_cbfunc+0x40>)
 8000c7c:	683b      	ldr	r3, [r7, #0]
 8000c7e:	6193      	str	r3, [r2, #24]
   }
}
 8000c80:	bf00      	nop
 8000c82:	bf00      	nop
 8000c84:	370c      	adds	r7, #12
 8000c86:	46bd      	mov	sp, r7
 8000c88:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000c8c:	4770      	bx	lr
 8000c8e:	bf00      	nop
 8000c90:	20000000 	.word	0x20000000
 8000c94:	08000bd5 	.word	0x08000bd5
 8000c98:	08000be3 	.word	0x08000be3

08000c9c <reg_wizchip_spi_cbfunc>:
      WIZCHIP.IF.BUS._write_data  = bus_wb;
   }
}

void reg_wizchip_spi_cbfunc(uint8_t (*spi_rb)(void), void (*spi_wb)(uint8_t wb))
{
 8000c9c:	b480      	push	{r7}
 8000c9e:	b083      	sub	sp, #12
 8000ca0:	af00      	add	r7, sp, #0
 8000ca2:	6078      	str	r0, [r7, #4]
 8000ca4:	6039      	str	r1, [r7, #0]
   while(!(WIZCHIP.if_mode & _WIZCHIP_IO_MODE_SPI_));
 8000ca6:	bf00      	nop
 8000ca8:	4b0f      	ldr	r3, [pc, #60]	; (8000ce8 <reg_wizchip_spi_cbfunc+0x4c>)
 8000caa:	881b      	ldrh	r3, [r3, #0]
 8000cac:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8000cb0:	2b00      	cmp	r3, #0
 8000cb2:	d0f9      	beq.n	8000ca8 <reg_wizchip_spi_cbfunc+0xc>
   
   if(!spi_rb || !spi_wb)
 8000cb4:	687b      	ldr	r3, [r7, #4]
 8000cb6:	2b00      	cmp	r3, #0
 8000cb8:	d002      	beq.n	8000cc0 <reg_wizchip_spi_cbfunc+0x24>
 8000cba:	683b      	ldr	r3, [r7, #0]
 8000cbc:	2b00      	cmp	r3, #0
 8000cbe:	d106      	bne.n	8000cce <reg_wizchip_spi_cbfunc+0x32>
   {
      WIZCHIP.IF.SPI._read_byte   = wizchip_spi_readbyte;
 8000cc0:	4b09      	ldr	r3, [pc, #36]	; (8000ce8 <reg_wizchip_spi_cbfunc+0x4c>)
 8000cc2:	4a0a      	ldr	r2, [pc, #40]	; (8000cec <reg_wizchip_spi_cbfunc+0x50>)
 8000cc4:	61da      	str	r2, [r3, #28]
      WIZCHIP.IF.SPI._write_byte  = wizchip_spi_writebyte;
 8000cc6:	4b08      	ldr	r3, [pc, #32]	; (8000ce8 <reg_wizchip_spi_cbfunc+0x4c>)
 8000cc8:	4a09      	ldr	r2, [pc, #36]	; (8000cf0 <reg_wizchip_spi_cbfunc+0x54>)
 8000cca:	621a      	str	r2, [r3, #32]
 8000ccc:	e006      	b.n	8000cdc <reg_wizchip_spi_cbfunc+0x40>
   }
   else
   {
      WIZCHIP.IF.SPI._read_byte   = spi_rb;
 8000cce:	4a06      	ldr	r2, [pc, #24]	; (8000ce8 <reg_wizchip_spi_cbfunc+0x4c>)
 8000cd0:	687b      	ldr	r3, [r7, #4]
 8000cd2:	61d3      	str	r3, [r2, #28]
      WIZCHIP.IF.SPI._write_byte  = spi_wb;
 8000cd4:	4a04      	ldr	r2, [pc, #16]	; (8000ce8 <reg_wizchip_spi_cbfunc+0x4c>)
 8000cd6:	683b      	ldr	r3, [r7, #0]
 8000cd8:	6213      	str	r3, [r2, #32]
   }
}
 8000cda:	bf00      	nop
 8000cdc:	bf00      	nop
 8000cde:	370c      	adds	r7, #12
 8000ce0:	46bd      	mov	sp, r7
 8000ce2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000ce6:	4770      	bx	lr
 8000ce8:	20000000 	.word	0x20000000
 8000cec:	08000c29 	.word	0x08000c29
 8000cf0:	08000c39 	.word	0x08000c39

08000cf4 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8000cf4:	b480      	push	{r7}
 8000cf6:	b083      	sub	sp, #12
 8000cf8:	af00      	add	r7, sp, #0
 8000cfa:	4603      	mov	r3, r0
 8000cfc:	6039      	str	r1, [r7, #0]
 8000cfe:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8000d00:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000d04:	2b00      	cmp	r3, #0
 8000d06:	db0a      	blt.n	8000d1e <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8000d08:	683b      	ldr	r3, [r7, #0]
 8000d0a:	b2da      	uxtb	r2, r3
 8000d0c:	490c      	ldr	r1, [pc, #48]	; (8000d40 <__NVIC_SetPriority+0x4c>)
 8000d0e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000d12:	0112      	lsls	r2, r2, #4
 8000d14:	b2d2      	uxtb	r2, r2
 8000d16:	440b      	add	r3, r1
 8000d18:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 8000d1c:	e00a      	b.n	8000d34 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8000d1e:	683b      	ldr	r3, [r7, #0]
 8000d20:	b2da      	uxtb	r2, r3
 8000d22:	4908      	ldr	r1, [pc, #32]	; (8000d44 <__NVIC_SetPriority+0x50>)
 8000d24:	79fb      	ldrb	r3, [r7, #7]
 8000d26:	f003 030f 	and.w	r3, r3, #15
 8000d2a:	3b04      	subs	r3, #4
 8000d2c:	0112      	lsls	r2, r2, #4
 8000d2e:	b2d2      	uxtb	r2, r2
 8000d30:	440b      	add	r3, r1
 8000d32:	761a      	strb	r2, [r3, #24]
}
 8000d34:	bf00      	nop
 8000d36:	370c      	adds	r7, #12
 8000d38:	46bd      	mov	sp, r7
 8000d3a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d3e:	4770      	bx	lr
 8000d40:	e000e100 	.word	0xe000e100
 8000d44:	e000ed00 	.word	0xe000ed00

08000d48 <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 8000d48:	b580      	push	{r7, lr}
 8000d4a:	b082      	sub	sp, #8
 8000d4c:	af00      	add	r7, sp, #0
 8000d4e:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8000d50:	687b      	ldr	r3, [r7, #4]
 8000d52:	3b01      	subs	r3, #1
 8000d54:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8000d58:	d301      	bcc.n	8000d5e <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
 8000d5a:	2301      	movs	r3, #1
 8000d5c:	e00f      	b.n	8000d7e <SysTick_Config+0x36>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8000d5e:	4a0a      	ldr	r2, [pc, #40]	; (8000d88 <SysTick_Config+0x40>)
 8000d60:	687b      	ldr	r3, [r7, #4]
 8000d62:	3b01      	subs	r3, #1
 8000d64:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 8000d66:	210f      	movs	r1, #15
 8000d68:	f04f 30ff 	mov.w	r0, #4294967295
 8000d6c:	f7ff ffc2 	bl	8000cf4 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8000d70:	4b05      	ldr	r3, [pc, #20]	; (8000d88 <SysTick_Config+0x40>)
 8000d72:	2200      	movs	r2, #0
 8000d74:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8000d76:	4b04      	ldr	r3, [pc, #16]	; (8000d88 <SysTick_Config+0x40>)
 8000d78:	2207      	movs	r2, #7
 8000d7a:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 8000d7c:	2300      	movs	r3, #0
}
 8000d7e:	4618      	mov	r0, r3
 8000d80:	3708      	adds	r7, #8
 8000d82:	46bd      	mov	sp, r7
 8000d84:	bd80      	pop	{r7, pc}
 8000d86:	bf00      	nop
 8000d88:	e000e010 	.word	0xe000e010

08000d8c <ITM_SendChar>:
           \li Is blocking when a debugger is connected, but the previous character sent has not been transmitted.
  \param [in]     ch  Character to transmit.
  \returns            Character to transmit.
 */
__STATIC_INLINE uint32_t ITM_SendChar (uint32_t ch)
{
 8000d8c:	b480      	push	{r7}
 8000d8e:	b083      	sub	sp, #12
 8000d90:	af00      	add	r7, sp, #0
 8000d92:	6078      	str	r0, [r7, #4]
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 8000d94:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 8000d98:	f8d3 3e80 	ldr.w	r3, [r3, #3712]	; 0xe80
 8000d9c:	f003 0301 	and.w	r3, r3, #1
 8000da0:	2b00      	cmp	r3, #0
 8000da2:	d013      	beq.n	8000dcc <ITM_SendChar+0x40>
      ((ITM->TER & 1UL               ) != 0UL)   )     /* ITM Port #0 enabled */
 8000da4:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 8000da8:	f8d3 3e00 	ldr.w	r3, [r3, #3584]	; 0xe00
 8000dac:	f003 0301 	and.w	r3, r3, #1
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 8000db0:	2b00      	cmp	r3, #0
 8000db2:	d00b      	beq.n	8000dcc <ITM_SendChar+0x40>
  {
    while (ITM->PORT[0U].u32 == 0UL)
 8000db4:	e000      	b.n	8000db8 <ITM_SendChar+0x2c>
    {
      __NOP();
 8000db6:	bf00      	nop
    while (ITM->PORT[0U].u32 == 0UL)
 8000db8:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 8000dbc:	681b      	ldr	r3, [r3, #0]
 8000dbe:	2b00      	cmp	r3, #0
 8000dc0:	d0f9      	beq.n	8000db6 <ITM_SendChar+0x2a>
    }
    ITM->PORT[0U].u8 = (uint8_t)ch;
 8000dc2:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 8000dc6:	687a      	ldr	r2, [r7, #4]
 8000dc8:	b2d2      	uxtb	r2, r2
 8000dca:	701a      	strb	r2, [r3, #0]
  }
  return (ch);
 8000dcc:	687b      	ldr	r3, [r7, #4]
}
 8000dce:	4618      	mov	r0, r3
 8000dd0:	370c      	adds	r7, #12
 8000dd2:	46bd      	mov	sp, r7
 8000dd4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000dd8:	4770      	bx	lr
	...

08000ddc <main>:

void ethernet_cs_enable(void);
void ethernet_cs_disable(void);
void ethernet_reset(void);

int main(void){
 8000ddc:	b580      	push	{r7, lr}
 8000dde:	b084      	sub	sp, #16
 8000de0:	af00      	add	r7, sp, #0
	//Setup
	SPI1_Config();
 8000de2:	f000 f897 	bl	8000f14 <SPI1_Config>
	SysTick_Config(16009);
 8000de6:	f643 6089 	movw	r0, #16009	; 0x3e89
 8000dea:	f7ff ffad 	bl	8000d48 <SysTick_Config>

	//Configuro mi pin de Ethernet
	RCC -> AHB1ENR = GPIOX_CLOCK(ETH_RST);
 8000dee:	4b0f      	ldr	r3, [pc, #60]	; (8000e2c <main+0x50>)
 8000df0:	2204      	movs	r2, #4
 8000df2:	631a      	str	r2, [r3, #48]	; 0x30
	GPIOX_MODER(MODE_OUT, ETH_RST);
 8000df4:	4b0e      	ldr	r3, [pc, #56]	; (8000e30 <main+0x54>)
 8000df6:	681b      	ldr	r3, [r3, #0]
 8000df8:	f423 6340 	bic.w	r3, r3, #3072	; 0xc00
 8000dfc:	4a0c      	ldr	r2, [pc, #48]	; (8000e30 <main+0x54>)
 8000dfe:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8000e02:	6013      	str	r3, [r2, #0]

	//ETH500
	ethernet_reset();
 8000e04:	f000 f838 	bl	8000e78 <ethernet_reset>
	reg_wizchip_spi_cbfunc(SPI1_Read, SPI1_Write);
 8000e08:	490a      	ldr	r1, [pc, #40]	; (8000e34 <main+0x58>)
 8000e0a:	480b      	ldr	r0, [pc, #44]	; (8000e38 <main+0x5c>)
 8000e0c:	f7ff ff46 	bl	8000c9c <reg_wizchip_spi_cbfunc>
	reg_wizchip_cs_cbfunc(ethernet_cs_enable, ethernet_cs_disable);
 8000e10:	490a      	ldr	r1, [pc, #40]	; (8000e3c <main+0x60>)
 8000e12:	480b      	ldr	r0, [pc, #44]	; (8000e40 <main+0x64>)
 8000e14:	f7ff ff1c 	bl	8000c50 <reg_wizchip_cs_cbfunc>

	//adress set
	uint8_t temp = IK_DEST_UNREACH;
 8000e18:	2340      	movs	r3, #64	; 0x40
 8000e1a:	73fb      	strb	r3, [r7, #15]
	uint8_t W5x00_AdrSet[2][4] = {{2,2,2,2},{2,2,2,2}};
 8000e1c:	4a09      	ldr	r2, [pc, #36]	; (8000e44 <main+0x68>)
 8000e1e:	1d3b      	adds	r3, r7, #4
 8000e20:	e892 0003 	ldmia.w	r2, {r0, r1}
 8000e24:	e883 0003 	stmia.w	r3, {r0, r1}

	//Loop
	for(;;){
 8000e28:	e7fe      	b.n	8000e28 <main+0x4c>
 8000e2a:	bf00      	nop
 8000e2c:	40023800 	.word	0x40023800
 8000e30:	40020800 	.word	0x40020800
 8000e34:	08001045 	.word	0x08001045
 8000e38:	0800108d 	.word	0x0800108d
 8000e3c:	08000e61 	.word	0x08000e61
 8000e40:	08000e49 	.word	0x08000e49
 8000e44:	08003dd0 	.word	0x08003dd0

08000e48 <ethernet_cs_enable>:

	}
}

void ethernet_cs_enable(void){
 8000e48:	b480      	push	{r7}
 8000e4a:	af00      	add	r7, sp, #0
	GPIOX_ODR(SPI1_NSS) = 0;
 8000e4c:	4b03      	ldr	r3, [pc, #12]	; (8000e5c <ethernet_cs_enable+0x14>)
 8000e4e:	2200      	movs	r2, #0
 8000e50:	601a      	str	r2, [r3, #0]
}
 8000e52:	bf00      	nop
 8000e54:	46bd      	mov	sp, r7
 8000e56:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e5a:	4770      	bx	lr
 8000e5c:	42408284 	.word	0x42408284

08000e60 <ethernet_cs_disable>:

void ethernet_cs_disable(void){
 8000e60:	b480      	push	{r7}
 8000e62:	af00      	add	r7, sp, #0
	GPIOX_ODR(SPI1_NSS) = 1;
 8000e64:	4b03      	ldr	r3, [pc, #12]	; (8000e74 <ethernet_cs_disable+0x14>)
 8000e66:	2201      	movs	r2, #1
 8000e68:	601a      	str	r2, [r3, #0]
}
 8000e6a:	bf00      	nop
 8000e6c:	46bd      	mov	sp, r7
 8000e6e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e72:	4770      	bx	lr
 8000e74:	42408284 	.word	0x42408284

08000e78 <ethernet_reset>:

void ethernet_reset(void){
 8000e78:	b580      	push	{r7, lr}
 8000e7a:	af00      	add	r7, sp, #0
	GPIOX_ODR(ETH_RST) = 0;
 8000e7c:	4b06      	ldr	r3, [pc, #24]	; (8000e98 <ethernet_reset+0x20>)
 8000e7e:	2200      	movs	r2, #0
 8000e80:	601a      	str	r2, [r3, #0]
	delay_ms(100);
 8000e82:	2064      	movs	r0, #100	; 0x64
 8000e84:	f000 f824 	bl	8000ed0 <delay_ms>
	GPIOX_ODR(ETH_RST) = 1;
 8000e88:	4b03      	ldr	r3, [pc, #12]	; (8000e98 <ethernet_reset+0x20>)
 8000e8a:	2201      	movs	r2, #1
 8000e8c:	601a      	str	r2, [r3, #0]
	delay_ms(100);
 8000e8e:	2064      	movs	r0, #100	; 0x64
 8000e90:	f000 f81e 	bl	8000ed0 <delay_ms>
}
 8000e94:	bf00      	nop
 8000e96:	bd80      	pop	{r7, pc}
 8000e98:	42410294 	.word	0x42410294

08000e9c <__io_putchar>:
	NVIC_ClearPendingIRQ(USART6_IRQn);																	//limpiar bandera de interrupcion
	NVIC_SetPriority(USART6_IRQn, 2);																	//asignamos la prioridad
	NVIC_EnableIRQ(USART6_IRQn);																		//habilito la IRQ de USART2 en la NVIC
}

int __io_putchar(int ch){
 8000e9c:	b580      	push	{r7, lr}
 8000e9e:	b082      	sub	sp, #8
 8000ea0:	af00      	add	r7, sp, #0
 8000ea2:	6078      	str	r0, [r7, #4]
	//Serial Wire Viewer ITM
	ITM_SendChar(ch);
 8000ea4:	687b      	ldr	r3, [r7, #4]
 8000ea6:	4618      	mov	r0, r3
 8000ea8:	f7ff ff70 	bl	8000d8c <ITM_SendChar>

	//UART
	while(!(USART2 -> SR & USART_SR_TXE));																//verifica que no hayas datos en el flag de transmision
 8000eac:	bf00      	nop
 8000eae:	4b07      	ldr	r3, [pc, #28]	; (8000ecc <__io_putchar+0x30>)
 8000eb0:	681b      	ldr	r3, [r3, #0]
 8000eb2:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8000eb6:	2b00      	cmp	r3, #0
 8000eb8:	d0f9      	beq.n	8000eae <__io_putchar+0x12>
	USART2 -> DR = (uint8_t)(ch & 0xFF);																//escribo en el data register
 8000eba:	687b      	ldr	r3, [r7, #4]
 8000ebc:	b2da      	uxtb	r2, r3
 8000ebe:	4b03      	ldr	r3, [pc, #12]	; (8000ecc <__io_putchar+0x30>)
 8000ec0:	605a      	str	r2, [r3, #4]
	return ch;																							//SR -> Status Register, DR -> Data Register
 8000ec2:	687b      	ldr	r3, [r7, #4]
}
 8000ec4:	4618      	mov	r0, r3
 8000ec6:	3708      	adds	r7, #8
 8000ec8:	46bd      	mov	sp, r7
 8000eca:	bd80      	pop	{r7, pc}
 8000ecc:	40004400 	.word	0x40004400

08000ed0 <delay_ms>:

void delay_ms(uint32_t d){
 8000ed0:	b580      	push	{r7, lr}
 8000ed2:	b084      	sub	sp, #16
 8000ed4:	af00      	add	r7, sp, #0
 8000ed6:	6078      	str	r0, [r7, #4]
	uint32_t ticksStart = getTicks();
 8000ed8:	f000 f810 	bl	8000efc <getTicks>
 8000edc:	60f8      	str	r0, [r7, #12]
	while(getTicks() - ticksStart <= d);
 8000ede:	bf00      	nop
 8000ee0:	f000 f80c 	bl	8000efc <getTicks>
 8000ee4:	4602      	mov	r2, r0
 8000ee6:	68fb      	ldr	r3, [r7, #12]
 8000ee8:	1ad3      	subs	r3, r2, r3
 8000eea:	687a      	ldr	r2, [r7, #4]
 8000eec:	429a      	cmp	r2, r3
 8000eee:	d2f7      	bcs.n	8000ee0 <delay_ms+0x10>
}
 8000ef0:	bf00      	nop
 8000ef2:	bf00      	nop
 8000ef4:	3710      	adds	r7, #16
 8000ef6:	46bd      	mov	sp, r7
 8000ef8:	bd80      	pop	{r7, pc}
	...

08000efc <getTicks>:
	ADC1 -> CR2 |= ADC_CR2_SWSTART;																		//hago un disparo por software (polling)
	while(!(ADC1 -> SR & ADC_SR_EOC));																	//espero a que se termine la conversion
	return ADC1 -> DR;																					//retorno el valor convertido
}

uint32_t getTicks(){
 8000efc:	b480      	push	{r7}
 8000efe:	af00      	add	r7, sp, #0
	return uwTicks;
 8000f00:	4b03      	ldr	r3, [pc, #12]	; (8000f10 <getTicks+0x14>)
 8000f02:	681b      	ldr	r3, [r3, #0]
}
 8000f04:	4618      	mov	r0, r3
 8000f06:	46bd      	mov	sp, r7
 8000f08:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f0c:	4770      	bx	lr
 8000f0e:	bf00      	nop
 8000f10:	20000210 	.word	0x20000210

08000f14 <SPI1_Config>:
		}
	}
	return 1;
}

void SPI1_Config(void){
 8000f14:	b480      	push	{r7}
 8000f16:	af00      	add	r7, sp, #0
	// 1. Configuramos los pines GPIO
	RCC -> AHB1ENR |= GPIOX_CLOCK(SPI1_SCK) | GPIOX_CLOCK(SPI1_NSS);							// activar el reloj del SPI1_SCK y NSS
 8000f18:	4b46      	ldr	r3, [pc, #280]	; (8001034 <SPI1_Config+0x120>)
 8000f1a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000f1c:	4a45      	ldr	r2, [pc, #276]	; (8001034 <SPI1_Config+0x120>)
 8000f1e:	f043 0303 	orr.w	r3, r3, #3
 8000f22:	6313      	str	r3, [r2, #48]	; 0x30
	GPIOX_MODER(MODE_ALTER, SPI1_SCK);															// funcion alternativa del SCK
 8000f24:	4b44      	ldr	r3, [pc, #272]	; (8001038 <SPI1_Config+0x124>)
 8000f26:	681b      	ldr	r3, [r3, #0]
 8000f28:	f423 6340 	bic.w	r3, r3, #3072	; 0xc00
 8000f2c:	4a42      	ldr	r2, [pc, #264]	; (8001038 <SPI1_Config+0x124>)
 8000f2e:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8000f32:	6013      	str	r3, [r2, #0]
	GPIOX_MODER(MODE_ALTER, SPI1_MOSI);															// funcion alternativa del MOSI
 8000f34:	4b40      	ldr	r3, [pc, #256]	; (8001038 <SPI1_Config+0x124>)
 8000f36:	681b      	ldr	r3, [r3, #0]
 8000f38:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 8000f3c:	4a3e      	ldr	r2, [pc, #248]	; (8001038 <SPI1_Config+0x124>)
 8000f3e:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8000f42:	6013      	str	r3, [r2, #0]
	GPIOX_MODER(MODE_ALTER, SPI1_MISO);															// funcion alternativa del MISO
 8000f44:	4b3c      	ldr	r3, [pc, #240]	; (8001038 <SPI1_Config+0x124>)
 8000f46:	681b      	ldr	r3, [r3, #0]
 8000f48:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 8000f4c:	4a3a      	ldr	r2, [pc, #232]	; (8001038 <SPI1_Config+0x124>)
 8000f4e:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8000f52:	6013      	str	r3, [r2, #0]
	GPIOX_MODER(MODE_OUT, SPI1_NSS);															// pin NSS como salida
 8000f54:	4b39      	ldr	r3, [pc, #228]	; (800103c <SPI1_Config+0x128>)
 8000f56:	681b      	ldr	r3, [r3, #0]
 8000f58:	f023 030c 	bic.w	r3, r3, #12
 8000f5c:	4a37      	ldr	r2, [pc, #220]	; (800103c <SPI1_Config+0x128>)
 8000f5e:	f043 0304 	orr.w	r3, r3, #4
 8000f62:	6013      	str	r3, [r2, #0]
	GPIOX_AFR(5, SPI1_SCK);																		// activo la funcion alternativa del SCK
 8000f64:	4b34      	ldr	r3, [pc, #208]	; (8001038 <SPI1_Config+0x124>)
 8000f66:	6a1b      	ldr	r3, [r3, #32]
 8000f68:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 8000f6c:	4a32      	ldr	r2, [pc, #200]	; (8001038 <SPI1_Config+0x124>)
 8000f6e:	f443 03a0 	orr.w	r3, r3, #5242880	; 0x500000
 8000f72:	6213      	str	r3, [r2, #32]
	GPIOX_AFR(5, SPI1_MOSI);																	// activo la funcion alternativa del MOSI
 8000f74:	4b30      	ldr	r3, [pc, #192]	; (8001038 <SPI1_Config+0x124>)
 8000f76:	6a1b      	ldr	r3, [r3, #32]
 8000f78:	f023 4370 	bic.w	r3, r3, #4026531840	; 0xf0000000
 8000f7c:	4a2e      	ldr	r2, [pc, #184]	; (8001038 <SPI1_Config+0x124>)
 8000f7e:	f043 43a0 	orr.w	r3, r3, #1342177280	; 0x50000000
 8000f82:	6213      	str	r3, [r2, #32]
	GPIOX_AFR(5, SPI1_MISO);																	// activo la funcion alternativa del MISO
 8000f84:	4b2c      	ldr	r3, [pc, #176]	; (8001038 <SPI1_Config+0x124>)
 8000f86:	6a1b      	ldr	r3, [r3, #32]
 8000f88:	f023 6370 	bic.w	r3, r3, #251658240	; 0xf000000
 8000f8c:	4a2a      	ldr	r2, [pc, #168]	; (8001038 <SPI1_Config+0x124>)
 8000f8e:	f043 63a0 	orr.w	r3, r3, #83886080	; 0x5000000
 8000f92:	6213      	str	r3, [r2, #32]
	GPIOX_OSPEEDR(MODE_SPD_VHIGH, SPI1_SCK);
 8000f94:	4b28      	ldr	r3, [pc, #160]	; (8001038 <SPI1_Config+0x124>)
 8000f96:	689b      	ldr	r3, [r3, #8]
 8000f98:	4a27      	ldr	r2, [pc, #156]	; (8001038 <SPI1_Config+0x124>)
 8000f9a:	f443 6340 	orr.w	r3, r3, #3072	; 0xc00
 8000f9e:	6093      	str	r3, [r2, #8]
	GPIOX_OSPEEDR(MODE_SPD_VHIGH, SPI1_MISO);
 8000fa0:	4b25      	ldr	r3, [pc, #148]	; (8001038 <SPI1_Config+0x124>)
 8000fa2:	689b      	ldr	r3, [r3, #8]
 8000fa4:	4a24      	ldr	r2, [pc, #144]	; (8001038 <SPI1_Config+0x124>)
 8000fa6:	f443 5340 	orr.w	r3, r3, #12288	; 0x3000
 8000faa:	6093      	str	r3, [r2, #8]
	GPIOX_OSPEEDR(MODE_SPD_VHIGH, SPI1_MOSI);
 8000fac:	4b22      	ldr	r3, [pc, #136]	; (8001038 <SPI1_Config+0x124>)
 8000fae:	689b      	ldr	r3, [r3, #8]
 8000fb0:	4a21      	ldr	r2, [pc, #132]	; (8001038 <SPI1_Config+0x124>)
 8000fb2:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8000fb6:	6093      	str	r3, [r2, #8]

	// 2. Configuramos el SPI
	RCC -> APB2ENR |= RCC_APB2ENR_SPI1EN;														// habilito el reloj del SPI1
 8000fb8:	4b1e      	ldr	r3, [pc, #120]	; (8001034 <SPI1_Config+0x120>)
 8000fba:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000fbc:	4a1d      	ldr	r2, [pc, #116]	; (8001034 <SPI1_Config+0x120>)
 8000fbe:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8000fc2:	6453      	str	r3, [r2, #68]	; 0x44
	SPI1 -> CR1 = 0;																			// limpiamos el CR1
 8000fc4:	4b1e      	ldr	r3, [pc, #120]	; (8001040 <SPI1_Config+0x12c>)
 8000fc6:	2200      	movs	r2, #0
 8000fc8:	601a      	str	r2, [r3, #0]
	SPI1 -> CR1 |= SPI_CR1_BR_0;																// configuro el baudrate a fclk / 2
 8000fca:	4b1d      	ldr	r3, [pc, #116]	; (8001040 <SPI1_Config+0x12c>)
 8000fcc:	681b      	ldr	r3, [r3, #0]
 8000fce:	4a1c      	ldr	r2, [pc, #112]	; (8001040 <SPI1_Config+0x12c>)
 8000fd0:	f043 0308 	orr.w	r3, r3, #8
 8000fd4:	6013      	str	r3, [r2, #0]
	SPI1 -> CR1 &=~ SPI_CR1_CPHA | SPI_CR1_CPOL;												// configuro el modo 0
 8000fd6:	4b1a      	ldr	r3, [pc, #104]	; (8001040 <SPI1_Config+0x12c>)
 8000fd8:	681b      	ldr	r3, [r3, #0]
 8000fda:	4a19      	ldr	r2, [pc, #100]	; (8001040 <SPI1_Config+0x12c>)
 8000fdc:	f023 0301 	bic.w	r3, r3, #1
 8000fe0:	6013      	str	r3, [r2, #0]
	SPI1 -> CR1 &=~ SPI_CR1_DFF;																// longitud de la trama: 8 bits
 8000fe2:	4b17      	ldr	r3, [pc, #92]	; (8001040 <SPI1_Config+0x12c>)
 8000fe4:	681b      	ldr	r3, [r3, #0]
 8000fe6:	4a16      	ldr	r2, [pc, #88]	; (8001040 <SPI1_Config+0x12c>)
 8000fe8:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8000fec:	6013      	str	r3, [r2, #0]
	SPI1 -> CR1 &=~ SPI_CR1_LSBFIRST;															// configuro MSB
 8000fee:	4b14      	ldr	r3, [pc, #80]	; (8001040 <SPI1_Config+0x12c>)
 8000ff0:	681b      	ldr	r3, [r3, #0]
 8000ff2:	4a13      	ldr	r2, [pc, #76]	; (8001040 <SPI1_Config+0x12c>)
 8000ff4:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8000ff8:	6013      	str	r3, [r2, #0]

	// 3. Configuramos el manejo del pin NSS
	SPI1 -> CR1 |= SPI_CR1_SSM;																	// manejo por software
 8000ffa:	4b11      	ldr	r3, [pc, #68]	; (8001040 <SPI1_Config+0x12c>)
 8000ffc:	681b      	ldr	r3, [r3, #0]
 8000ffe:	4a10      	ldr	r2, [pc, #64]	; (8001040 <SPI1_Config+0x12c>)
 8001000:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8001004:	6013      	str	r3, [r2, #0]
	SPI1 -> CR1 |= SPI_CR1_SSI;																	// ok master
 8001006:	4b0e      	ldr	r3, [pc, #56]	; (8001040 <SPI1_Config+0x12c>)
 8001008:	681b      	ldr	r3, [r3, #0]
 800100a:	4a0d      	ldr	r2, [pc, #52]	; (8001040 <SPI1_Config+0x12c>)
 800100c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001010:	6013      	str	r3, [r2, #0]
	SPI1 -> CR1 |= SPI_CR1_MSTR;																// habilito el modo master
 8001012:	4b0b      	ldr	r3, [pc, #44]	; (8001040 <SPI1_Config+0x12c>)
 8001014:	681b      	ldr	r3, [r3, #0]
 8001016:	4a0a      	ldr	r2, [pc, #40]	; (8001040 <SPI1_Config+0x12c>)
 8001018:	f043 0304 	orr.w	r3, r3, #4
 800101c:	6013      	str	r3, [r2, #0]
	SPI1 -> CR1 |= SPI_CR1_SPE;																	// habilita el SPI
 800101e:	4b08      	ldr	r3, [pc, #32]	; (8001040 <SPI1_Config+0x12c>)
 8001020:	681b      	ldr	r3, [r3, #0]
 8001022:	4a07      	ldr	r2, [pc, #28]	; (8001040 <SPI1_Config+0x12c>)
 8001024:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001028:	6013      	str	r3, [r2, #0]
}
 800102a:	bf00      	nop
 800102c:	46bd      	mov	sp, r7
 800102e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001032:	4770      	bx	lr
 8001034:	40023800 	.word	0x40023800
 8001038:	40020000 	.word	0x40020000
 800103c:	40020400 	.word	0x40020400
 8001040:	40013000 	.word	0x40013000

08001044 <SPI1_Write>:

void SPI1_Write(uint8_t b){
 8001044:	b480      	push	{r7}
 8001046:	b085      	sub	sp, #20
 8001048:	af00      	add	r7, sp, #0
 800104a:	4603      	mov	r3, r0
 800104c:	71fb      	strb	r3, [r7, #7]
	uint8_t temp;

	while(!(SPI1 -> SR & SPI_SR_TXE));				//espero que el buffer de transmisión este vacio
 800104e:	bf00      	nop
 8001050:	4b0c      	ldr	r3, [pc, #48]	; (8001084 <SPI1_Write+0x40>)
 8001052:	689b      	ldr	r3, [r3, #8]
 8001054:	f003 0302 	and.w	r3, r3, #2
 8001058:	2b00      	cmp	r3, #0
 800105a:	d0f9      	beq.n	8001050 <SPI1_Write+0xc>
	*((__IO uint8_t *) &SPI1 -> DR) = b;													//envio un casteo para que solo se asignan los primeros 8 bits al registro de datos
 800105c:	4a0a      	ldr	r2, [pc, #40]	; (8001088 <SPI1_Write+0x44>)
 800105e:	79fb      	ldrb	r3, [r7, #7]
 8001060:	7013      	strb	r3, [r2, #0]
	while(!(SPI1 -> SR & SPI_SR_RXNE));				//espero que se reciba
 8001062:	bf00      	nop
 8001064:	4b07      	ldr	r3, [pc, #28]	; (8001084 <SPI1_Write+0x40>)
 8001066:	689b      	ldr	r3, [r3, #8]
 8001068:	f003 0301 	and.w	r3, r3, #1
 800106c:	2b00      	cmp	r3, #0
 800106e:	d0f9      	beq.n	8001064 <SPI1_Write+0x20>
	temp = SPI1 -> DR;
 8001070:	4b04      	ldr	r3, [pc, #16]	; (8001084 <SPI1_Write+0x40>)
 8001072:	68db      	ldr	r3, [r3, #12]
 8001074:	73fb      	strb	r3, [r7, #15]
	(void) temp;
	return;
 8001076:	bf00      	nop
}
 8001078:	3714      	adds	r7, #20
 800107a:	46bd      	mov	sp, r7
 800107c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001080:	4770      	bx	lr
 8001082:	bf00      	nop
 8001084:	40013000 	.word	0x40013000
 8001088:	4001300c 	.word	0x4001300c

0800108c <SPI1_Read>:

uint8_t SPI1_Read(void){
 800108c:	b480      	push	{r7}
 800108e:	af00      	add	r7, sp, #0
	while(!(SPI1 -> SR & SPI_SR_TXE));				//espero que el buffer de transmisión este vacio
 8001090:	bf00      	nop
 8001092:	4b0c      	ldr	r3, [pc, #48]	; (80010c4 <SPI1_Read+0x38>)
 8001094:	689b      	ldr	r3, [r3, #8]
 8001096:	f003 0302 	and.w	r3, r3, #2
 800109a:	2b00      	cmp	r3, #0
 800109c:	d0f9      	beq.n	8001092 <SPI1_Read+0x6>
	*((__IO uint8_t *) &SPI1 -> DR) = 0xFF;													//enviamos bits basura para que el esclavo genera su señal de reloj
 800109e:	4b0a      	ldr	r3, [pc, #40]	; (80010c8 <SPI1_Read+0x3c>)
 80010a0:	22ff      	movs	r2, #255	; 0xff
 80010a2:	701a      	strb	r2, [r3, #0]
	while(!(SPI1 -> SR & SPI_SR_RXNE));					//espero que se reciba
 80010a4:	bf00      	nop
 80010a6:	4b07      	ldr	r3, [pc, #28]	; (80010c4 <SPI1_Read+0x38>)
 80010a8:	689b      	ldr	r3, [r3, #8]
 80010aa:	f003 0301 	and.w	r3, r3, #1
 80010ae:	2b00      	cmp	r3, #0
 80010b0:	d0f9      	beq.n	80010a6 <SPI1_Read+0x1a>
	return (uint8_t) SPI1 -> DR;
 80010b2:	4b04      	ldr	r3, [pc, #16]	; (80010c4 <SPI1_Read+0x38>)
 80010b4:	68db      	ldr	r3, [r3, #12]
 80010b6:	b2db      	uxtb	r3, r3
}
 80010b8:	4618      	mov	r0, r3
 80010ba:	46bd      	mov	sp, r7
 80010bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010c0:	4770      	bx	lr
 80010c2:	bf00      	nop
 80010c4:	40013000 	.word	0x40013000
 80010c8:	4001300c 	.word	0x4001300c

080010cc <SysTick_Handler>:
volatile uint32_t uwTicks = 0;
volatile uint32_t dataBT;
volatile uint16_t adcData = 0;
int flagX = 0;

void SysTick_Handler(void){
 80010cc:	b480      	push	{r7}
 80010ce:	af00      	add	r7, sp, #0
	//multiplexado
	uwTicks += 1;
 80010d0:	4b04      	ldr	r3, [pc, #16]	; (80010e4 <SysTick_Handler+0x18>)
 80010d2:	681b      	ldr	r3, [r3, #0]
 80010d4:	3301      	adds	r3, #1
 80010d6:	4a03      	ldr	r2, [pc, #12]	; (80010e4 <SysTick_Handler+0x18>)
 80010d8:	6013      	str	r3, [r2, #0]
	return ;
 80010da:	bf00      	nop
}
 80010dc:	46bd      	mov	sp, r7
 80010de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010e2:	4770      	bx	lr
 80010e4:	20000210 	.word	0x20000210

080010e8 <EXTI15_10_IRQHandler>:

void EXTI15_10_IRQHandler(void){
 80010e8:	b480      	push	{r7}
 80010ea:	af00      	add	r7, sp, #0
	if(EXTI -> PR & EXTI_PR_PR13){
 80010ec:	4b0b      	ldr	r3, [pc, #44]	; (800111c <EXTI15_10_IRQHandler+0x34>)
 80010ee:	695b      	ldr	r3, [r3, #20]
 80010f0:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 80010f4:	2b00      	cmp	r3, #0
 80010f6:	d00c      	beq.n	8001112 <EXTI15_10_IRQHandler+0x2a>
		EXTI -> PR |= EXTI_PR_PR13;			//limpiar el pending byte PR13
 80010f8:	4b08      	ldr	r3, [pc, #32]	; (800111c <EXTI15_10_IRQHandler+0x34>)
 80010fa:	695b      	ldr	r3, [r3, #20]
 80010fc:	4a07      	ldr	r2, [pc, #28]	; (800111c <EXTI15_10_IRQHandler+0x34>)
 80010fe:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8001102:	6153      	str	r3, [r2, #20]
		GPIOA -> ODR ^= GPIO_ODR_OD5;		//toggle PA5
 8001104:	4b06      	ldr	r3, [pc, #24]	; (8001120 <EXTI15_10_IRQHandler+0x38>)
 8001106:	695b      	ldr	r3, [r3, #20]
 8001108:	4a05      	ldr	r2, [pc, #20]	; (8001120 <EXTI15_10_IRQHandler+0x38>)
 800110a:	f083 0320 	eor.w	r3, r3, #32
 800110e:	6153      	str	r3, [r2, #20]
	}
	return ;
 8001110:	bf00      	nop
 8001112:	bf00      	nop
}
 8001114:	46bd      	mov	sp, r7
 8001116:	f85d 7b04 	ldr.w	r7, [sp], #4
 800111a:	4770      	bx	lr
 800111c:	40013c00 	.word	0x40013c00
 8001120:	40020000 	.word	0x40020000

08001124 <USART2_IRQHandler>:

void USART2_IRQHandler(void){
 8001124:	b480      	push	{r7}
 8001126:	af00      	add	r7, sp, #0
	if(USART2 -> SR & USART_SR_RXNE){
 8001128:	4b07      	ldr	r3, [pc, #28]	; (8001148 <USART2_IRQHandler+0x24>)
 800112a:	681b      	ldr	r3, [r3, #0]
 800112c:	f003 0320 	and.w	r3, r3, #32
 8001130:	2b00      	cmp	r3, #0
 8001132:	d003      	beq.n	800113c <USART2_IRQHandler+0x18>
		//leo el dato recibido por la interrupcion
		dataBT = USART2 -> DR;
 8001134:	4b04      	ldr	r3, [pc, #16]	; (8001148 <USART2_IRQHandler+0x24>)
 8001136:	685b      	ldr	r3, [r3, #4]
 8001138:	4a04      	ldr	r2, [pc, #16]	; (800114c <USART2_IRQHandler+0x28>)
 800113a:	6013      	str	r3, [r2, #0]
	}
}
 800113c:	bf00      	nop
 800113e:	46bd      	mov	sp, r7
 8001140:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001144:	4770      	bx	lr
 8001146:	bf00      	nop
 8001148:	40004400 	.word	0x40004400
 800114c:	20000214 	.word	0x20000214

08001150 <USART6_IRQHandler>:

void USART6_IRQHandler(void){
 8001150:	b480      	push	{r7}
 8001152:	af00      	add	r7, sp, #0
	if(USART6 -> SR & USART_SR_RXNE){
 8001154:	4b07      	ldr	r3, [pc, #28]	; (8001174 <USART6_IRQHandler+0x24>)
 8001156:	681b      	ldr	r3, [r3, #0]
 8001158:	f003 0320 	and.w	r3, r3, #32
 800115c:	2b00      	cmp	r3, #0
 800115e:	d003      	beq.n	8001168 <USART6_IRQHandler+0x18>
		//leo el dato recibido por la interrupcion
		dataBT = USART6 -> DR;
 8001160:	4b04      	ldr	r3, [pc, #16]	; (8001174 <USART6_IRQHandler+0x24>)
 8001162:	685b      	ldr	r3, [r3, #4]
 8001164:	4a04      	ldr	r2, [pc, #16]	; (8001178 <USART6_IRQHandler+0x28>)
 8001166:	6013      	str	r3, [r2, #0]
	}
}
 8001168:	bf00      	nop
 800116a:	46bd      	mov	sp, r7
 800116c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001170:	4770      	bx	lr
 8001172:	bf00      	nop
 8001174:	40011400 	.word	0x40011400
 8001178:	20000214 	.word	0x20000214

0800117c <TIM5_IRQHandler>:

void TIM5_IRQHandler(void){
 800117c:	b480      	push	{r7}
 800117e:	af00      	add	r7, sp, #0
	if(TIM5 -> SR & TIM_SR_UIF){
 8001180:	4b0b      	ldr	r3, [pc, #44]	; (80011b0 <TIM5_IRQHandler+0x34>)
 8001182:	691b      	ldr	r3, [r3, #16]
 8001184:	f003 0301 	and.w	r3, r3, #1
 8001188:	2b00      	cmp	r3, #0
 800118a:	d00b      	beq.n	80011a4 <TIM5_IRQHandler+0x28>
		TIM5 -> SR &=~ TIM_SR_UIF;	//limpiar bandera
 800118c:	4b08      	ldr	r3, [pc, #32]	; (80011b0 <TIM5_IRQHandler+0x34>)
 800118e:	691b      	ldr	r3, [r3, #16]
 8001190:	4a07      	ldr	r2, [pc, #28]	; (80011b0 <TIM5_IRQHandler+0x34>)
 8001192:	f023 0301 	bic.w	r3, r3, #1
 8001196:	6113      	str	r3, [r2, #16]
		GPIOA -> ODR ^= GPIO_ODR_OD9;
 8001198:	4b06      	ldr	r3, [pc, #24]	; (80011b4 <TIM5_IRQHandler+0x38>)
 800119a:	695b      	ldr	r3, [r3, #20]
 800119c:	4a05      	ldr	r2, [pc, #20]	; (80011b4 <TIM5_IRQHandler+0x38>)
 800119e:	f483 7300 	eor.w	r3, r3, #512	; 0x200
 80011a2:	6153      	str	r3, [r2, #20]
	}
}
 80011a4:	bf00      	nop
 80011a6:	46bd      	mov	sp, r7
 80011a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80011ac:	4770      	bx	lr
 80011ae:	bf00      	nop
 80011b0:	40000c00 	.word	0x40000c00
 80011b4:	40020000 	.word	0x40020000

080011b8 <TIM3_IRQHandler>:

void TIM3_IRQHandler(void){
 80011b8:	b480      	push	{r7}
 80011ba:	af00      	add	r7, sp, #0
	static uint32_t ccr3;
	if(TIM3 -> SR & TIM_SR_CC3IF){
 80011bc:	4b0c      	ldr	r3, [pc, #48]	; (80011f0 <TIM3_IRQHandler+0x38>)
 80011be:	691b      	ldr	r3, [r3, #16]
 80011c0:	f003 0308 	and.w	r3, r3, #8
 80011c4:	2b00      	cmp	r3, #0
 80011c6:	d00e      	beq.n	80011e6 <TIM3_IRQHandler+0x2e>
		TIM3 -> SR &=~ TIM_SR_CC3IF;
 80011c8:	4b09      	ldr	r3, [pc, #36]	; (80011f0 <TIM3_IRQHandler+0x38>)
 80011ca:	691b      	ldr	r3, [r3, #16]
 80011cc:	4a08      	ldr	r2, [pc, #32]	; (80011f0 <TIM3_IRQHandler+0x38>)
 80011ce:	f023 0308 	bic.w	r3, r3, #8
 80011d2:	6113      	str	r3, [r2, #16]
		ccr3 = TIM3 -> CCR3 + 200;
 80011d4:	4b06      	ldr	r3, [pc, #24]	; (80011f0 <TIM3_IRQHandler+0x38>)
 80011d6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80011d8:	33c8      	adds	r3, #200	; 0xc8
 80011da:	4a06      	ldr	r2, [pc, #24]	; (80011f4 <TIM3_IRQHandler+0x3c>)
 80011dc:	6013      	str	r3, [r2, #0]
		TIM3 -> CCR3  = ccr3;
 80011de:	4a04      	ldr	r2, [pc, #16]	; (80011f0 <TIM3_IRQHandler+0x38>)
 80011e0:	4b04      	ldr	r3, [pc, #16]	; (80011f4 <TIM3_IRQHandler+0x3c>)
 80011e2:	681b      	ldr	r3, [r3, #0]
 80011e4:	63d3      	str	r3, [r2, #60]	; 0x3c
	}
}
 80011e6:	bf00      	nop
 80011e8:	46bd      	mov	sp, r7
 80011ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80011ee:	4770      	bx	lr
 80011f0:	40000400 	.word	0x40000400
 80011f4:	2000021c 	.word	0x2000021c

080011f8 <ADC_IRQHandler>:

float yk, uk, uk_1;

void ADC_IRQHandler(void){
 80011f8:	b480      	push	{r7}
 80011fa:	af00      	add	r7, sp, #0
	if(ADC1 -> SR & ADC_SR_OVR){
 80011fc:	4b0d      	ldr	r3, [pc, #52]	; (8001234 <ADC_IRQHandler+0x3c>)
 80011fe:	681b      	ldr	r3, [r3, #0]
 8001200:	f003 0320 	and.w	r3, r3, #32
 8001204:	2b00      	cmp	r3, #0
 8001206:	d005      	beq.n	8001214 <ADC_IRQHandler+0x1c>
		ADC1 -> SR &=~ ADC_SR_OVR;													//cuando haya overrun lo borramos
 8001208:	4b0a      	ldr	r3, [pc, #40]	; (8001234 <ADC_IRQHandler+0x3c>)
 800120a:	681b      	ldr	r3, [r3, #0]
 800120c:	4a09      	ldr	r2, [pc, #36]	; (8001234 <ADC_IRQHandler+0x3c>)
 800120e:	f023 0320 	bic.w	r3, r3, #32
 8001212:	6013      	str	r3, [r2, #0]
	}
	if(ADC1 -> SR & ADC_SR_EOC){
 8001214:	4b07      	ldr	r3, [pc, #28]	; (8001234 <ADC_IRQHandler+0x3c>)
 8001216:	681b      	ldr	r3, [r3, #0]
 8001218:	f003 0302 	and.w	r3, r3, #2
 800121c:	2b00      	cmp	r3, #0
 800121e:	d004      	beq.n	800122a <ADC_IRQHandler+0x32>
		adcData = ADC1 -> DR;
 8001220:	4b04      	ldr	r3, [pc, #16]	; (8001234 <ADC_IRQHandler+0x3c>)
 8001222:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8001224:	b29a      	uxth	r2, r3
 8001226:	4b04      	ldr	r3, [pc, #16]	; (8001238 <ADC_IRQHandler+0x40>)
 8001228:	801a      	strh	r2, [r3, #0]
		uk = adcData;
		yk = 0.03046 * (uk + uk_1) + 0.9341 * yk;
		printf("Mi valor es: %f y tambien es %f\r\n", yk, uk);
		*/
	}
}
 800122a:	bf00      	nop
 800122c:	46bd      	mov	sp, r7
 800122e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001232:	4770      	bx	lr
 8001234:	40012000 	.word	0x40012000
 8001238:	20000218 	.word	0x20000218

0800123c <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 800123c:	b480      	push	{r7}
 800123e:	af00      	add	r7, sp, #0
  return 1;
 8001240:	2301      	movs	r3, #1
}
 8001242:	4618      	mov	r0, r3
 8001244:	46bd      	mov	sp, r7
 8001246:	f85d 7b04 	ldr.w	r7, [sp], #4
 800124a:	4770      	bx	lr

0800124c <_kill>:

int _kill(int pid, int sig)
{
 800124c:	b580      	push	{r7, lr}
 800124e:	b082      	sub	sp, #8
 8001250:	af00      	add	r7, sp, #0
 8001252:	6078      	str	r0, [r7, #4]
 8001254:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 8001256:	f001 f809 	bl	800226c <__errno>
 800125a:	4603      	mov	r3, r0
 800125c:	2216      	movs	r2, #22
 800125e:	601a      	str	r2, [r3, #0]
  return -1;
 8001260:	f04f 33ff 	mov.w	r3, #4294967295
}
 8001264:	4618      	mov	r0, r3
 8001266:	3708      	adds	r7, #8
 8001268:	46bd      	mov	sp, r7
 800126a:	bd80      	pop	{r7, pc}

0800126c <_exit>:

void _exit (int status)
{
 800126c:	b580      	push	{r7, lr}
 800126e:	b082      	sub	sp, #8
 8001270:	af00      	add	r7, sp, #0
 8001272:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 8001274:	f04f 31ff 	mov.w	r1, #4294967295
 8001278:	6878      	ldr	r0, [r7, #4]
 800127a:	f7ff ffe7 	bl	800124c <_kill>
  while (1) {}    /* Make sure we hang here */
 800127e:	e7fe      	b.n	800127e <_exit+0x12>

08001280 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001280:	b580      	push	{r7, lr}
 8001282:	b086      	sub	sp, #24
 8001284:	af00      	add	r7, sp, #0
 8001286:	60f8      	str	r0, [r7, #12]
 8001288:	60b9      	str	r1, [r7, #8]
 800128a:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800128c:	2300      	movs	r3, #0
 800128e:	617b      	str	r3, [r7, #20]
 8001290:	e00a      	b.n	80012a8 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8001292:	f3af 8000 	nop.w
 8001296:	4601      	mov	r1, r0
 8001298:	68bb      	ldr	r3, [r7, #8]
 800129a:	1c5a      	adds	r2, r3, #1
 800129c:	60ba      	str	r2, [r7, #8]
 800129e:	b2ca      	uxtb	r2, r1
 80012a0:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80012a2:	697b      	ldr	r3, [r7, #20]
 80012a4:	3301      	adds	r3, #1
 80012a6:	617b      	str	r3, [r7, #20]
 80012a8:	697a      	ldr	r2, [r7, #20]
 80012aa:	687b      	ldr	r3, [r7, #4]
 80012ac:	429a      	cmp	r2, r3
 80012ae:	dbf0      	blt.n	8001292 <_read+0x12>
  }

  return len;
 80012b0:	687b      	ldr	r3, [r7, #4]
}
 80012b2:	4618      	mov	r0, r3
 80012b4:	3718      	adds	r7, #24
 80012b6:	46bd      	mov	sp, r7
 80012b8:	bd80      	pop	{r7, pc}

080012ba <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80012ba:	b580      	push	{r7, lr}
 80012bc:	b086      	sub	sp, #24
 80012be:	af00      	add	r7, sp, #0
 80012c0:	60f8      	str	r0, [r7, #12]
 80012c2:	60b9      	str	r1, [r7, #8]
 80012c4:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80012c6:	2300      	movs	r3, #0
 80012c8:	617b      	str	r3, [r7, #20]
 80012ca:	e009      	b.n	80012e0 <_write+0x26>
  {
    __io_putchar(*ptr++);
 80012cc:	68bb      	ldr	r3, [r7, #8]
 80012ce:	1c5a      	adds	r2, r3, #1
 80012d0:	60ba      	str	r2, [r7, #8]
 80012d2:	781b      	ldrb	r3, [r3, #0]
 80012d4:	4618      	mov	r0, r3
 80012d6:	f7ff fde1 	bl	8000e9c <__io_putchar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80012da:	697b      	ldr	r3, [r7, #20]
 80012dc:	3301      	adds	r3, #1
 80012de:	617b      	str	r3, [r7, #20]
 80012e0:	697a      	ldr	r2, [r7, #20]
 80012e2:	687b      	ldr	r3, [r7, #4]
 80012e4:	429a      	cmp	r2, r3
 80012e6:	dbf1      	blt.n	80012cc <_write+0x12>
  }
  return len;
 80012e8:	687b      	ldr	r3, [r7, #4]
}
 80012ea:	4618      	mov	r0, r3
 80012ec:	3718      	adds	r7, #24
 80012ee:	46bd      	mov	sp, r7
 80012f0:	bd80      	pop	{r7, pc}

080012f2 <_close>:

int _close(int file)
{
 80012f2:	b480      	push	{r7}
 80012f4:	b083      	sub	sp, #12
 80012f6:	af00      	add	r7, sp, #0
 80012f8:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 80012fa:	f04f 33ff 	mov.w	r3, #4294967295
}
 80012fe:	4618      	mov	r0, r3
 8001300:	370c      	adds	r7, #12
 8001302:	46bd      	mov	sp, r7
 8001304:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001308:	4770      	bx	lr

0800130a <_fstat>:


int _fstat(int file, struct stat *st)
{
 800130a:	b480      	push	{r7}
 800130c:	b083      	sub	sp, #12
 800130e:	af00      	add	r7, sp, #0
 8001310:	6078      	str	r0, [r7, #4]
 8001312:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8001314:	683b      	ldr	r3, [r7, #0]
 8001316:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 800131a:	605a      	str	r2, [r3, #4]
  return 0;
 800131c:	2300      	movs	r3, #0
}
 800131e:	4618      	mov	r0, r3
 8001320:	370c      	adds	r7, #12
 8001322:	46bd      	mov	sp, r7
 8001324:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001328:	4770      	bx	lr

0800132a <_isatty>:

int _isatty(int file)
{
 800132a:	b480      	push	{r7}
 800132c:	b083      	sub	sp, #12
 800132e:	af00      	add	r7, sp, #0
 8001330:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8001332:	2301      	movs	r3, #1
}
 8001334:	4618      	mov	r0, r3
 8001336:	370c      	adds	r7, #12
 8001338:	46bd      	mov	sp, r7
 800133a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800133e:	4770      	bx	lr

08001340 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8001340:	b480      	push	{r7}
 8001342:	b085      	sub	sp, #20
 8001344:	af00      	add	r7, sp, #0
 8001346:	60f8      	str	r0, [r7, #12]
 8001348:	60b9      	str	r1, [r7, #8]
 800134a:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 800134c:	2300      	movs	r3, #0
}
 800134e:	4618      	mov	r0, r3
 8001350:	3714      	adds	r7, #20
 8001352:	46bd      	mov	sp, r7
 8001354:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001358:	4770      	bx	lr
	...

0800135c <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 800135c:	b580      	push	{r7, lr}
 800135e:	b086      	sub	sp, #24
 8001360:	af00      	add	r7, sp, #0
 8001362:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8001364:	4a14      	ldr	r2, [pc, #80]	; (80013b8 <_sbrk+0x5c>)
 8001366:	4b15      	ldr	r3, [pc, #84]	; (80013bc <_sbrk+0x60>)
 8001368:	1ad3      	subs	r3, r2, r3
 800136a:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 800136c:	697b      	ldr	r3, [r7, #20]
 800136e:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8001370:	4b13      	ldr	r3, [pc, #76]	; (80013c0 <_sbrk+0x64>)
 8001372:	681b      	ldr	r3, [r3, #0]
 8001374:	2b00      	cmp	r3, #0
 8001376:	d102      	bne.n	800137e <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8001378:	4b11      	ldr	r3, [pc, #68]	; (80013c0 <_sbrk+0x64>)
 800137a:	4a12      	ldr	r2, [pc, #72]	; (80013c4 <_sbrk+0x68>)
 800137c:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800137e:	4b10      	ldr	r3, [pc, #64]	; (80013c0 <_sbrk+0x64>)
 8001380:	681a      	ldr	r2, [r3, #0]
 8001382:	687b      	ldr	r3, [r7, #4]
 8001384:	4413      	add	r3, r2
 8001386:	693a      	ldr	r2, [r7, #16]
 8001388:	429a      	cmp	r2, r3
 800138a:	d207      	bcs.n	800139c <_sbrk+0x40>
  {
    errno = ENOMEM;
 800138c:	f000 ff6e 	bl	800226c <__errno>
 8001390:	4603      	mov	r3, r0
 8001392:	220c      	movs	r2, #12
 8001394:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8001396:	f04f 33ff 	mov.w	r3, #4294967295
 800139a:	e009      	b.n	80013b0 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 800139c:	4b08      	ldr	r3, [pc, #32]	; (80013c0 <_sbrk+0x64>)
 800139e:	681b      	ldr	r3, [r3, #0]
 80013a0:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80013a2:	4b07      	ldr	r3, [pc, #28]	; (80013c0 <_sbrk+0x64>)
 80013a4:	681a      	ldr	r2, [r3, #0]
 80013a6:	687b      	ldr	r3, [r7, #4]
 80013a8:	4413      	add	r3, r2
 80013aa:	4a05      	ldr	r2, [pc, #20]	; (80013c0 <_sbrk+0x64>)
 80013ac:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80013ae:	68fb      	ldr	r3, [r7, #12]
}
 80013b0:	4618      	mov	r0, r3
 80013b2:	3718      	adds	r7, #24
 80013b4:	46bd      	mov	sp, r7
 80013b6:	bd80      	pop	{r7, pc}
 80013b8:	20020000 	.word	0x20020000
 80013bc:	00000400 	.word	0x00000400
 80013c0:	20000220 	.word	0x20000220
 80013c4:	20000370 	.word	0x20000370

080013c8 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 80013c8:	b480      	push	{r7}
 80013ca:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 80013cc:	4b06      	ldr	r3, [pc, #24]	; (80013e8 <SystemInit+0x20>)
 80013ce:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80013d2:	4a05      	ldr	r2, [pc, #20]	; (80013e8 <SystemInit+0x20>)
 80013d4:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 80013d8:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 80013dc:	bf00      	nop
 80013de:	46bd      	mov	sp, r7
 80013e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80013e4:	4770      	bx	lr
 80013e6:	bf00      	nop
 80013e8:	e000ed00 	.word	0xe000ed00

080013ec <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80013ec:	480d      	ldr	r0, [pc, #52]	; (8001424 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80013ee:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80013f0:	f7ff ffea 	bl	80013c8 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80013f4:	480c      	ldr	r0, [pc, #48]	; (8001428 <LoopForever+0x6>)
  ldr r1, =_edata
 80013f6:	490d      	ldr	r1, [pc, #52]	; (800142c <LoopForever+0xa>)
  ldr r2, =_sidata
 80013f8:	4a0d      	ldr	r2, [pc, #52]	; (8001430 <LoopForever+0xe>)
  movs r3, #0
 80013fa:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80013fc:	e002      	b.n	8001404 <LoopCopyDataInit>

080013fe <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80013fe:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8001400:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8001402:	3304      	adds	r3, #4

08001404 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8001404:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8001406:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8001408:	d3f9      	bcc.n	80013fe <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800140a:	4a0a      	ldr	r2, [pc, #40]	; (8001434 <LoopForever+0x12>)
  ldr r4, =_ebss
 800140c:	4c0a      	ldr	r4, [pc, #40]	; (8001438 <LoopForever+0x16>)
  movs r3, #0
 800140e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8001410:	e001      	b.n	8001416 <LoopFillZerobss>

08001412 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8001412:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8001414:	3204      	adds	r2, #4

08001416 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8001416:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8001418:	d3fb      	bcc.n	8001412 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800141a:	f000 ff2d 	bl	8002278 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800141e:	f7ff fcdd 	bl	8000ddc <main>

08001422 <LoopForever>:

LoopForever:
  b LoopForever
 8001422:	e7fe      	b.n	8001422 <LoopForever>
  ldr   r0, =_estack
 8001424:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8001428:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800142c:	200001f4 	.word	0x200001f4
  ldr r2, =_sidata
 8001430:	080041b0 	.word	0x080041b0
  ldr r2, =_sbss
 8001434:	200001f4 	.word	0x200001f4
  ldr r4, =_ebss
 8001438:	20000370 	.word	0x20000370

0800143c <BusFault_Handler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800143c:	e7fe      	b.n	800143c <BusFault_Handler>
	...

08001440 <malloc>:
 8001440:	4b02      	ldr	r3, [pc, #8]	; (800144c <malloc+0xc>)
 8001442:	4601      	mov	r1, r0
 8001444:	6818      	ldr	r0, [r3, #0]
 8001446:	f000 b823 	b.w	8001490 <_malloc_r>
 800144a:	bf00      	nop
 800144c:	20000084 	.word	0x20000084

08001450 <sbrk_aligned>:
 8001450:	b570      	push	{r4, r5, r6, lr}
 8001452:	4e0e      	ldr	r6, [pc, #56]	; (800148c <sbrk_aligned+0x3c>)
 8001454:	460c      	mov	r4, r1
 8001456:	6831      	ldr	r1, [r6, #0]
 8001458:	4605      	mov	r5, r0
 800145a:	b911      	cbnz	r1, 8001462 <sbrk_aligned+0x12>
 800145c:	f000 fee4 	bl	8002228 <_sbrk_r>
 8001460:	6030      	str	r0, [r6, #0]
 8001462:	4621      	mov	r1, r4
 8001464:	4628      	mov	r0, r5
 8001466:	f000 fedf 	bl	8002228 <_sbrk_r>
 800146a:	1c43      	adds	r3, r0, #1
 800146c:	d00a      	beq.n	8001484 <sbrk_aligned+0x34>
 800146e:	1cc4      	adds	r4, r0, #3
 8001470:	f024 0403 	bic.w	r4, r4, #3
 8001474:	42a0      	cmp	r0, r4
 8001476:	d007      	beq.n	8001488 <sbrk_aligned+0x38>
 8001478:	1a21      	subs	r1, r4, r0
 800147a:	4628      	mov	r0, r5
 800147c:	f000 fed4 	bl	8002228 <_sbrk_r>
 8001480:	3001      	adds	r0, #1
 8001482:	d101      	bne.n	8001488 <sbrk_aligned+0x38>
 8001484:	f04f 34ff 	mov.w	r4, #4294967295
 8001488:	4620      	mov	r0, r4
 800148a:	bd70      	pop	{r4, r5, r6, pc}
 800148c:	20000228 	.word	0x20000228

08001490 <_malloc_r>:
 8001490:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8001494:	1ccd      	adds	r5, r1, #3
 8001496:	f025 0503 	bic.w	r5, r5, #3
 800149a:	3508      	adds	r5, #8
 800149c:	2d0c      	cmp	r5, #12
 800149e:	bf38      	it	cc
 80014a0:	250c      	movcc	r5, #12
 80014a2:	2d00      	cmp	r5, #0
 80014a4:	4607      	mov	r7, r0
 80014a6:	db01      	blt.n	80014ac <_malloc_r+0x1c>
 80014a8:	42a9      	cmp	r1, r5
 80014aa:	d905      	bls.n	80014b8 <_malloc_r+0x28>
 80014ac:	230c      	movs	r3, #12
 80014ae:	603b      	str	r3, [r7, #0]
 80014b0:	2600      	movs	r6, #0
 80014b2:	4630      	mov	r0, r6
 80014b4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80014b8:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 800158c <_malloc_r+0xfc>
 80014bc:	f000 f868 	bl	8001590 <__malloc_lock>
 80014c0:	f8d8 3000 	ldr.w	r3, [r8]
 80014c4:	461c      	mov	r4, r3
 80014c6:	bb5c      	cbnz	r4, 8001520 <_malloc_r+0x90>
 80014c8:	4629      	mov	r1, r5
 80014ca:	4638      	mov	r0, r7
 80014cc:	f7ff ffc0 	bl	8001450 <sbrk_aligned>
 80014d0:	1c43      	adds	r3, r0, #1
 80014d2:	4604      	mov	r4, r0
 80014d4:	d155      	bne.n	8001582 <_malloc_r+0xf2>
 80014d6:	f8d8 4000 	ldr.w	r4, [r8]
 80014da:	4626      	mov	r6, r4
 80014dc:	2e00      	cmp	r6, #0
 80014de:	d145      	bne.n	800156c <_malloc_r+0xdc>
 80014e0:	2c00      	cmp	r4, #0
 80014e2:	d048      	beq.n	8001576 <_malloc_r+0xe6>
 80014e4:	6823      	ldr	r3, [r4, #0]
 80014e6:	4631      	mov	r1, r6
 80014e8:	4638      	mov	r0, r7
 80014ea:	eb04 0903 	add.w	r9, r4, r3
 80014ee:	f000 fe9b 	bl	8002228 <_sbrk_r>
 80014f2:	4581      	cmp	r9, r0
 80014f4:	d13f      	bne.n	8001576 <_malloc_r+0xe6>
 80014f6:	6821      	ldr	r1, [r4, #0]
 80014f8:	1a6d      	subs	r5, r5, r1
 80014fa:	4629      	mov	r1, r5
 80014fc:	4638      	mov	r0, r7
 80014fe:	f7ff ffa7 	bl	8001450 <sbrk_aligned>
 8001502:	3001      	adds	r0, #1
 8001504:	d037      	beq.n	8001576 <_malloc_r+0xe6>
 8001506:	6823      	ldr	r3, [r4, #0]
 8001508:	442b      	add	r3, r5
 800150a:	6023      	str	r3, [r4, #0]
 800150c:	f8d8 3000 	ldr.w	r3, [r8]
 8001510:	2b00      	cmp	r3, #0
 8001512:	d038      	beq.n	8001586 <_malloc_r+0xf6>
 8001514:	685a      	ldr	r2, [r3, #4]
 8001516:	42a2      	cmp	r2, r4
 8001518:	d12b      	bne.n	8001572 <_malloc_r+0xe2>
 800151a:	2200      	movs	r2, #0
 800151c:	605a      	str	r2, [r3, #4]
 800151e:	e00f      	b.n	8001540 <_malloc_r+0xb0>
 8001520:	6822      	ldr	r2, [r4, #0]
 8001522:	1b52      	subs	r2, r2, r5
 8001524:	d41f      	bmi.n	8001566 <_malloc_r+0xd6>
 8001526:	2a0b      	cmp	r2, #11
 8001528:	d917      	bls.n	800155a <_malloc_r+0xca>
 800152a:	1961      	adds	r1, r4, r5
 800152c:	42a3      	cmp	r3, r4
 800152e:	6025      	str	r5, [r4, #0]
 8001530:	bf18      	it	ne
 8001532:	6059      	strne	r1, [r3, #4]
 8001534:	6863      	ldr	r3, [r4, #4]
 8001536:	bf08      	it	eq
 8001538:	f8c8 1000 	streq.w	r1, [r8]
 800153c:	5162      	str	r2, [r4, r5]
 800153e:	604b      	str	r3, [r1, #4]
 8001540:	4638      	mov	r0, r7
 8001542:	f104 060b 	add.w	r6, r4, #11
 8001546:	f000 f829 	bl	800159c <__malloc_unlock>
 800154a:	f026 0607 	bic.w	r6, r6, #7
 800154e:	1d23      	adds	r3, r4, #4
 8001550:	1af2      	subs	r2, r6, r3
 8001552:	d0ae      	beq.n	80014b2 <_malloc_r+0x22>
 8001554:	1b9b      	subs	r3, r3, r6
 8001556:	50a3      	str	r3, [r4, r2]
 8001558:	e7ab      	b.n	80014b2 <_malloc_r+0x22>
 800155a:	42a3      	cmp	r3, r4
 800155c:	6862      	ldr	r2, [r4, #4]
 800155e:	d1dd      	bne.n	800151c <_malloc_r+0x8c>
 8001560:	f8c8 2000 	str.w	r2, [r8]
 8001564:	e7ec      	b.n	8001540 <_malloc_r+0xb0>
 8001566:	4623      	mov	r3, r4
 8001568:	6864      	ldr	r4, [r4, #4]
 800156a:	e7ac      	b.n	80014c6 <_malloc_r+0x36>
 800156c:	4634      	mov	r4, r6
 800156e:	6876      	ldr	r6, [r6, #4]
 8001570:	e7b4      	b.n	80014dc <_malloc_r+0x4c>
 8001572:	4613      	mov	r3, r2
 8001574:	e7cc      	b.n	8001510 <_malloc_r+0x80>
 8001576:	230c      	movs	r3, #12
 8001578:	603b      	str	r3, [r7, #0]
 800157a:	4638      	mov	r0, r7
 800157c:	f000 f80e 	bl	800159c <__malloc_unlock>
 8001580:	e797      	b.n	80014b2 <_malloc_r+0x22>
 8001582:	6025      	str	r5, [r4, #0]
 8001584:	e7dc      	b.n	8001540 <_malloc_r+0xb0>
 8001586:	605b      	str	r3, [r3, #4]
 8001588:	deff      	udf	#255	; 0xff
 800158a:	bf00      	nop
 800158c:	20000224 	.word	0x20000224

08001590 <__malloc_lock>:
 8001590:	4801      	ldr	r0, [pc, #4]	; (8001598 <__malloc_lock+0x8>)
 8001592:	f000 be96 	b.w	80022c2 <__retarget_lock_acquire_recursive>
 8001596:	bf00      	nop
 8001598:	2000036c 	.word	0x2000036c

0800159c <__malloc_unlock>:
 800159c:	4801      	ldr	r0, [pc, #4]	; (80015a4 <__malloc_unlock+0x8>)
 800159e:	f000 be91 	b.w	80022c4 <__retarget_lock_release_recursive>
 80015a2:	bf00      	nop
 80015a4:	2000036c 	.word	0x2000036c

080015a8 <__cvt>:
 80015a8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80015ac:	ec55 4b10 	vmov	r4, r5, d0
 80015b0:	2d00      	cmp	r5, #0
 80015b2:	460e      	mov	r6, r1
 80015b4:	4619      	mov	r1, r3
 80015b6:	462b      	mov	r3, r5
 80015b8:	bfbb      	ittet	lt
 80015ba:	f105 4300 	addlt.w	r3, r5, #2147483648	; 0x80000000
 80015be:	461d      	movlt	r5, r3
 80015c0:	2300      	movge	r3, #0
 80015c2:	232d      	movlt	r3, #45	; 0x2d
 80015c4:	700b      	strb	r3, [r1, #0]
 80015c6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80015c8:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 80015cc:	4691      	mov	r9, r2
 80015ce:	f023 0820 	bic.w	r8, r3, #32
 80015d2:	bfbc      	itt	lt
 80015d4:	4622      	movlt	r2, r4
 80015d6:	4614      	movlt	r4, r2
 80015d8:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 80015dc:	d005      	beq.n	80015ea <__cvt+0x42>
 80015de:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 80015e2:	d100      	bne.n	80015e6 <__cvt+0x3e>
 80015e4:	3601      	adds	r6, #1
 80015e6:	2102      	movs	r1, #2
 80015e8:	e000      	b.n	80015ec <__cvt+0x44>
 80015ea:	2103      	movs	r1, #3
 80015ec:	ab03      	add	r3, sp, #12
 80015ee:	9301      	str	r3, [sp, #4]
 80015f0:	ab02      	add	r3, sp, #8
 80015f2:	9300      	str	r3, [sp, #0]
 80015f4:	ec45 4b10 	vmov	d0, r4, r5
 80015f8:	4653      	mov	r3, sl
 80015fa:	4632      	mov	r2, r6
 80015fc:	f000 ff18 	bl	8002430 <_dtoa_r>
 8001600:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 8001604:	4607      	mov	r7, r0
 8001606:	d102      	bne.n	800160e <__cvt+0x66>
 8001608:	f019 0f01 	tst.w	r9, #1
 800160c:	d022      	beq.n	8001654 <__cvt+0xac>
 800160e:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 8001612:	eb07 0906 	add.w	r9, r7, r6
 8001616:	d110      	bne.n	800163a <__cvt+0x92>
 8001618:	783b      	ldrb	r3, [r7, #0]
 800161a:	2b30      	cmp	r3, #48	; 0x30
 800161c:	d10a      	bne.n	8001634 <__cvt+0x8c>
 800161e:	2200      	movs	r2, #0
 8001620:	2300      	movs	r3, #0
 8001622:	4620      	mov	r0, r4
 8001624:	4629      	mov	r1, r5
 8001626:	f7ff fa57 	bl	8000ad8 <__aeabi_dcmpeq>
 800162a:	b918      	cbnz	r0, 8001634 <__cvt+0x8c>
 800162c:	f1c6 0601 	rsb	r6, r6, #1
 8001630:	f8ca 6000 	str.w	r6, [sl]
 8001634:	f8da 3000 	ldr.w	r3, [sl]
 8001638:	4499      	add	r9, r3
 800163a:	2200      	movs	r2, #0
 800163c:	2300      	movs	r3, #0
 800163e:	4620      	mov	r0, r4
 8001640:	4629      	mov	r1, r5
 8001642:	f7ff fa49 	bl	8000ad8 <__aeabi_dcmpeq>
 8001646:	b108      	cbz	r0, 800164c <__cvt+0xa4>
 8001648:	f8cd 900c 	str.w	r9, [sp, #12]
 800164c:	2230      	movs	r2, #48	; 0x30
 800164e:	9b03      	ldr	r3, [sp, #12]
 8001650:	454b      	cmp	r3, r9
 8001652:	d307      	bcc.n	8001664 <__cvt+0xbc>
 8001654:	9b03      	ldr	r3, [sp, #12]
 8001656:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8001658:	1bdb      	subs	r3, r3, r7
 800165a:	4638      	mov	r0, r7
 800165c:	6013      	str	r3, [r2, #0]
 800165e:	b004      	add	sp, #16
 8001660:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001664:	1c59      	adds	r1, r3, #1
 8001666:	9103      	str	r1, [sp, #12]
 8001668:	701a      	strb	r2, [r3, #0]
 800166a:	e7f0      	b.n	800164e <__cvt+0xa6>

0800166c <__exponent>:
 800166c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800166e:	4603      	mov	r3, r0
 8001670:	2900      	cmp	r1, #0
 8001672:	bfb8      	it	lt
 8001674:	4249      	neglt	r1, r1
 8001676:	f803 2b02 	strb.w	r2, [r3], #2
 800167a:	bfb4      	ite	lt
 800167c:	222d      	movlt	r2, #45	; 0x2d
 800167e:	222b      	movge	r2, #43	; 0x2b
 8001680:	2909      	cmp	r1, #9
 8001682:	7042      	strb	r2, [r0, #1]
 8001684:	dd2a      	ble.n	80016dc <__exponent+0x70>
 8001686:	f10d 0207 	add.w	r2, sp, #7
 800168a:	4617      	mov	r7, r2
 800168c:	260a      	movs	r6, #10
 800168e:	4694      	mov	ip, r2
 8001690:	fb91 f5f6 	sdiv	r5, r1, r6
 8001694:	fb06 1415 	mls	r4, r6, r5, r1
 8001698:	3430      	adds	r4, #48	; 0x30
 800169a:	f80c 4c01 	strb.w	r4, [ip, #-1]
 800169e:	460c      	mov	r4, r1
 80016a0:	2c63      	cmp	r4, #99	; 0x63
 80016a2:	f102 32ff 	add.w	r2, r2, #4294967295
 80016a6:	4629      	mov	r1, r5
 80016a8:	dcf1      	bgt.n	800168e <__exponent+0x22>
 80016aa:	3130      	adds	r1, #48	; 0x30
 80016ac:	f1ac 0402 	sub.w	r4, ip, #2
 80016b0:	f802 1c01 	strb.w	r1, [r2, #-1]
 80016b4:	1c41      	adds	r1, r0, #1
 80016b6:	4622      	mov	r2, r4
 80016b8:	42ba      	cmp	r2, r7
 80016ba:	d30a      	bcc.n	80016d2 <__exponent+0x66>
 80016bc:	f10d 0209 	add.w	r2, sp, #9
 80016c0:	eba2 020c 	sub.w	r2, r2, ip
 80016c4:	42bc      	cmp	r4, r7
 80016c6:	bf88      	it	hi
 80016c8:	2200      	movhi	r2, #0
 80016ca:	4413      	add	r3, r2
 80016cc:	1a18      	subs	r0, r3, r0
 80016ce:	b003      	add	sp, #12
 80016d0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80016d2:	f812 5b01 	ldrb.w	r5, [r2], #1
 80016d6:	f801 5f01 	strb.w	r5, [r1, #1]!
 80016da:	e7ed      	b.n	80016b8 <__exponent+0x4c>
 80016dc:	2330      	movs	r3, #48	; 0x30
 80016de:	3130      	adds	r1, #48	; 0x30
 80016e0:	7083      	strb	r3, [r0, #2]
 80016e2:	70c1      	strb	r1, [r0, #3]
 80016e4:	1d03      	adds	r3, r0, #4
 80016e6:	e7f1      	b.n	80016cc <__exponent+0x60>

080016e8 <_printf_float>:
 80016e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80016ec:	ed2d 8b02 	vpush	{d8}
 80016f0:	b08d      	sub	sp, #52	; 0x34
 80016f2:	460c      	mov	r4, r1
 80016f4:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 80016f8:	4616      	mov	r6, r2
 80016fa:	461f      	mov	r7, r3
 80016fc:	4605      	mov	r5, r0
 80016fe:	f000 fd5b 	bl	80021b8 <_localeconv_r>
 8001702:	f8d0 a000 	ldr.w	sl, [r0]
 8001706:	4650      	mov	r0, sl
 8001708:	f7fe fdba 	bl	8000280 <strlen>
 800170c:	2300      	movs	r3, #0
 800170e:	930a      	str	r3, [sp, #40]	; 0x28
 8001710:	6823      	ldr	r3, [r4, #0]
 8001712:	9305      	str	r3, [sp, #20]
 8001714:	f8d8 3000 	ldr.w	r3, [r8]
 8001718:	f894 b018 	ldrb.w	fp, [r4, #24]
 800171c:	3307      	adds	r3, #7
 800171e:	f023 0307 	bic.w	r3, r3, #7
 8001722:	f103 0208 	add.w	r2, r3, #8
 8001726:	f8c8 2000 	str.w	r2, [r8]
 800172a:	e9d3 8900 	ldrd	r8, r9, [r3]
 800172e:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 8001732:	9307      	str	r3, [sp, #28]
 8001734:	f8cd 8018 	str.w	r8, [sp, #24]
 8001738:	ee08 0a10 	vmov	s16, r0
 800173c:	e9c4 8912 	strd	r8, r9, [r4, #72]	; 0x48
 8001740:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8001744:	4b9e      	ldr	r3, [pc, #632]	; (80019c0 <_printf_float+0x2d8>)
 8001746:	f04f 32ff 	mov.w	r2, #4294967295
 800174a:	f7ff f9f7 	bl	8000b3c <__aeabi_dcmpun>
 800174e:	bb88      	cbnz	r0, 80017b4 <_printf_float+0xcc>
 8001750:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8001754:	4b9a      	ldr	r3, [pc, #616]	; (80019c0 <_printf_float+0x2d8>)
 8001756:	f04f 32ff 	mov.w	r2, #4294967295
 800175a:	f7ff f9d1 	bl	8000b00 <__aeabi_dcmple>
 800175e:	bb48      	cbnz	r0, 80017b4 <_printf_float+0xcc>
 8001760:	2200      	movs	r2, #0
 8001762:	2300      	movs	r3, #0
 8001764:	4640      	mov	r0, r8
 8001766:	4649      	mov	r1, r9
 8001768:	f7ff f9c0 	bl	8000aec <__aeabi_dcmplt>
 800176c:	b110      	cbz	r0, 8001774 <_printf_float+0x8c>
 800176e:	232d      	movs	r3, #45	; 0x2d
 8001770:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001774:	4a93      	ldr	r2, [pc, #588]	; (80019c4 <_printf_float+0x2dc>)
 8001776:	4b94      	ldr	r3, [pc, #592]	; (80019c8 <_printf_float+0x2e0>)
 8001778:	f1bb 0f47 	cmp.w	fp, #71	; 0x47
 800177c:	bf94      	ite	ls
 800177e:	4690      	movls	r8, r2
 8001780:	4698      	movhi	r8, r3
 8001782:	2303      	movs	r3, #3
 8001784:	6123      	str	r3, [r4, #16]
 8001786:	9b05      	ldr	r3, [sp, #20]
 8001788:	f023 0304 	bic.w	r3, r3, #4
 800178c:	6023      	str	r3, [r4, #0]
 800178e:	f04f 0900 	mov.w	r9, #0
 8001792:	9700      	str	r7, [sp, #0]
 8001794:	4633      	mov	r3, r6
 8001796:	aa0b      	add	r2, sp, #44	; 0x2c
 8001798:	4621      	mov	r1, r4
 800179a:	4628      	mov	r0, r5
 800179c:	f000 f9da 	bl	8001b54 <_printf_common>
 80017a0:	3001      	adds	r0, #1
 80017a2:	f040 8090 	bne.w	80018c6 <_printf_float+0x1de>
 80017a6:	f04f 30ff 	mov.w	r0, #4294967295
 80017aa:	b00d      	add	sp, #52	; 0x34
 80017ac:	ecbd 8b02 	vpop	{d8}
 80017b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80017b4:	4642      	mov	r2, r8
 80017b6:	464b      	mov	r3, r9
 80017b8:	4640      	mov	r0, r8
 80017ba:	4649      	mov	r1, r9
 80017bc:	f7ff f9be 	bl	8000b3c <__aeabi_dcmpun>
 80017c0:	b140      	cbz	r0, 80017d4 <_printf_float+0xec>
 80017c2:	464b      	mov	r3, r9
 80017c4:	2b00      	cmp	r3, #0
 80017c6:	bfbc      	itt	lt
 80017c8:	232d      	movlt	r3, #45	; 0x2d
 80017ca:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 80017ce:	4a7f      	ldr	r2, [pc, #508]	; (80019cc <_printf_float+0x2e4>)
 80017d0:	4b7f      	ldr	r3, [pc, #508]	; (80019d0 <_printf_float+0x2e8>)
 80017d2:	e7d1      	b.n	8001778 <_printf_float+0x90>
 80017d4:	6863      	ldr	r3, [r4, #4]
 80017d6:	f00b 02df 	and.w	r2, fp, #223	; 0xdf
 80017da:	9206      	str	r2, [sp, #24]
 80017dc:	1c5a      	adds	r2, r3, #1
 80017de:	d13f      	bne.n	8001860 <_printf_float+0x178>
 80017e0:	2306      	movs	r3, #6
 80017e2:	6063      	str	r3, [r4, #4]
 80017e4:	9b05      	ldr	r3, [sp, #20]
 80017e6:	6861      	ldr	r1, [r4, #4]
 80017e8:	f443 6280 	orr.w	r2, r3, #1024	; 0x400
 80017ec:	2300      	movs	r3, #0
 80017ee:	9303      	str	r3, [sp, #12]
 80017f0:	ab0a      	add	r3, sp, #40	; 0x28
 80017f2:	e9cd b301 	strd	fp, r3, [sp, #4]
 80017f6:	ab09      	add	r3, sp, #36	; 0x24
 80017f8:	ec49 8b10 	vmov	d0, r8, r9
 80017fc:	9300      	str	r3, [sp, #0]
 80017fe:	6022      	str	r2, [r4, #0]
 8001800:	f10d 0323 	add.w	r3, sp, #35	; 0x23
 8001804:	4628      	mov	r0, r5
 8001806:	f7ff fecf 	bl	80015a8 <__cvt>
 800180a:	9b06      	ldr	r3, [sp, #24]
 800180c:	9909      	ldr	r1, [sp, #36]	; 0x24
 800180e:	2b47      	cmp	r3, #71	; 0x47
 8001810:	4680      	mov	r8, r0
 8001812:	d108      	bne.n	8001826 <_printf_float+0x13e>
 8001814:	1cc8      	adds	r0, r1, #3
 8001816:	db02      	blt.n	800181e <_printf_float+0x136>
 8001818:	6863      	ldr	r3, [r4, #4]
 800181a:	4299      	cmp	r1, r3
 800181c:	dd41      	ble.n	80018a2 <_printf_float+0x1ba>
 800181e:	f1ab 0302 	sub.w	r3, fp, #2
 8001822:	fa5f fb83 	uxtb.w	fp, r3
 8001826:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 800182a:	d820      	bhi.n	800186e <_printf_float+0x186>
 800182c:	3901      	subs	r1, #1
 800182e:	465a      	mov	r2, fp
 8001830:	f104 0050 	add.w	r0, r4, #80	; 0x50
 8001834:	9109      	str	r1, [sp, #36]	; 0x24
 8001836:	f7ff ff19 	bl	800166c <__exponent>
 800183a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800183c:	1813      	adds	r3, r2, r0
 800183e:	2a01      	cmp	r2, #1
 8001840:	4681      	mov	r9, r0
 8001842:	6123      	str	r3, [r4, #16]
 8001844:	dc02      	bgt.n	800184c <_printf_float+0x164>
 8001846:	6822      	ldr	r2, [r4, #0]
 8001848:	07d2      	lsls	r2, r2, #31
 800184a:	d501      	bpl.n	8001850 <_printf_float+0x168>
 800184c:	3301      	adds	r3, #1
 800184e:	6123      	str	r3, [r4, #16]
 8001850:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
 8001854:	2b00      	cmp	r3, #0
 8001856:	d09c      	beq.n	8001792 <_printf_float+0xaa>
 8001858:	232d      	movs	r3, #45	; 0x2d
 800185a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800185e:	e798      	b.n	8001792 <_printf_float+0xaa>
 8001860:	9a06      	ldr	r2, [sp, #24]
 8001862:	2a47      	cmp	r2, #71	; 0x47
 8001864:	d1be      	bne.n	80017e4 <_printf_float+0xfc>
 8001866:	2b00      	cmp	r3, #0
 8001868:	d1bc      	bne.n	80017e4 <_printf_float+0xfc>
 800186a:	2301      	movs	r3, #1
 800186c:	e7b9      	b.n	80017e2 <_printf_float+0xfa>
 800186e:	f1bb 0f66 	cmp.w	fp, #102	; 0x66
 8001872:	d118      	bne.n	80018a6 <_printf_float+0x1be>
 8001874:	2900      	cmp	r1, #0
 8001876:	6863      	ldr	r3, [r4, #4]
 8001878:	dd0b      	ble.n	8001892 <_printf_float+0x1aa>
 800187a:	6121      	str	r1, [r4, #16]
 800187c:	b913      	cbnz	r3, 8001884 <_printf_float+0x19c>
 800187e:	6822      	ldr	r2, [r4, #0]
 8001880:	07d0      	lsls	r0, r2, #31
 8001882:	d502      	bpl.n	800188a <_printf_float+0x1a2>
 8001884:	3301      	adds	r3, #1
 8001886:	440b      	add	r3, r1
 8001888:	6123      	str	r3, [r4, #16]
 800188a:	65a1      	str	r1, [r4, #88]	; 0x58
 800188c:	f04f 0900 	mov.w	r9, #0
 8001890:	e7de      	b.n	8001850 <_printf_float+0x168>
 8001892:	b913      	cbnz	r3, 800189a <_printf_float+0x1b2>
 8001894:	6822      	ldr	r2, [r4, #0]
 8001896:	07d2      	lsls	r2, r2, #31
 8001898:	d501      	bpl.n	800189e <_printf_float+0x1b6>
 800189a:	3302      	adds	r3, #2
 800189c:	e7f4      	b.n	8001888 <_printf_float+0x1a0>
 800189e:	2301      	movs	r3, #1
 80018a0:	e7f2      	b.n	8001888 <_printf_float+0x1a0>
 80018a2:	f04f 0b67 	mov.w	fp, #103	; 0x67
 80018a6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80018a8:	4299      	cmp	r1, r3
 80018aa:	db05      	blt.n	80018b8 <_printf_float+0x1d0>
 80018ac:	6823      	ldr	r3, [r4, #0]
 80018ae:	6121      	str	r1, [r4, #16]
 80018b0:	07d8      	lsls	r0, r3, #31
 80018b2:	d5ea      	bpl.n	800188a <_printf_float+0x1a2>
 80018b4:	1c4b      	adds	r3, r1, #1
 80018b6:	e7e7      	b.n	8001888 <_printf_float+0x1a0>
 80018b8:	2900      	cmp	r1, #0
 80018ba:	bfd4      	ite	le
 80018bc:	f1c1 0202 	rsble	r2, r1, #2
 80018c0:	2201      	movgt	r2, #1
 80018c2:	4413      	add	r3, r2
 80018c4:	e7e0      	b.n	8001888 <_printf_float+0x1a0>
 80018c6:	6823      	ldr	r3, [r4, #0]
 80018c8:	055a      	lsls	r2, r3, #21
 80018ca:	d407      	bmi.n	80018dc <_printf_float+0x1f4>
 80018cc:	6923      	ldr	r3, [r4, #16]
 80018ce:	4642      	mov	r2, r8
 80018d0:	4631      	mov	r1, r6
 80018d2:	4628      	mov	r0, r5
 80018d4:	47b8      	blx	r7
 80018d6:	3001      	adds	r0, #1
 80018d8:	d12c      	bne.n	8001934 <_printf_float+0x24c>
 80018da:	e764      	b.n	80017a6 <_printf_float+0xbe>
 80018dc:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 80018e0:	f240 80e0 	bls.w	8001aa4 <_printf_float+0x3bc>
 80018e4:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 80018e8:	2200      	movs	r2, #0
 80018ea:	2300      	movs	r3, #0
 80018ec:	f7ff f8f4 	bl	8000ad8 <__aeabi_dcmpeq>
 80018f0:	2800      	cmp	r0, #0
 80018f2:	d034      	beq.n	800195e <_printf_float+0x276>
 80018f4:	4a37      	ldr	r2, [pc, #220]	; (80019d4 <_printf_float+0x2ec>)
 80018f6:	2301      	movs	r3, #1
 80018f8:	4631      	mov	r1, r6
 80018fa:	4628      	mov	r0, r5
 80018fc:	47b8      	blx	r7
 80018fe:	3001      	adds	r0, #1
 8001900:	f43f af51 	beq.w	80017a6 <_printf_float+0xbe>
 8001904:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8001908:	429a      	cmp	r2, r3
 800190a:	db02      	blt.n	8001912 <_printf_float+0x22a>
 800190c:	6823      	ldr	r3, [r4, #0]
 800190e:	07d8      	lsls	r0, r3, #31
 8001910:	d510      	bpl.n	8001934 <_printf_float+0x24c>
 8001912:	ee18 3a10 	vmov	r3, s16
 8001916:	4652      	mov	r2, sl
 8001918:	4631      	mov	r1, r6
 800191a:	4628      	mov	r0, r5
 800191c:	47b8      	blx	r7
 800191e:	3001      	adds	r0, #1
 8001920:	f43f af41 	beq.w	80017a6 <_printf_float+0xbe>
 8001924:	f04f 0800 	mov.w	r8, #0
 8001928:	f104 091a 	add.w	r9, r4, #26
 800192c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800192e:	3b01      	subs	r3, #1
 8001930:	4543      	cmp	r3, r8
 8001932:	dc09      	bgt.n	8001948 <_printf_float+0x260>
 8001934:	6823      	ldr	r3, [r4, #0]
 8001936:	079b      	lsls	r3, r3, #30
 8001938:	f100 8107 	bmi.w	8001b4a <_printf_float+0x462>
 800193c:	68e0      	ldr	r0, [r4, #12]
 800193e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8001940:	4298      	cmp	r0, r3
 8001942:	bfb8      	it	lt
 8001944:	4618      	movlt	r0, r3
 8001946:	e730      	b.n	80017aa <_printf_float+0xc2>
 8001948:	2301      	movs	r3, #1
 800194a:	464a      	mov	r2, r9
 800194c:	4631      	mov	r1, r6
 800194e:	4628      	mov	r0, r5
 8001950:	47b8      	blx	r7
 8001952:	3001      	adds	r0, #1
 8001954:	f43f af27 	beq.w	80017a6 <_printf_float+0xbe>
 8001958:	f108 0801 	add.w	r8, r8, #1
 800195c:	e7e6      	b.n	800192c <_printf_float+0x244>
 800195e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8001960:	2b00      	cmp	r3, #0
 8001962:	dc39      	bgt.n	80019d8 <_printf_float+0x2f0>
 8001964:	4a1b      	ldr	r2, [pc, #108]	; (80019d4 <_printf_float+0x2ec>)
 8001966:	2301      	movs	r3, #1
 8001968:	4631      	mov	r1, r6
 800196a:	4628      	mov	r0, r5
 800196c:	47b8      	blx	r7
 800196e:	3001      	adds	r0, #1
 8001970:	f43f af19 	beq.w	80017a6 <_printf_float+0xbe>
 8001974:	e9dd 3209 	ldrd	r3, r2, [sp, #36]	; 0x24
 8001978:	4313      	orrs	r3, r2
 800197a:	d102      	bne.n	8001982 <_printf_float+0x29a>
 800197c:	6823      	ldr	r3, [r4, #0]
 800197e:	07d9      	lsls	r1, r3, #31
 8001980:	d5d8      	bpl.n	8001934 <_printf_float+0x24c>
 8001982:	ee18 3a10 	vmov	r3, s16
 8001986:	4652      	mov	r2, sl
 8001988:	4631      	mov	r1, r6
 800198a:	4628      	mov	r0, r5
 800198c:	47b8      	blx	r7
 800198e:	3001      	adds	r0, #1
 8001990:	f43f af09 	beq.w	80017a6 <_printf_float+0xbe>
 8001994:	f04f 0900 	mov.w	r9, #0
 8001998:	f104 0a1a 	add.w	sl, r4, #26
 800199c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800199e:	425b      	negs	r3, r3
 80019a0:	454b      	cmp	r3, r9
 80019a2:	dc01      	bgt.n	80019a8 <_printf_float+0x2c0>
 80019a4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80019a6:	e792      	b.n	80018ce <_printf_float+0x1e6>
 80019a8:	2301      	movs	r3, #1
 80019aa:	4652      	mov	r2, sl
 80019ac:	4631      	mov	r1, r6
 80019ae:	4628      	mov	r0, r5
 80019b0:	47b8      	blx	r7
 80019b2:	3001      	adds	r0, #1
 80019b4:	f43f aef7 	beq.w	80017a6 <_printf_float+0xbe>
 80019b8:	f109 0901 	add.w	r9, r9, #1
 80019bc:	e7ee      	b.n	800199c <_printf_float+0x2b4>
 80019be:	bf00      	nop
 80019c0:	7fefffff 	.word	0x7fefffff
 80019c4:	08003f37 	.word	0x08003f37
 80019c8:	08003f3b 	.word	0x08003f3b
 80019cc:	08003f3f 	.word	0x08003f3f
 80019d0:	08003f43 	.word	0x08003f43
 80019d4:	08003f47 	.word	0x08003f47
 80019d8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80019da:	6da3      	ldr	r3, [r4, #88]	; 0x58
 80019dc:	429a      	cmp	r2, r3
 80019de:	bfa8      	it	ge
 80019e0:	461a      	movge	r2, r3
 80019e2:	2a00      	cmp	r2, #0
 80019e4:	4691      	mov	r9, r2
 80019e6:	dc37      	bgt.n	8001a58 <_printf_float+0x370>
 80019e8:	f04f 0b00 	mov.w	fp, #0
 80019ec:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 80019f0:	f104 021a 	add.w	r2, r4, #26
 80019f4:	6da3      	ldr	r3, [r4, #88]	; 0x58
 80019f6:	9305      	str	r3, [sp, #20]
 80019f8:	eba3 0309 	sub.w	r3, r3, r9
 80019fc:	455b      	cmp	r3, fp
 80019fe:	dc33      	bgt.n	8001a68 <_printf_float+0x380>
 8001a00:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8001a04:	429a      	cmp	r2, r3
 8001a06:	db3b      	blt.n	8001a80 <_printf_float+0x398>
 8001a08:	6823      	ldr	r3, [r4, #0]
 8001a0a:	07da      	lsls	r2, r3, #31
 8001a0c:	d438      	bmi.n	8001a80 <_printf_float+0x398>
 8001a0e:	e9dd 3209 	ldrd	r3, r2, [sp, #36]	; 0x24
 8001a12:	eba2 0903 	sub.w	r9, r2, r3
 8001a16:	9b05      	ldr	r3, [sp, #20]
 8001a18:	1ad2      	subs	r2, r2, r3
 8001a1a:	4591      	cmp	r9, r2
 8001a1c:	bfa8      	it	ge
 8001a1e:	4691      	movge	r9, r2
 8001a20:	f1b9 0f00 	cmp.w	r9, #0
 8001a24:	dc35      	bgt.n	8001a92 <_printf_float+0x3aa>
 8001a26:	f04f 0800 	mov.w	r8, #0
 8001a2a:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8001a2e:	f104 0a1a 	add.w	sl, r4, #26
 8001a32:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8001a36:	1a9b      	subs	r3, r3, r2
 8001a38:	eba3 0309 	sub.w	r3, r3, r9
 8001a3c:	4543      	cmp	r3, r8
 8001a3e:	f77f af79 	ble.w	8001934 <_printf_float+0x24c>
 8001a42:	2301      	movs	r3, #1
 8001a44:	4652      	mov	r2, sl
 8001a46:	4631      	mov	r1, r6
 8001a48:	4628      	mov	r0, r5
 8001a4a:	47b8      	blx	r7
 8001a4c:	3001      	adds	r0, #1
 8001a4e:	f43f aeaa 	beq.w	80017a6 <_printf_float+0xbe>
 8001a52:	f108 0801 	add.w	r8, r8, #1
 8001a56:	e7ec      	b.n	8001a32 <_printf_float+0x34a>
 8001a58:	4613      	mov	r3, r2
 8001a5a:	4631      	mov	r1, r6
 8001a5c:	4642      	mov	r2, r8
 8001a5e:	4628      	mov	r0, r5
 8001a60:	47b8      	blx	r7
 8001a62:	3001      	adds	r0, #1
 8001a64:	d1c0      	bne.n	80019e8 <_printf_float+0x300>
 8001a66:	e69e      	b.n	80017a6 <_printf_float+0xbe>
 8001a68:	2301      	movs	r3, #1
 8001a6a:	4631      	mov	r1, r6
 8001a6c:	4628      	mov	r0, r5
 8001a6e:	9205      	str	r2, [sp, #20]
 8001a70:	47b8      	blx	r7
 8001a72:	3001      	adds	r0, #1
 8001a74:	f43f ae97 	beq.w	80017a6 <_printf_float+0xbe>
 8001a78:	9a05      	ldr	r2, [sp, #20]
 8001a7a:	f10b 0b01 	add.w	fp, fp, #1
 8001a7e:	e7b9      	b.n	80019f4 <_printf_float+0x30c>
 8001a80:	ee18 3a10 	vmov	r3, s16
 8001a84:	4652      	mov	r2, sl
 8001a86:	4631      	mov	r1, r6
 8001a88:	4628      	mov	r0, r5
 8001a8a:	47b8      	blx	r7
 8001a8c:	3001      	adds	r0, #1
 8001a8e:	d1be      	bne.n	8001a0e <_printf_float+0x326>
 8001a90:	e689      	b.n	80017a6 <_printf_float+0xbe>
 8001a92:	9a05      	ldr	r2, [sp, #20]
 8001a94:	464b      	mov	r3, r9
 8001a96:	4442      	add	r2, r8
 8001a98:	4631      	mov	r1, r6
 8001a9a:	4628      	mov	r0, r5
 8001a9c:	47b8      	blx	r7
 8001a9e:	3001      	adds	r0, #1
 8001aa0:	d1c1      	bne.n	8001a26 <_printf_float+0x33e>
 8001aa2:	e680      	b.n	80017a6 <_printf_float+0xbe>
 8001aa4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8001aa6:	2a01      	cmp	r2, #1
 8001aa8:	dc01      	bgt.n	8001aae <_printf_float+0x3c6>
 8001aaa:	07db      	lsls	r3, r3, #31
 8001aac:	d53a      	bpl.n	8001b24 <_printf_float+0x43c>
 8001aae:	2301      	movs	r3, #1
 8001ab0:	4642      	mov	r2, r8
 8001ab2:	4631      	mov	r1, r6
 8001ab4:	4628      	mov	r0, r5
 8001ab6:	47b8      	blx	r7
 8001ab8:	3001      	adds	r0, #1
 8001aba:	f43f ae74 	beq.w	80017a6 <_printf_float+0xbe>
 8001abe:	ee18 3a10 	vmov	r3, s16
 8001ac2:	4652      	mov	r2, sl
 8001ac4:	4631      	mov	r1, r6
 8001ac6:	4628      	mov	r0, r5
 8001ac8:	47b8      	blx	r7
 8001aca:	3001      	adds	r0, #1
 8001acc:	f43f ae6b 	beq.w	80017a6 <_printf_float+0xbe>
 8001ad0:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8001ad4:	2200      	movs	r2, #0
 8001ad6:	2300      	movs	r3, #0
 8001ad8:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
 8001adc:	f7fe fffc 	bl	8000ad8 <__aeabi_dcmpeq>
 8001ae0:	b9d8      	cbnz	r0, 8001b1a <_printf_float+0x432>
 8001ae2:	f10a 33ff 	add.w	r3, sl, #4294967295
 8001ae6:	f108 0201 	add.w	r2, r8, #1
 8001aea:	4631      	mov	r1, r6
 8001aec:	4628      	mov	r0, r5
 8001aee:	47b8      	blx	r7
 8001af0:	3001      	adds	r0, #1
 8001af2:	d10e      	bne.n	8001b12 <_printf_float+0x42a>
 8001af4:	e657      	b.n	80017a6 <_printf_float+0xbe>
 8001af6:	2301      	movs	r3, #1
 8001af8:	4652      	mov	r2, sl
 8001afa:	4631      	mov	r1, r6
 8001afc:	4628      	mov	r0, r5
 8001afe:	47b8      	blx	r7
 8001b00:	3001      	adds	r0, #1
 8001b02:	f43f ae50 	beq.w	80017a6 <_printf_float+0xbe>
 8001b06:	f108 0801 	add.w	r8, r8, #1
 8001b0a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8001b0c:	3b01      	subs	r3, #1
 8001b0e:	4543      	cmp	r3, r8
 8001b10:	dcf1      	bgt.n	8001af6 <_printf_float+0x40e>
 8001b12:	464b      	mov	r3, r9
 8001b14:	f104 0250 	add.w	r2, r4, #80	; 0x50
 8001b18:	e6da      	b.n	80018d0 <_printf_float+0x1e8>
 8001b1a:	f04f 0800 	mov.w	r8, #0
 8001b1e:	f104 0a1a 	add.w	sl, r4, #26
 8001b22:	e7f2      	b.n	8001b0a <_printf_float+0x422>
 8001b24:	2301      	movs	r3, #1
 8001b26:	4642      	mov	r2, r8
 8001b28:	e7df      	b.n	8001aea <_printf_float+0x402>
 8001b2a:	2301      	movs	r3, #1
 8001b2c:	464a      	mov	r2, r9
 8001b2e:	4631      	mov	r1, r6
 8001b30:	4628      	mov	r0, r5
 8001b32:	47b8      	blx	r7
 8001b34:	3001      	adds	r0, #1
 8001b36:	f43f ae36 	beq.w	80017a6 <_printf_float+0xbe>
 8001b3a:	f108 0801 	add.w	r8, r8, #1
 8001b3e:	68e3      	ldr	r3, [r4, #12]
 8001b40:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8001b42:	1a5b      	subs	r3, r3, r1
 8001b44:	4543      	cmp	r3, r8
 8001b46:	dcf0      	bgt.n	8001b2a <_printf_float+0x442>
 8001b48:	e6f8      	b.n	800193c <_printf_float+0x254>
 8001b4a:	f04f 0800 	mov.w	r8, #0
 8001b4e:	f104 0919 	add.w	r9, r4, #25
 8001b52:	e7f4      	b.n	8001b3e <_printf_float+0x456>

08001b54 <_printf_common>:
 8001b54:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001b58:	4616      	mov	r6, r2
 8001b5a:	4699      	mov	r9, r3
 8001b5c:	688a      	ldr	r2, [r1, #8]
 8001b5e:	690b      	ldr	r3, [r1, #16]
 8001b60:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8001b64:	4293      	cmp	r3, r2
 8001b66:	bfb8      	it	lt
 8001b68:	4613      	movlt	r3, r2
 8001b6a:	6033      	str	r3, [r6, #0]
 8001b6c:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8001b70:	4607      	mov	r7, r0
 8001b72:	460c      	mov	r4, r1
 8001b74:	b10a      	cbz	r2, 8001b7a <_printf_common+0x26>
 8001b76:	3301      	adds	r3, #1
 8001b78:	6033      	str	r3, [r6, #0]
 8001b7a:	6823      	ldr	r3, [r4, #0]
 8001b7c:	0699      	lsls	r1, r3, #26
 8001b7e:	bf42      	ittt	mi
 8001b80:	6833      	ldrmi	r3, [r6, #0]
 8001b82:	3302      	addmi	r3, #2
 8001b84:	6033      	strmi	r3, [r6, #0]
 8001b86:	6825      	ldr	r5, [r4, #0]
 8001b88:	f015 0506 	ands.w	r5, r5, #6
 8001b8c:	d106      	bne.n	8001b9c <_printf_common+0x48>
 8001b8e:	f104 0a19 	add.w	sl, r4, #25
 8001b92:	68e3      	ldr	r3, [r4, #12]
 8001b94:	6832      	ldr	r2, [r6, #0]
 8001b96:	1a9b      	subs	r3, r3, r2
 8001b98:	42ab      	cmp	r3, r5
 8001b9a:	dc26      	bgt.n	8001bea <_printf_common+0x96>
 8001b9c:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8001ba0:	1e13      	subs	r3, r2, #0
 8001ba2:	6822      	ldr	r2, [r4, #0]
 8001ba4:	bf18      	it	ne
 8001ba6:	2301      	movne	r3, #1
 8001ba8:	0692      	lsls	r2, r2, #26
 8001baa:	d42b      	bmi.n	8001c04 <_printf_common+0xb0>
 8001bac:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8001bb0:	4649      	mov	r1, r9
 8001bb2:	4638      	mov	r0, r7
 8001bb4:	47c0      	blx	r8
 8001bb6:	3001      	adds	r0, #1
 8001bb8:	d01e      	beq.n	8001bf8 <_printf_common+0xa4>
 8001bba:	6823      	ldr	r3, [r4, #0]
 8001bbc:	6922      	ldr	r2, [r4, #16]
 8001bbe:	f003 0306 	and.w	r3, r3, #6
 8001bc2:	2b04      	cmp	r3, #4
 8001bc4:	bf02      	ittt	eq
 8001bc6:	68e5      	ldreq	r5, [r4, #12]
 8001bc8:	6833      	ldreq	r3, [r6, #0]
 8001bca:	1aed      	subeq	r5, r5, r3
 8001bcc:	68a3      	ldr	r3, [r4, #8]
 8001bce:	bf0c      	ite	eq
 8001bd0:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8001bd4:	2500      	movne	r5, #0
 8001bd6:	4293      	cmp	r3, r2
 8001bd8:	bfc4      	itt	gt
 8001bda:	1a9b      	subgt	r3, r3, r2
 8001bdc:	18ed      	addgt	r5, r5, r3
 8001bde:	2600      	movs	r6, #0
 8001be0:	341a      	adds	r4, #26
 8001be2:	42b5      	cmp	r5, r6
 8001be4:	d11a      	bne.n	8001c1c <_printf_common+0xc8>
 8001be6:	2000      	movs	r0, #0
 8001be8:	e008      	b.n	8001bfc <_printf_common+0xa8>
 8001bea:	2301      	movs	r3, #1
 8001bec:	4652      	mov	r2, sl
 8001bee:	4649      	mov	r1, r9
 8001bf0:	4638      	mov	r0, r7
 8001bf2:	47c0      	blx	r8
 8001bf4:	3001      	adds	r0, #1
 8001bf6:	d103      	bne.n	8001c00 <_printf_common+0xac>
 8001bf8:	f04f 30ff 	mov.w	r0, #4294967295
 8001bfc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001c00:	3501      	adds	r5, #1
 8001c02:	e7c6      	b.n	8001b92 <_printf_common+0x3e>
 8001c04:	18e1      	adds	r1, r4, r3
 8001c06:	1c5a      	adds	r2, r3, #1
 8001c08:	2030      	movs	r0, #48	; 0x30
 8001c0a:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8001c0e:	4422      	add	r2, r4
 8001c10:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8001c14:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8001c18:	3302      	adds	r3, #2
 8001c1a:	e7c7      	b.n	8001bac <_printf_common+0x58>
 8001c1c:	2301      	movs	r3, #1
 8001c1e:	4622      	mov	r2, r4
 8001c20:	4649      	mov	r1, r9
 8001c22:	4638      	mov	r0, r7
 8001c24:	47c0      	blx	r8
 8001c26:	3001      	adds	r0, #1
 8001c28:	d0e6      	beq.n	8001bf8 <_printf_common+0xa4>
 8001c2a:	3601      	adds	r6, #1
 8001c2c:	e7d9      	b.n	8001be2 <_printf_common+0x8e>
	...

08001c30 <_printf_i>:
 8001c30:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8001c34:	7e0f      	ldrb	r7, [r1, #24]
 8001c36:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8001c38:	2f78      	cmp	r7, #120	; 0x78
 8001c3a:	4691      	mov	r9, r2
 8001c3c:	4680      	mov	r8, r0
 8001c3e:	460c      	mov	r4, r1
 8001c40:	469a      	mov	sl, r3
 8001c42:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8001c46:	d807      	bhi.n	8001c58 <_printf_i+0x28>
 8001c48:	2f62      	cmp	r7, #98	; 0x62
 8001c4a:	d80a      	bhi.n	8001c62 <_printf_i+0x32>
 8001c4c:	2f00      	cmp	r7, #0
 8001c4e:	f000 80d4 	beq.w	8001dfa <_printf_i+0x1ca>
 8001c52:	2f58      	cmp	r7, #88	; 0x58
 8001c54:	f000 80c0 	beq.w	8001dd8 <_printf_i+0x1a8>
 8001c58:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001c5c:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8001c60:	e03a      	b.n	8001cd8 <_printf_i+0xa8>
 8001c62:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8001c66:	2b15      	cmp	r3, #21
 8001c68:	d8f6      	bhi.n	8001c58 <_printf_i+0x28>
 8001c6a:	a101      	add	r1, pc, #4	; (adr r1, 8001c70 <_printf_i+0x40>)
 8001c6c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8001c70:	08001cc9 	.word	0x08001cc9
 8001c74:	08001cdd 	.word	0x08001cdd
 8001c78:	08001c59 	.word	0x08001c59
 8001c7c:	08001c59 	.word	0x08001c59
 8001c80:	08001c59 	.word	0x08001c59
 8001c84:	08001c59 	.word	0x08001c59
 8001c88:	08001cdd 	.word	0x08001cdd
 8001c8c:	08001c59 	.word	0x08001c59
 8001c90:	08001c59 	.word	0x08001c59
 8001c94:	08001c59 	.word	0x08001c59
 8001c98:	08001c59 	.word	0x08001c59
 8001c9c:	08001de1 	.word	0x08001de1
 8001ca0:	08001d09 	.word	0x08001d09
 8001ca4:	08001d9b 	.word	0x08001d9b
 8001ca8:	08001c59 	.word	0x08001c59
 8001cac:	08001c59 	.word	0x08001c59
 8001cb0:	08001e03 	.word	0x08001e03
 8001cb4:	08001c59 	.word	0x08001c59
 8001cb8:	08001d09 	.word	0x08001d09
 8001cbc:	08001c59 	.word	0x08001c59
 8001cc0:	08001c59 	.word	0x08001c59
 8001cc4:	08001da3 	.word	0x08001da3
 8001cc8:	682b      	ldr	r3, [r5, #0]
 8001cca:	1d1a      	adds	r2, r3, #4
 8001ccc:	681b      	ldr	r3, [r3, #0]
 8001cce:	602a      	str	r2, [r5, #0]
 8001cd0:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001cd4:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8001cd8:	2301      	movs	r3, #1
 8001cda:	e09f      	b.n	8001e1c <_printf_i+0x1ec>
 8001cdc:	6820      	ldr	r0, [r4, #0]
 8001cde:	682b      	ldr	r3, [r5, #0]
 8001ce0:	0607      	lsls	r7, r0, #24
 8001ce2:	f103 0104 	add.w	r1, r3, #4
 8001ce6:	6029      	str	r1, [r5, #0]
 8001ce8:	d501      	bpl.n	8001cee <_printf_i+0xbe>
 8001cea:	681e      	ldr	r6, [r3, #0]
 8001cec:	e003      	b.n	8001cf6 <_printf_i+0xc6>
 8001cee:	0646      	lsls	r6, r0, #25
 8001cf0:	d5fb      	bpl.n	8001cea <_printf_i+0xba>
 8001cf2:	f9b3 6000 	ldrsh.w	r6, [r3]
 8001cf6:	2e00      	cmp	r6, #0
 8001cf8:	da03      	bge.n	8001d02 <_printf_i+0xd2>
 8001cfa:	232d      	movs	r3, #45	; 0x2d
 8001cfc:	4276      	negs	r6, r6
 8001cfe:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001d02:	485a      	ldr	r0, [pc, #360]	; (8001e6c <_printf_i+0x23c>)
 8001d04:	230a      	movs	r3, #10
 8001d06:	e012      	b.n	8001d2e <_printf_i+0xfe>
 8001d08:	682b      	ldr	r3, [r5, #0]
 8001d0a:	6820      	ldr	r0, [r4, #0]
 8001d0c:	1d19      	adds	r1, r3, #4
 8001d0e:	6029      	str	r1, [r5, #0]
 8001d10:	0605      	lsls	r5, r0, #24
 8001d12:	d501      	bpl.n	8001d18 <_printf_i+0xe8>
 8001d14:	681e      	ldr	r6, [r3, #0]
 8001d16:	e002      	b.n	8001d1e <_printf_i+0xee>
 8001d18:	0641      	lsls	r1, r0, #25
 8001d1a:	d5fb      	bpl.n	8001d14 <_printf_i+0xe4>
 8001d1c:	881e      	ldrh	r6, [r3, #0]
 8001d1e:	4853      	ldr	r0, [pc, #332]	; (8001e6c <_printf_i+0x23c>)
 8001d20:	2f6f      	cmp	r7, #111	; 0x6f
 8001d22:	bf0c      	ite	eq
 8001d24:	2308      	moveq	r3, #8
 8001d26:	230a      	movne	r3, #10
 8001d28:	2100      	movs	r1, #0
 8001d2a:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8001d2e:	6865      	ldr	r5, [r4, #4]
 8001d30:	60a5      	str	r5, [r4, #8]
 8001d32:	2d00      	cmp	r5, #0
 8001d34:	bfa2      	ittt	ge
 8001d36:	6821      	ldrge	r1, [r4, #0]
 8001d38:	f021 0104 	bicge.w	r1, r1, #4
 8001d3c:	6021      	strge	r1, [r4, #0]
 8001d3e:	b90e      	cbnz	r6, 8001d44 <_printf_i+0x114>
 8001d40:	2d00      	cmp	r5, #0
 8001d42:	d04b      	beq.n	8001ddc <_printf_i+0x1ac>
 8001d44:	4615      	mov	r5, r2
 8001d46:	fbb6 f1f3 	udiv	r1, r6, r3
 8001d4a:	fb03 6711 	mls	r7, r3, r1, r6
 8001d4e:	5dc7      	ldrb	r7, [r0, r7]
 8001d50:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8001d54:	4637      	mov	r7, r6
 8001d56:	42bb      	cmp	r3, r7
 8001d58:	460e      	mov	r6, r1
 8001d5a:	d9f4      	bls.n	8001d46 <_printf_i+0x116>
 8001d5c:	2b08      	cmp	r3, #8
 8001d5e:	d10b      	bne.n	8001d78 <_printf_i+0x148>
 8001d60:	6823      	ldr	r3, [r4, #0]
 8001d62:	07de      	lsls	r6, r3, #31
 8001d64:	d508      	bpl.n	8001d78 <_printf_i+0x148>
 8001d66:	6923      	ldr	r3, [r4, #16]
 8001d68:	6861      	ldr	r1, [r4, #4]
 8001d6a:	4299      	cmp	r1, r3
 8001d6c:	bfde      	ittt	le
 8001d6e:	2330      	movle	r3, #48	; 0x30
 8001d70:	f805 3c01 	strble.w	r3, [r5, #-1]
 8001d74:	f105 35ff 	addle.w	r5, r5, #4294967295
 8001d78:	1b52      	subs	r2, r2, r5
 8001d7a:	6122      	str	r2, [r4, #16]
 8001d7c:	f8cd a000 	str.w	sl, [sp]
 8001d80:	464b      	mov	r3, r9
 8001d82:	aa03      	add	r2, sp, #12
 8001d84:	4621      	mov	r1, r4
 8001d86:	4640      	mov	r0, r8
 8001d88:	f7ff fee4 	bl	8001b54 <_printf_common>
 8001d8c:	3001      	adds	r0, #1
 8001d8e:	d14a      	bne.n	8001e26 <_printf_i+0x1f6>
 8001d90:	f04f 30ff 	mov.w	r0, #4294967295
 8001d94:	b004      	add	sp, #16
 8001d96:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001d9a:	6823      	ldr	r3, [r4, #0]
 8001d9c:	f043 0320 	orr.w	r3, r3, #32
 8001da0:	6023      	str	r3, [r4, #0]
 8001da2:	4833      	ldr	r0, [pc, #204]	; (8001e70 <_printf_i+0x240>)
 8001da4:	2778      	movs	r7, #120	; 0x78
 8001da6:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8001daa:	6823      	ldr	r3, [r4, #0]
 8001dac:	6829      	ldr	r1, [r5, #0]
 8001dae:	061f      	lsls	r7, r3, #24
 8001db0:	f851 6b04 	ldr.w	r6, [r1], #4
 8001db4:	d402      	bmi.n	8001dbc <_printf_i+0x18c>
 8001db6:	065f      	lsls	r7, r3, #25
 8001db8:	bf48      	it	mi
 8001dba:	b2b6      	uxthmi	r6, r6
 8001dbc:	07df      	lsls	r7, r3, #31
 8001dbe:	bf48      	it	mi
 8001dc0:	f043 0320 	orrmi.w	r3, r3, #32
 8001dc4:	6029      	str	r1, [r5, #0]
 8001dc6:	bf48      	it	mi
 8001dc8:	6023      	strmi	r3, [r4, #0]
 8001dca:	b91e      	cbnz	r6, 8001dd4 <_printf_i+0x1a4>
 8001dcc:	6823      	ldr	r3, [r4, #0]
 8001dce:	f023 0320 	bic.w	r3, r3, #32
 8001dd2:	6023      	str	r3, [r4, #0]
 8001dd4:	2310      	movs	r3, #16
 8001dd6:	e7a7      	b.n	8001d28 <_printf_i+0xf8>
 8001dd8:	4824      	ldr	r0, [pc, #144]	; (8001e6c <_printf_i+0x23c>)
 8001dda:	e7e4      	b.n	8001da6 <_printf_i+0x176>
 8001ddc:	4615      	mov	r5, r2
 8001dde:	e7bd      	b.n	8001d5c <_printf_i+0x12c>
 8001de0:	682b      	ldr	r3, [r5, #0]
 8001de2:	6826      	ldr	r6, [r4, #0]
 8001de4:	6961      	ldr	r1, [r4, #20]
 8001de6:	1d18      	adds	r0, r3, #4
 8001de8:	6028      	str	r0, [r5, #0]
 8001dea:	0635      	lsls	r5, r6, #24
 8001dec:	681b      	ldr	r3, [r3, #0]
 8001dee:	d501      	bpl.n	8001df4 <_printf_i+0x1c4>
 8001df0:	6019      	str	r1, [r3, #0]
 8001df2:	e002      	b.n	8001dfa <_printf_i+0x1ca>
 8001df4:	0670      	lsls	r0, r6, #25
 8001df6:	d5fb      	bpl.n	8001df0 <_printf_i+0x1c0>
 8001df8:	8019      	strh	r1, [r3, #0]
 8001dfa:	2300      	movs	r3, #0
 8001dfc:	6123      	str	r3, [r4, #16]
 8001dfe:	4615      	mov	r5, r2
 8001e00:	e7bc      	b.n	8001d7c <_printf_i+0x14c>
 8001e02:	682b      	ldr	r3, [r5, #0]
 8001e04:	1d1a      	adds	r2, r3, #4
 8001e06:	602a      	str	r2, [r5, #0]
 8001e08:	681d      	ldr	r5, [r3, #0]
 8001e0a:	6862      	ldr	r2, [r4, #4]
 8001e0c:	2100      	movs	r1, #0
 8001e0e:	4628      	mov	r0, r5
 8001e10:	f7fe f9e6 	bl	80001e0 <memchr>
 8001e14:	b108      	cbz	r0, 8001e1a <_printf_i+0x1ea>
 8001e16:	1b40      	subs	r0, r0, r5
 8001e18:	6060      	str	r0, [r4, #4]
 8001e1a:	6863      	ldr	r3, [r4, #4]
 8001e1c:	6123      	str	r3, [r4, #16]
 8001e1e:	2300      	movs	r3, #0
 8001e20:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001e24:	e7aa      	b.n	8001d7c <_printf_i+0x14c>
 8001e26:	6923      	ldr	r3, [r4, #16]
 8001e28:	462a      	mov	r2, r5
 8001e2a:	4649      	mov	r1, r9
 8001e2c:	4640      	mov	r0, r8
 8001e2e:	47d0      	blx	sl
 8001e30:	3001      	adds	r0, #1
 8001e32:	d0ad      	beq.n	8001d90 <_printf_i+0x160>
 8001e34:	6823      	ldr	r3, [r4, #0]
 8001e36:	079b      	lsls	r3, r3, #30
 8001e38:	d413      	bmi.n	8001e62 <_printf_i+0x232>
 8001e3a:	68e0      	ldr	r0, [r4, #12]
 8001e3c:	9b03      	ldr	r3, [sp, #12]
 8001e3e:	4298      	cmp	r0, r3
 8001e40:	bfb8      	it	lt
 8001e42:	4618      	movlt	r0, r3
 8001e44:	e7a6      	b.n	8001d94 <_printf_i+0x164>
 8001e46:	2301      	movs	r3, #1
 8001e48:	4632      	mov	r2, r6
 8001e4a:	4649      	mov	r1, r9
 8001e4c:	4640      	mov	r0, r8
 8001e4e:	47d0      	blx	sl
 8001e50:	3001      	adds	r0, #1
 8001e52:	d09d      	beq.n	8001d90 <_printf_i+0x160>
 8001e54:	3501      	adds	r5, #1
 8001e56:	68e3      	ldr	r3, [r4, #12]
 8001e58:	9903      	ldr	r1, [sp, #12]
 8001e5a:	1a5b      	subs	r3, r3, r1
 8001e5c:	42ab      	cmp	r3, r5
 8001e5e:	dcf2      	bgt.n	8001e46 <_printf_i+0x216>
 8001e60:	e7eb      	b.n	8001e3a <_printf_i+0x20a>
 8001e62:	2500      	movs	r5, #0
 8001e64:	f104 0619 	add.w	r6, r4, #25
 8001e68:	e7f5      	b.n	8001e56 <_printf_i+0x226>
 8001e6a:	bf00      	nop
 8001e6c:	08003f49 	.word	0x08003f49
 8001e70:	08003f5a 	.word	0x08003f5a

08001e74 <std>:
 8001e74:	2300      	movs	r3, #0
 8001e76:	b510      	push	{r4, lr}
 8001e78:	4604      	mov	r4, r0
 8001e7a:	e9c0 3300 	strd	r3, r3, [r0]
 8001e7e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8001e82:	6083      	str	r3, [r0, #8]
 8001e84:	8181      	strh	r1, [r0, #12]
 8001e86:	6643      	str	r3, [r0, #100]	; 0x64
 8001e88:	81c2      	strh	r2, [r0, #14]
 8001e8a:	6183      	str	r3, [r0, #24]
 8001e8c:	4619      	mov	r1, r3
 8001e8e:	2208      	movs	r2, #8
 8001e90:	305c      	adds	r0, #92	; 0x5c
 8001e92:	f000 f989 	bl	80021a8 <memset>
 8001e96:	4b0d      	ldr	r3, [pc, #52]	; (8001ecc <std+0x58>)
 8001e98:	6263      	str	r3, [r4, #36]	; 0x24
 8001e9a:	4b0d      	ldr	r3, [pc, #52]	; (8001ed0 <std+0x5c>)
 8001e9c:	62a3      	str	r3, [r4, #40]	; 0x28
 8001e9e:	4b0d      	ldr	r3, [pc, #52]	; (8001ed4 <std+0x60>)
 8001ea0:	62e3      	str	r3, [r4, #44]	; 0x2c
 8001ea2:	4b0d      	ldr	r3, [pc, #52]	; (8001ed8 <std+0x64>)
 8001ea4:	6323      	str	r3, [r4, #48]	; 0x30
 8001ea6:	4b0d      	ldr	r3, [pc, #52]	; (8001edc <std+0x68>)
 8001ea8:	6224      	str	r4, [r4, #32]
 8001eaa:	429c      	cmp	r4, r3
 8001eac:	d006      	beq.n	8001ebc <std+0x48>
 8001eae:	f103 0268 	add.w	r2, r3, #104	; 0x68
 8001eb2:	4294      	cmp	r4, r2
 8001eb4:	d002      	beq.n	8001ebc <std+0x48>
 8001eb6:	33d0      	adds	r3, #208	; 0xd0
 8001eb8:	429c      	cmp	r4, r3
 8001eba:	d105      	bne.n	8001ec8 <std+0x54>
 8001ebc:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8001ec0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001ec4:	f000 b9fc 	b.w	80022c0 <__retarget_lock_init_recursive>
 8001ec8:	bd10      	pop	{r4, pc}
 8001eca:	bf00      	nop
 8001ecc:	08001ff9 	.word	0x08001ff9
 8001ed0:	0800201b 	.word	0x0800201b
 8001ed4:	08002053 	.word	0x08002053
 8001ed8:	08002077 	.word	0x08002077
 8001edc:	2000022c 	.word	0x2000022c

08001ee0 <stdio_exit_handler>:
 8001ee0:	4a02      	ldr	r2, [pc, #8]	; (8001eec <stdio_exit_handler+0xc>)
 8001ee2:	4903      	ldr	r1, [pc, #12]	; (8001ef0 <stdio_exit_handler+0x10>)
 8001ee4:	4803      	ldr	r0, [pc, #12]	; (8001ef4 <stdio_exit_handler+0x14>)
 8001ee6:	f000 b869 	b.w	8001fbc <_fwalk_sglue>
 8001eea:	bf00      	nop
 8001eec:	2000002c 	.word	0x2000002c
 8001ef0:	08003b39 	.word	0x08003b39
 8001ef4:	20000038 	.word	0x20000038

08001ef8 <cleanup_stdio>:
 8001ef8:	6841      	ldr	r1, [r0, #4]
 8001efa:	4b0c      	ldr	r3, [pc, #48]	; (8001f2c <cleanup_stdio+0x34>)
 8001efc:	4299      	cmp	r1, r3
 8001efe:	b510      	push	{r4, lr}
 8001f00:	4604      	mov	r4, r0
 8001f02:	d001      	beq.n	8001f08 <cleanup_stdio+0x10>
 8001f04:	f001 fe18 	bl	8003b38 <_fflush_r>
 8001f08:	68a1      	ldr	r1, [r4, #8]
 8001f0a:	4b09      	ldr	r3, [pc, #36]	; (8001f30 <cleanup_stdio+0x38>)
 8001f0c:	4299      	cmp	r1, r3
 8001f0e:	d002      	beq.n	8001f16 <cleanup_stdio+0x1e>
 8001f10:	4620      	mov	r0, r4
 8001f12:	f001 fe11 	bl	8003b38 <_fflush_r>
 8001f16:	68e1      	ldr	r1, [r4, #12]
 8001f18:	4b06      	ldr	r3, [pc, #24]	; (8001f34 <cleanup_stdio+0x3c>)
 8001f1a:	4299      	cmp	r1, r3
 8001f1c:	d004      	beq.n	8001f28 <cleanup_stdio+0x30>
 8001f1e:	4620      	mov	r0, r4
 8001f20:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001f24:	f001 be08 	b.w	8003b38 <_fflush_r>
 8001f28:	bd10      	pop	{r4, pc}
 8001f2a:	bf00      	nop
 8001f2c:	2000022c 	.word	0x2000022c
 8001f30:	20000294 	.word	0x20000294
 8001f34:	200002fc 	.word	0x200002fc

08001f38 <global_stdio_init.part.0>:
 8001f38:	b510      	push	{r4, lr}
 8001f3a:	4b0b      	ldr	r3, [pc, #44]	; (8001f68 <global_stdio_init.part.0+0x30>)
 8001f3c:	4c0b      	ldr	r4, [pc, #44]	; (8001f6c <global_stdio_init.part.0+0x34>)
 8001f3e:	4a0c      	ldr	r2, [pc, #48]	; (8001f70 <global_stdio_init.part.0+0x38>)
 8001f40:	601a      	str	r2, [r3, #0]
 8001f42:	4620      	mov	r0, r4
 8001f44:	2200      	movs	r2, #0
 8001f46:	2104      	movs	r1, #4
 8001f48:	f7ff ff94 	bl	8001e74 <std>
 8001f4c:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8001f50:	2201      	movs	r2, #1
 8001f52:	2109      	movs	r1, #9
 8001f54:	f7ff ff8e 	bl	8001e74 <std>
 8001f58:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 8001f5c:	2202      	movs	r2, #2
 8001f5e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001f62:	2112      	movs	r1, #18
 8001f64:	f7ff bf86 	b.w	8001e74 <std>
 8001f68:	20000364 	.word	0x20000364
 8001f6c:	2000022c 	.word	0x2000022c
 8001f70:	08001ee1 	.word	0x08001ee1

08001f74 <__sfp_lock_acquire>:
 8001f74:	4801      	ldr	r0, [pc, #4]	; (8001f7c <__sfp_lock_acquire+0x8>)
 8001f76:	f000 b9a4 	b.w	80022c2 <__retarget_lock_acquire_recursive>
 8001f7a:	bf00      	nop
 8001f7c:	2000036d 	.word	0x2000036d

08001f80 <__sfp_lock_release>:
 8001f80:	4801      	ldr	r0, [pc, #4]	; (8001f88 <__sfp_lock_release+0x8>)
 8001f82:	f000 b99f 	b.w	80022c4 <__retarget_lock_release_recursive>
 8001f86:	bf00      	nop
 8001f88:	2000036d 	.word	0x2000036d

08001f8c <__sinit>:
 8001f8c:	b510      	push	{r4, lr}
 8001f8e:	4604      	mov	r4, r0
 8001f90:	f7ff fff0 	bl	8001f74 <__sfp_lock_acquire>
 8001f94:	6a23      	ldr	r3, [r4, #32]
 8001f96:	b11b      	cbz	r3, 8001fa0 <__sinit+0x14>
 8001f98:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001f9c:	f7ff bff0 	b.w	8001f80 <__sfp_lock_release>
 8001fa0:	4b04      	ldr	r3, [pc, #16]	; (8001fb4 <__sinit+0x28>)
 8001fa2:	6223      	str	r3, [r4, #32]
 8001fa4:	4b04      	ldr	r3, [pc, #16]	; (8001fb8 <__sinit+0x2c>)
 8001fa6:	681b      	ldr	r3, [r3, #0]
 8001fa8:	2b00      	cmp	r3, #0
 8001faa:	d1f5      	bne.n	8001f98 <__sinit+0xc>
 8001fac:	f7ff ffc4 	bl	8001f38 <global_stdio_init.part.0>
 8001fb0:	e7f2      	b.n	8001f98 <__sinit+0xc>
 8001fb2:	bf00      	nop
 8001fb4:	08001ef9 	.word	0x08001ef9
 8001fb8:	20000364 	.word	0x20000364

08001fbc <_fwalk_sglue>:
 8001fbc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8001fc0:	4607      	mov	r7, r0
 8001fc2:	4688      	mov	r8, r1
 8001fc4:	4614      	mov	r4, r2
 8001fc6:	2600      	movs	r6, #0
 8001fc8:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8001fcc:	f1b9 0901 	subs.w	r9, r9, #1
 8001fd0:	d505      	bpl.n	8001fde <_fwalk_sglue+0x22>
 8001fd2:	6824      	ldr	r4, [r4, #0]
 8001fd4:	2c00      	cmp	r4, #0
 8001fd6:	d1f7      	bne.n	8001fc8 <_fwalk_sglue+0xc>
 8001fd8:	4630      	mov	r0, r6
 8001fda:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8001fde:	89ab      	ldrh	r3, [r5, #12]
 8001fe0:	2b01      	cmp	r3, #1
 8001fe2:	d907      	bls.n	8001ff4 <_fwalk_sglue+0x38>
 8001fe4:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8001fe8:	3301      	adds	r3, #1
 8001fea:	d003      	beq.n	8001ff4 <_fwalk_sglue+0x38>
 8001fec:	4629      	mov	r1, r5
 8001fee:	4638      	mov	r0, r7
 8001ff0:	47c0      	blx	r8
 8001ff2:	4306      	orrs	r6, r0
 8001ff4:	3568      	adds	r5, #104	; 0x68
 8001ff6:	e7e9      	b.n	8001fcc <_fwalk_sglue+0x10>

08001ff8 <__sread>:
 8001ff8:	b510      	push	{r4, lr}
 8001ffa:	460c      	mov	r4, r1
 8001ffc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002000:	f000 f900 	bl	8002204 <_read_r>
 8002004:	2800      	cmp	r0, #0
 8002006:	bfab      	itete	ge
 8002008:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800200a:	89a3      	ldrhlt	r3, [r4, #12]
 800200c:	181b      	addge	r3, r3, r0
 800200e:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8002012:	bfac      	ite	ge
 8002014:	6563      	strge	r3, [r4, #84]	; 0x54
 8002016:	81a3      	strhlt	r3, [r4, #12]
 8002018:	bd10      	pop	{r4, pc}

0800201a <__swrite>:
 800201a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800201e:	461f      	mov	r7, r3
 8002020:	898b      	ldrh	r3, [r1, #12]
 8002022:	05db      	lsls	r3, r3, #23
 8002024:	4605      	mov	r5, r0
 8002026:	460c      	mov	r4, r1
 8002028:	4616      	mov	r6, r2
 800202a:	d505      	bpl.n	8002038 <__swrite+0x1e>
 800202c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002030:	2302      	movs	r3, #2
 8002032:	2200      	movs	r2, #0
 8002034:	f000 f8d4 	bl	80021e0 <_lseek_r>
 8002038:	89a3      	ldrh	r3, [r4, #12]
 800203a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800203e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8002042:	81a3      	strh	r3, [r4, #12]
 8002044:	4632      	mov	r2, r6
 8002046:	463b      	mov	r3, r7
 8002048:	4628      	mov	r0, r5
 800204a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800204e:	f000 b8fb 	b.w	8002248 <_write_r>

08002052 <__sseek>:
 8002052:	b510      	push	{r4, lr}
 8002054:	460c      	mov	r4, r1
 8002056:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800205a:	f000 f8c1 	bl	80021e0 <_lseek_r>
 800205e:	1c43      	adds	r3, r0, #1
 8002060:	89a3      	ldrh	r3, [r4, #12]
 8002062:	bf15      	itete	ne
 8002064:	6560      	strne	r0, [r4, #84]	; 0x54
 8002066:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 800206a:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 800206e:	81a3      	strheq	r3, [r4, #12]
 8002070:	bf18      	it	ne
 8002072:	81a3      	strhne	r3, [r4, #12]
 8002074:	bd10      	pop	{r4, pc}

08002076 <__sclose>:
 8002076:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800207a:	f000 b8a1 	b.w	80021c0 <_close_r>

0800207e <__swbuf_r>:
 800207e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002080:	460e      	mov	r6, r1
 8002082:	4614      	mov	r4, r2
 8002084:	4605      	mov	r5, r0
 8002086:	b118      	cbz	r0, 8002090 <__swbuf_r+0x12>
 8002088:	6a03      	ldr	r3, [r0, #32]
 800208a:	b90b      	cbnz	r3, 8002090 <__swbuf_r+0x12>
 800208c:	f7ff ff7e 	bl	8001f8c <__sinit>
 8002090:	69a3      	ldr	r3, [r4, #24]
 8002092:	60a3      	str	r3, [r4, #8]
 8002094:	89a3      	ldrh	r3, [r4, #12]
 8002096:	071a      	lsls	r2, r3, #28
 8002098:	d525      	bpl.n	80020e6 <__swbuf_r+0x68>
 800209a:	6923      	ldr	r3, [r4, #16]
 800209c:	b31b      	cbz	r3, 80020e6 <__swbuf_r+0x68>
 800209e:	6823      	ldr	r3, [r4, #0]
 80020a0:	6922      	ldr	r2, [r4, #16]
 80020a2:	1a98      	subs	r0, r3, r2
 80020a4:	6963      	ldr	r3, [r4, #20]
 80020a6:	b2f6      	uxtb	r6, r6
 80020a8:	4283      	cmp	r3, r0
 80020aa:	4637      	mov	r7, r6
 80020ac:	dc04      	bgt.n	80020b8 <__swbuf_r+0x3a>
 80020ae:	4621      	mov	r1, r4
 80020b0:	4628      	mov	r0, r5
 80020b2:	f001 fd41 	bl	8003b38 <_fflush_r>
 80020b6:	b9e0      	cbnz	r0, 80020f2 <__swbuf_r+0x74>
 80020b8:	68a3      	ldr	r3, [r4, #8]
 80020ba:	3b01      	subs	r3, #1
 80020bc:	60a3      	str	r3, [r4, #8]
 80020be:	6823      	ldr	r3, [r4, #0]
 80020c0:	1c5a      	adds	r2, r3, #1
 80020c2:	6022      	str	r2, [r4, #0]
 80020c4:	701e      	strb	r6, [r3, #0]
 80020c6:	6962      	ldr	r2, [r4, #20]
 80020c8:	1c43      	adds	r3, r0, #1
 80020ca:	429a      	cmp	r2, r3
 80020cc:	d004      	beq.n	80020d8 <__swbuf_r+0x5a>
 80020ce:	89a3      	ldrh	r3, [r4, #12]
 80020d0:	07db      	lsls	r3, r3, #31
 80020d2:	d506      	bpl.n	80020e2 <__swbuf_r+0x64>
 80020d4:	2e0a      	cmp	r6, #10
 80020d6:	d104      	bne.n	80020e2 <__swbuf_r+0x64>
 80020d8:	4621      	mov	r1, r4
 80020da:	4628      	mov	r0, r5
 80020dc:	f001 fd2c 	bl	8003b38 <_fflush_r>
 80020e0:	b938      	cbnz	r0, 80020f2 <__swbuf_r+0x74>
 80020e2:	4638      	mov	r0, r7
 80020e4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80020e6:	4621      	mov	r1, r4
 80020e8:	4628      	mov	r0, r5
 80020ea:	f000 f805 	bl	80020f8 <__swsetup_r>
 80020ee:	2800      	cmp	r0, #0
 80020f0:	d0d5      	beq.n	800209e <__swbuf_r+0x20>
 80020f2:	f04f 37ff 	mov.w	r7, #4294967295
 80020f6:	e7f4      	b.n	80020e2 <__swbuf_r+0x64>

080020f8 <__swsetup_r>:
 80020f8:	b538      	push	{r3, r4, r5, lr}
 80020fa:	4b2a      	ldr	r3, [pc, #168]	; (80021a4 <__swsetup_r+0xac>)
 80020fc:	4605      	mov	r5, r0
 80020fe:	6818      	ldr	r0, [r3, #0]
 8002100:	460c      	mov	r4, r1
 8002102:	b118      	cbz	r0, 800210c <__swsetup_r+0x14>
 8002104:	6a03      	ldr	r3, [r0, #32]
 8002106:	b90b      	cbnz	r3, 800210c <__swsetup_r+0x14>
 8002108:	f7ff ff40 	bl	8001f8c <__sinit>
 800210c:	89a3      	ldrh	r3, [r4, #12]
 800210e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8002112:	0718      	lsls	r0, r3, #28
 8002114:	d422      	bmi.n	800215c <__swsetup_r+0x64>
 8002116:	06d9      	lsls	r1, r3, #27
 8002118:	d407      	bmi.n	800212a <__swsetup_r+0x32>
 800211a:	2309      	movs	r3, #9
 800211c:	602b      	str	r3, [r5, #0]
 800211e:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8002122:	81a3      	strh	r3, [r4, #12]
 8002124:	f04f 30ff 	mov.w	r0, #4294967295
 8002128:	e034      	b.n	8002194 <__swsetup_r+0x9c>
 800212a:	0758      	lsls	r0, r3, #29
 800212c:	d512      	bpl.n	8002154 <__swsetup_r+0x5c>
 800212e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8002130:	b141      	cbz	r1, 8002144 <__swsetup_r+0x4c>
 8002132:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8002136:	4299      	cmp	r1, r3
 8002138:	d002      	beq.n	8002140 <__swsetup_r+0x48>
 800213a:	4628      	mov	r0, r5
 800213c:	f000 ff6a 	bl	8003014 <_free_r>
 8002140:	2300      	movs	r3, #0
 8002142:	6363      	str	r3, [r4, #52]	; 0x34
 8002144:	89a3      	ldrh	r3, [r4, #12]
 8002146:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800214a:	81a3      	strh	r3, [r4, #12]
 800214c:	2300      	movs	r3, #0
 800214e:	6063      	str	r3, [r4, #4]
 8002150:	6923      	ldr	r3, [r4, #16]
 8002152:	6023      	str	r3, [r4, #0]
 8002154:	89a3      	ldrh	r3, [r4, #12]
 8002156:	f043 0308 	orr.w	r3, r3, #8
 800215a:	81a3      	strh	r3, [r4, #12]
 800215c:	6923      	ldr	r3, [r4, #16]
 800215e:	b94b      	cbnz	r3, 8002174 <__swsetup_r+0x7c>
 8002160:	89a3      	ldrh	r3, [r4, #12]
 8002162:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8002166:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800216a:	d003      	beq.n	8002174 <__swsetup_r+0x7c>
 800216c:	4621      	mov	r1, r4
 800216e:	4628      	mov	r0, r5
 8002170:	f001 fd42 	bl	8003bf8 <__smakebuf_r>
 8002174:	89a0      	ldrh	r0, [r4, #12]
 8002176:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800217a:	f010 0301 	ands.w	r3, r0, #1
 800217e:	d00a      	beq.n	8002196 <__swsetup_r+0x9e>
 8002180:	2300      	movs	r3, #0
 8002182:	60a3      	str	r3, [r4, #8]
 8002184:	6963      	ldr	r3, [r4, #20]
 8002186:	425b      	negs	r3, r3
 8002188:	61a3      	str	r3, [r4, #24]
 800218a:	6923      	ldr	r3, [r4, #16]
 800218c:	b943      	cbnz	r3, 80021a0 <__swsetup_r+0xa8>
 800218e:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8002192:	d1c4      	bne.n	800211e <__swsetup_r+0x26>
 8002194:	bd38      	pop	{r3, r4, r5, pc}
 8002196:	0781      	lsls	r1, r0, #30
 8002198:	bf58      	it	pl
 800219a:	6963      	ldrpl	r3, [r4, #20]
 800219c:	60a3      	str	r3, [r4, #8]
 800219e:	e7f4      	b.n	800218a <__swsetup_r+0x92>
 80021a0:	2000      	movs	r0, #0
 80021a2:	e7f7      	b.n	8002194 <__swsetup_r+0x9c>
 80021a4:	20000084 	.word	0x20000084

080021a8 <memset>:
 80021a8:	4402      	add	r2, r0
 80021aa:	4603      	mov	r3, r0
 80021ac:	4293      	cmp	r3, r2
 80021ae:	d100      	bne.n	80021b2 <memset+0xa>
 80021b0:	4770      	bx	lr
 80021b2:	f803 1b01 	strb.w	r1, [r3], #1
 80021b6:	e7f9      	b.n	80021ac <memset+0x4>

080021b8 <_localeconv_r>:
 80021b8:	4800      	ldr	r0, [pc, #0]	; (80021bc <_localeconv_r+0x4>)
 80021ba:	4770      	bx	lr
 80021bc:	20000178 	.word	0x20000178

080021c0 <_close_r>:
 80021c0:	b538      	push	{r3, r4, r5, lr}
 80021c2:	4d06      	ldr	r5, [pc, #24]	; (80021dc <_close_r+0x1c>)
 80021c4:	2300      	movs	r3, #0
 80021c6:	4604      	mov	r4, r0
 80021c8:	4608      	mov	r0, r1
 80021ca:	602b      	str	r3, [r5, #0]
 80021cc:	f7ff f891 	bl	80012f2 <_close>
 80021d0:	1c43      	adds	r3, r0, #1
 80021d2:	d102      	bne.n	80021da <_close_r+0x1a>
 80021d4:	682b      	ldr	r3, [r5, #0]
 80021d6:	b103      	cbz	r3, 80021da <_close_r+0x1a>
 80021d8:	6023      	str	r3, [r4, #0]
 80021da:	bd38      	pop	{r3, r4, r5, pc}
 80021dc:	20000368 	.word	0x20000368

080021e0 <_lseek_r>:
 80021e0:	b538      	push	{r3, r4, r5, lr}
 80021e2:	4d07      	ldr	r5, [pc, #28]	; (8002200 <_lseek_r+0x20>)
 80021e4:	4604      	mov	r4, r0
 80021e6:	4608      	mov	r0, r1
 80021e8:	4611      	mov	r1, r2
 80021ea:	2200      	movs	r2, #0
 80021ec:	602a      	str	r2, [r5, #0]
 80021ee:	461a      	mov	r2, r3
 80021f0:	f7ff f8a6 	bl	8001340 <_lseek>
 80021f4:	1c43      	adds	r3, r0, #1
 80021f6:	d102      	bne.n	80021fe <_lseek_r+0x1e>
 80021f8:	682b      	ldr	r3, [r5, #0]
 80021fa:	b103      	cbz	r3, 80021fe <_lseek_r+0x1e>
 80021fc:	6023      	str	r3, [r4, #0]
 80021fe:	bd38      	pop	{r3, r4, r5, pc}
 8002200:	20000368 	.word	0x20000368

08002204 <_read_r>:
 8002204:	b538      	push	{r3, r4, r5, lr}
 8002206:	4d07      	ldr	r5, [pc, #28]	; (8002224 <_read_r+0x20>)
 8002208:	4604      	mov	r4, r0
 800220a:	4608      	mov	r0, r1
 800220c:	4611      	mov	r1, r2
 800220e:	2200      	movs	r2, #0
 8002210:	602a      	str	r2, [r5, #0]
 8002212:	461a      	mov	r2, r3
 8002214:	f7ff f834 	bl	8001280 <_read>
 8002218:	1c43      	adds	r3, r0, #1
 800221a:	d102      	bne.n	8002222 <_read_r+0x1e>
 800221c:	682b      	ldr	r3, [r5, #0]
 800221e:	b103      	cbz	r3, 8002222 <_read_r+0x1e>
 8002220:	6023      	str	r3, [r4, #0]
 8002222:	bd38      	pop	{r3, r4, r5, pc}
 8002224:	20000368 	.word	0x20000368

08002228 <_sbrk_r>:
 8002228:	b538      	push	{r3, r4, r5, lr}
 800222a:	4d06      	ldr	r5, [pc, #24]	; (8002244 <_sbrk_r+0x1c>)
 800222c:	2300      	movs	r3, #0
 800222e:	4604      	mov	r4, r0
 8002230:	4608      	mov	r0, r1
 8002232:	602b      	str	r3, [r5, #0]
 8002234:	f7ff f892 	bl	800135c <_sbrk>
 8002238:	1c43      	adds	r3, r0, #1
 800223a:	d102      	bne.n	8002242 <_sbrk_r+0x1a>
 800223c:	682b      	ldr	r3, [r5, #0]
 800223e:	b103      	cbz	r3, 8002242 <_sbrk_r+0x1a>
 8002240:	6023      	str	r3, [r4, #0]
 8002242:	bd38      	pop	{r3, r4, r5, pc}
 8002244:	20000368 	.word	0x20000368

08002248 <_write_r>:
 8002248:	b538      	push	{r3, r4, r5, lr}
 800224a:	4d07      	ldr	r5, [pc, #28]	; (8002268 <_write_r+0x20>)
 800224c:	4604      	mov	r4, r0
 800224e:	4608      	mov	r0, r1
 8002250:	4611      	mov	r1, r2
 8002252:	2200      	movs	r2, #0
 8002254:	602a      	str	r2, [r5, #0]
 8002256:	461a      	mov	r2, r3
 8002258:	f7ff f82f 	bl	80012ba <_write>
 800225c:	1c43      	adds	r3, r0, #1
 800225e:	d102      	bne.n	8002266 <_write_r+0x1e>
 8002260:	682b      	ldr	r3, [r5, #0]
 8002262:	b103      	cbz	r3, 8002266 <_write_r+0x1e>
 8002264:	6023      	str	r3, [r4, #0]
 8002266:	bd38      	pop	{r3, r4, r5, pc}
 8002268:	20000368 	.word	0x20000368

0800226c <__errno>:
 800226c:	4b01      	ldr	r3, [pc, #4]	; (8002274 <__errno+0x8>)
 800226e:	6818      	ldr	r0, [r3, #0]
 8002270:	4770      	bx	lr
 8002272:	bf00      	nop
 8002274:	20000084 	.word	0x20000084

08002278 <__libc_init_array>:
 8002278:	b570      	push	{r4, r5, r6, lr}
 800227a:	4d0d      	ldr	r5, [pc, #52]	; (80022b0 <__libc_init_array+0x38>)
 800227c:	4c0d      	ldr	r4, [pc, #52]	; (80022b4 <__libc_init_array+0x3c>)
 800227e:	1b64      	subs	r4, r4, r5
 8002280:	10a4      	asrs	r4, r4, #2
 8002282:	2600      	movs	r6, #0
 8002284:	42a6      	cmp	r6, r4
 8002286:	d109      	bne.n	800229c <__libc_init_array+0x24>
 8002288:	4d0b      	ldr	r5, [pc, #44]	; (80022b8 <__libc_init_array+0x40>)
 800228a:	4c0c      	ldr	r4, [pc, #48]	; (80022bc <__libc_init_array+0x44>)
 800228c:	f001 fd92 	bl	8003db4 <_init>
 8002290:	1b64      	subs	r4, r4, r5
 8002292:	10a4      	asrs	r4, r4, #2
 8002294:	2600      	movs	r6, #0
 8002296:	42a6      	cmp	r6, r4
 8002298:	d105      	bne.n	80022a6 <__libc_init_array+0x2e>
 800229a:	bd70      	pop	{r4, r5, r6, pc}
 800229c:	f855 3b04 	ldr.w	r3, [r5], #4
 80022a0:	4798      	blx	r3
 80022a2:	3601      	adds	r6, #1
 80022a4:	e7ee      	b.n	8002284 <__libc_init_array+0xc>
 80022a6:	f855 3b04 	ldr.w	r3, [r5], #4
 80022aa:	4798      	blx	r3
 80022ac:	3601      	adds	r6, #1
 80022ae:	e7f2      	b.n	8002296 <__libc_init_array+0x1e>
 80022b0:	080041a8 	.word	0x080041a8
 80022b4:	080041a8 	.word	0x080041a8
 80022b8:	080041a8 	.word	0x080041a8
 80022bc:	080041ac 	.word	0x080041ac

080022c0 <__retarget_lock_init_recursive>:
 80022c0:	4770      	bx	lr

080022c2 <__retarget_lock_acquire_recursive>:
 80022c2:	4770      	bx	lr

080022c4 <__retarget_lock_release_recursive>:
 80022c4:	4770      	bx	lr

080022c6 <memcpy>:
 80022c6:	440a      	add	r2, r1
 80022c8:	4291      	cmp	r1, r2
 80022ca:	f100 33ff 	add.w	r3, r0, #4294967295
 80022ce:	d100      	bne.n	80022d2 <memcpy+0xc>
 80022d0:	4770      	bx	lr
 80022d2:	b510      	push	{r4, lr}
 80022d4:	f811 4b01 	ldrb.w	r4, [r1], #1
 80022d8:	f803 4f01 	strb.w	r4, [r3, #1]!
 80022dc:	4291      	cmp	r1, r2
 80022de:	d1f9      	bne.n	80022d4 <memcpy+0xe>
 80022e0:	bd10      	pop	{r4, pc}
	...

080022e4 <__assert_func>:
 80022e4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80022e6:	4614      	mov	r4, r2
 80022e8:	461a      	mov	r2, r3
 80022ea:	4b09      	ldr	r3, [pc, #36]	; (8002310 <__assert_func+0x2c>)
 80022ec:	681b      	ldr	r3, [r3, #0]
 80022ee:	4605      	mov	r5, r0
 80022f0:	68d8      	ldr	r0, [r3, #12]
 80022f2:	b14c      	cbz	r4, 8002308 <__assert_func+0x24>
 80022f4:	4b07      	ldr	r3, [pc, #28]	; (8002314 <__assert_func+0x30>)
 80022f6:	9100      	str	r1, [sp, #0]
 80022f8:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80022fc:	4906      	ldr	r1, [pc, #24]	; (8002318 <__assert_func+0x34>)
 80022fe:	462b      	mov	r3, r5
 8002300:	f001 fc42 	bl	8003b88 <fiprintf>
 8002304:	f001 fcd6 	bl	8003cb4 <abort>
 8002308:	4b04      	ldr	r3, [pc, #16]	; (800231c <__assert_func+0x38>)
 800230a:	461c      	mov	r4, r3
 800230c:	e7f3      	b.n	80022f6 <__assert_func+0x12>
 800230e:	bf00      	nop
 8002310:	20000084 	.word	0x20000084
 8002314:	08003f6b 	.word	0x08003f6b
 8002318:	08003f78 	.word	0x08003f78
 800231c:	08003fa6 	.word	0x08003fa6

08002320 <quorem>:
 8002320:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002324:	6903      	ldr	r3, [r0, #16]
 8002326:	690c      	ldr	r4, [r1, #16]
 8002328:	42a3      	cmp	r3, r4
 800232a:	4607      	mov	r7, r0
 800232c:	db7e      	blt.n	800242c <quorem+0x10c>
 800232e:	3c01      	subs	r4, #1
 8002330:	f101 0814 	add.w	r8, r1, #20
 8002334:	f100 0514 	add.w	r5, r0, #20
 8002338:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800233c:	9301      	str	r3, [sp, #4]
 800233e:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 8002342:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8002346:	3301      	adds	r3, #1
 8002348:	429a      	cmp	r2, r3
 800234a:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 800234e:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 8002352:	fbb2 f6f3 	udiv	r6, r2, r3
 8002356:	d331      	bcc.n	80023bc <quorem+0x9c>
 8002358:	f04f 0e00 	mov.w	lr, #0
 800235c:	4640      	mov	r0, r8
 800235e:	46ac      	mov	ip, r5
 8002360:	46f2      	mov	sl, lr
 8002362:	f850 2b04 	ldr.w	r2, [r0], #4
 8002366:	b293      	uxth	r3, r2
 8002368:	fb06 e303 	mla	r3, r6, r3, lr
 800236c:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 8002370:	0c1a      	lsrs	r2, r3, #16
 8002372:	b29b      	uxth	r3, r3
 8002374:	ebaa 0303 	sub.w	r3, sl, r3
 8002378:	f8dc a000 	ldr.w	sl, [ip]
 800237c:	fa13 f38a 	uxtah	r3, r3, sl
 8002380:	fb06 220e 	mla	r2, r6, lr, r2
 8002384:	9300      	str	r3, [sp, #0]
 8002386:	9b00      	ldr	r3, [sp, #0]
 8002388:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 800238c:	b292      	uxth	r2, r2
 800238e:	ebc2 421a 	rsb	r2, r2, sl, lsr #16
 8002392:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8002396:	f8bd 3000 	ldrh.w	r3, [sp]
 800239a:	4581      	cmp	r9, r0
 800239c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80023a0:	f84c 3b04 	str.w	r3, [ip], #4
 80023a4:	ea4f 4a22 	mov.w	sl, r2, asr #16
 80023a8:	d2db      	bcs.n	8002362 <quorem+0x42>
 80023aa:	f855 300b 	ldr.w	r3, [r5, fp]
 80023ae:	b92b      	cbnz	r3, 80023bc <quorem+0x9c>
 80023b0:	9b01      	ldr	r3, [sp, #4]
 80023b2:	3b04      	subs	r3, #4
 80023b4:	429d      	cmp	r5, r3
 80023b6:	461a      	mov	r2, r3
 80023b8:	d32c      	bcc.n	8002414 <quorem+0xf4>
 80023ba:	613c      	str	r4, [r7, #16]
 80023bc:	4638      	mov	r0, r7
 80023be:	f001 f8f1 	bl	80035a4 <__mcmp>
 80023c2:	2800      	cmp	r0, #0
 80023c4:	db22      	blt.n	800240c <quorem+0xec>
 80023c6:	3601      	adds	r6, #1
 80023c8:	4629      	mov	r1, r5
 80023ca:	2000      	movs	r0, #0
 80023cc:	f858 2b04 	ldr.w	r2, [r8], #4
 80023d0:	f8d1 c000 	ldr.w	ip, [r1]
 80023d4:	b293      	uxth	r3, r2
 80023d6:	1ac3      	subs	r3, r0, r3
 80023d8:	0c12      	lsrs	r2, r2, #16
 80023da:	fa13 f38c 	uxtah	r3, r3, ip
 80023de:	ebc2 421c 	rsb	r2, r2, ip, lsr #16
 80023e2:	eb02 4223 	add.w	r2, r2, r3, asr #16
 80023e6:	b29b      	uxth	r3, r3
 80023e8:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80023ec:	45c1      	cmp	r9, r8
 80023ee:	f841 3b04 	str.w	r3, [r1], #4
 80023f2:	ea4f 4022 	mov.w	r0, r2, asr #16
 80023f6:	d2e9      	bcs.n	80023cc <quorem+0xac>
 80023f8:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 80023fc:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8002400:	b922      	cbnz	r2, 800240c <quorem+0xec>
 8002402:	3b04      	subs	r3, #4
 8002404:	429d      	cmp	r5, r3
 8002406:	461a      	mov	r2, r3
 8002408:	d30a      	bcc.n	8002420 <quorem+0x100>
 800240a:	613c      	str	r4, [r7, #16]
 800240c:	4630      	mov	r0, r6
 800240e:	b003      	add	sp, #12
 8002410:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002414:	6812      	ldr	r2, [r2, #0]
 8002416:	3b04      	subs	r3, #4
 8002418:	2a00      	cmp	r2, #0
 800241a:	d1ce      	bne.n	80023ba <quorem+0x9a>
 800241c:	3c01      	subs	r4, #1
 800241e:	e7c9      	b.n	80023b4 <quorem+0x94>
 8002420:	6812      	ldr	r2, [r2, #0]
 8002422:	3b04      	subs	r3, #4
 8002424:	2a00      	cmp	r2, #0
 8002426:	d1f0      	bne.n	800240a <quorem+0xea>
 8002428:	3c01      	subs	r4, #1
 800242a:	e7eb      	b.n	8002404 <quorem+0xe4>
 800242c:	2000      	movs	r0, #0
 800242e:	e7ee      	b.n	800240e <quorem+0xee>

08002430 <_dtoa_r>:
 8002430:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002434:	ed2d 8b04 	vpush	{d8-d9}
 8002438:	69c5      	ldr	r5, [r0, #28]
 800243a:	b093      	sub	sp, #76	; 0x4c
 800243c:	ed8d 0b02 	vstr	d0, [sp, #8]
 8002440:	ec57 6b10 	vmov	r6, r7, d0
 8002444:	f8dd 8080 	ldr.w	r8, [sp, #128]	; 0x80
 8002448:	9107      	str	r1, [sp, #28]
 800244a:	4604      	mov	r4, r0
 800244c:	920a      	str	r2, [sp, #40]	; 0x28
 800244e:	930d      	str	r3, [sp, #52]	; 0x34
 8002450:	b975      	cbnz	r5, 8002470 <_dtoa_r+0x40>
 8002452:	2010      	movs	r0, #16
 8002454:	f7fe fff4 	bl	8001440 <malloc>
 8002458:	4602      	mov	r2, r0
 800245a:	61e0      	str	r0, [r4, #28]
 800245c:	b920      	cbnz	r0, 8002468 <_dtoa_r+0x38>
 800245e:	4bae      	ldr	r3, [pc, #696]	; (8002718 <_dtoa_r+0x2e8>)
 8002460:	21ef      	movs	r1, #239	; 0xef
 8002462:	48ae      	ldr	r0, [pc, #696]	; (800271c <_dtoa_r+0x2ec>)
 8002464:	f7ff ff3e 	bl	80022e4 <__assert_func>
 8002468:	e9c0 5501 	strd	r5, r5, [r0, #4]
 800246c:	6005      	str	r5, [r0, #0]
 800246e:	60c5      	str	r5, [r0, #12]
 8002470:	69e3      	ldr	r3, [r4, #28]
 8002472:	6819      	ldr	r1, [r3, #0]
 8002474:	b151      	cbz	r1, 800248c <_dtoa_r+0x5c>
 8002476:	685a      	ldr	r2, [r3, #4]
 8002478:	604a      	str	r2, [r1, #4]
 800247a:	2301      	movs	r3, #1
 800247c:	4093      	lsls	r3, r2
 800247e:	608b      	str	r3, [r1, #8]
 8002480:	4620      	mov	r0, r4
 8002482:	f000 fe53 	bl	800312c <_Bfree>
 8002486:	69e3      	ldr	r3, [r4, #28]
 8002488:	2200      	movs	r2, #0
 800248a:	601a      	str	r2, [r3, #0]
 800248c:	1e3b      	subs	r3, r7, #0
 800248e:	bfbb      	ittet	lt
 8002490:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
 8002494:	9303      	strlt	r3, [sp, #12]
 8002496:	2300      	movge	r3, #0
 8002498:	2201      	movlt	r2, #1
 800249a:	bfac      	ite	ge
 800249c:	f8c8 3000 	strge.w	r3, [r8]
 80024a0:	f8c8 2000 	strlt.w	r2, [r8]
 80024a4:	4b9e      	ldr	r3, [pc, #632]	; (8002720 <_dtoa_r+0x2f0>)
 80024a6:	f8dd 800c 	ldr.w	r8, [sp, #12]
 80024aa:	ea33 0308 	bics.w	r3, r3, r8
 80024ae:	d11b      	bne.n	80024e8 <_dtoa_r+0xb8>
 80024b0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80024b2:	f242 730f 	movw	r3, #9999	; 0x270f
 80024b6:	6013      	str	r3, [r2, #0]
 80024b8:	f3c8 0313 	ubfx	r3, r8, #0, #20
 80024bc:	4333      	orrs	r3, r6
 80024be:	f000 8593 	beq.w	8002fe8 <_dtoa_r+0xbb8>
 80024c2:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80024c4:	b963      	cbnz	r3, 80024e0 <_dtoa_r+0xb0>
 80024c6:	4b97      	ldr	r3, [pc, #604]	; (8002724 <_dtoa_r+0x2f4>)
 80024c8:	e027      	b.n	800251a <_dtoa_r+0xea>
 80024ca:	4b97      	ldr	r3, [pc, #604]	; (8002728 <_dtoa_r+0x2f8>)
 80024cc:	9300      	str	r3, [sp, #0]
 80024ce:	3308      	adds	r3, #8
 80024d0:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80024d2:	6013      	str	r3, [r2, #0]
 80024d4:	9800      	ldr	r0, [sp, #0]
 80024d6:	b013      	add	sp, #76	; 0x4c
 80024d8:	ecbd 8b04 	vpop	{d8-d9}
 80024dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80024e0:	4b90      	ldr	r3, [pc, #576]	; (8002724 <_dtoa_r+0x2f4>)
 80024e2:	9300      	str	r3, [sp, #0]
 80024e4:	3303      	adds	r3, #3
 80024e6:	e7f3      	b.n	80024d0 <_dtoa_r+0xa0>
 80024e8:	ed9d 7b02 	vldr	d7, [sp, #8]
 80024ec:	2200      	movs	r2, #0
 80024ee:	ec51 0b17 	vmov	r0, r1, d7
 80024f2:	eeb0 8a47 	vmov.f32	s16, s14
 80024f6:	eef0 8a67 	vmov.f32	s17, s15
 80024fa:	2300      	movs	r3, #0
 80024fc:	f7fe faec 	bl	8000ad8 <__aeabi_dcmpeq>
 8002500:	4681      	mov	r9, r0
 8002502:	b160      	cbz	r0, 800251e <_dtoa_r+0xee>
 8002504:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8002506:	2301      	movs	r3, #1
 8002508:	6013      	str	r3, [r2, #0]
 800250a:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800250c:	2b00      	cmp	r3, #0
 800250e:	f000 8568 	beq.w	8002fe2 <_dtoa_r+0xbb2>
 8002512:	4b86      	ldr	r3, [pc, #536]	; (800272c <_dtoa_r+0x2fc>)
 8002514:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8002516:	6013      	str	r3, [r2, #0]
 8002518:	3b01      	subs	r3, #1
 800251a:	9300      	str	r3, [sp, #0]
 800251c:	e7da      	b.n	80024d4 <_dtoa_r+0xa4>
 800251e:	aa10      	add	r2, sp, #64	; 0x40
 8002520:	a911      	add	r1, sp, #68	; 0x44
 8002522:	4620      	mov	r0, r4
 8002524:	eeb0 0a48 	vmov.f32	s0, s16
 8002528:	eef0 0a68 	vmov.f32	s1, s17
 800252c:	f001 f8e0 	bl	80036f0 <__d2b>
 8002530:	f3c8 550a 	ubfx	r5, r8, #20, #11
 8002534:	4682      	mov	sl, r0
 8002536:	2d00      	cmp	r5, #0
 8002538:	d07f      	beq.n	800263a <_dtoa_r+0x20a>
 800253a:	ee18 3a90 	vmov	r3, s17
 800253e:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002542:	f043 537f 	orr.w	r3, r3, #1069547520	; 0x3fc00000
 8002546:	ec51 0b18 	vmov	r0, r1, d8
 800254a:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
 800254e:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 8002552:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 8002556:	4619      	mov	r1, r3
 8002558:	2200      	movs	r2, #0
 800255a:	4b75      	ldr	r3, [pc, #468]	; (8002730 <_dtoa_r+0x300>)
 800255c:	f7fd fe9c 	bl	8000298 <__aeabi_dsub>
 8002560:	a367      	add	r3, pc, #412	; (adr r3, 8002700 <_dtoa_r+0x2d0>)
 8002562:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002566:	f7fe f84f 	bl	8000608 <__aeabi_dmul>
 800256a:	a367      	add	r3, pc, #412	; (adr r3, 8002708 <_dtoa_r+0x2d8>)
 800256c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002570:	f7fd fe94 	bl	800029c <__adddf3>
 8002574:	4606      	mov	r6, r0
 8002576:	4628      	mov	r0, r5
 8002578:	460f      	mov	r7, r1
 800257a:	f7fd ffdb 	bl	8000534 <__aeabi_i2d>
 800257e:	a364      	add	r3, pc, #400	; (adr r3, 8002710 <_dtoa_r+0x2e0>)
 8002580:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002584:	f7fe f840 	bl	8000608 <__aeabi_dmul>
 8002588:	4602      	mov	r2, r0
 800258a:	460b      	mov	r3, r1
 800258c:	4630      	mov	r0, r6
 800258e:	4639      	mov	r1, r7
 8002590:	f7fd fe84 	bl	800029c <__adddf3>
 8002594:	4606      	mov	r6, r0
 8002596:	460f      	mov	r7, r1
 8002598:	f7fe fae6 	bl	8000b68 <__aeabi_d2iz>
 800259c:	2200      	movs	r2, #0
 800259e:	4683      	mov	fp, r0
 80025a0:	2300      	movs	r3, #0
 80025a2:	4630      	mov	r0, r6
 80025a4:	4639      	mov	r1, r7
 80025a6:	f7fe faa1 	bl	8000aec <__aeabi_dcmplt>
 80025aa:	b148      	cbz	r0, 80025c0 <_dtoa_r+0x190>
 80025ac:	4658      	mov	r0, fp
 80025ae:	f7fd ffc1 	bl	8000534 <__aeabi_i2d>
 80025b2:	4632      	mov	r2, r6
 80025b4:	463b      	mov	r3, r7
 80025b6:	f7fe fa8f 	bl	8000ad8 <__aeabi_dcmpeq>
 80025ba:	b908      	cbnz	r0, 80025c0 <_dtoa_r+0x190>
 80025bc:	f10b 3bff 	add.w	fp, fp, #4294967295
 80025c0:	f1bb 0f16 	cmp.w	fp, #22
 80025c4:	d857      	bhi.n	8002676 <_dtoa_r+0x246>
 80025c6:	4b5b      	ldr	r3, [pc, #364]	; (8002734 <_dtoa_r+0x304>)
 80025c8:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 80025cc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80025d0:	ec51 0b18 	vmov	r0, r1, d8
 80025d4:	f7fe fa8a 	bl	8000aec <__aeabi_dcmplt>
 80025d8:	2800      	cmp	r0, #0
 80025da:	d04e      	beq.n	800267a <_dtoa_r+0x24a>
 80025dc:	f10b 3bff 	add.w	fp, fp, #4294967295
 80025e0:	2300      	movs	r3, #0
 80025e2:	930c      	str	r3, [sp, #48]	; 0x30
 80025e4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80025e6:	1b5b      	subs	r3, r3, r5
 80025e8:	1e5a      	subs	r2, r3, #1
 80025ea:	bf45      	ittet	mi
 80025ec:	f1c3 0301 	rsbmi	r3, r3, #1
 80025f0:	9305      	strmi	r3, [sp, #20]
 80025f2:	2300      	movpl	r3, #0
 80025f4:	2300      	movmi	r3, #0
 80025f6:	9206      	str	r2, [sp, #24]
 80025f8:	bf54      	ite	pl
 80025fa:	9305      	strpl	r3, [sp, #20]
 80025fc:	9306      	strmi	r3, [sp, #24]
 80025fe:	f1bb 0f00 	cmp.w	fp, #0
 8002602:	db3c      	blt.n	800267e <_dtoa_r+0x24e>
 8002604:	9b06      	ldr	r3, [sp, #24]
 8002606:	f8cd b02c 	str.w	fp, [sp, #44]	; 0x2c
 800260a:	445b      	add	r3, fp
 800260c:	9306      	str	r3, [sp, #24]
 800260e:	2300      	movs	r3, #0
 8002610:	9308      	str	r3, [sp, #32]
 8002612:	9b07      	ldr	r3, [sp, #28]
 8002614:	2b09      	cmp	r3, #9
 8002616:	d868      	bhi.n	80026ea <_dtoa_r+0x2ba>
 8002618:	2b05      	cmp	r3, #5
 800261a:	bfc4      	itt	gt
 800261c:	3b04      	subgt	r3, #4
 800261e:	9307      	strgt	r3, [sp, #28]
 8002620:	9b07      	ldr	r3, [sp, #28]
 8002622:	f1a3 0302 	sub.w	r3, r3, #2
 8002626:	bfcc      	ite	gt
 8002628:	2500      	movgt	r5, #0
 800262a:	2501      	movle	r5, #1
 800262c:	2b03      	cmp	r3, #3
 800262e:	f200 8085 	bhi.w	800273c <_dtoa_r+0x30c>
 8002632:	e8df f003 	tbb	[pc, r3]
 8002636:	3b2e      	.short	0x3b2e
 8002638:	5839      	.short	0x5839
 800263a:	e9dd 5310 	ldrd	r5, r3, [sp, #64]	; 0x40
 800263e:	441d      	add	r5, r3
 8002640:	f205 4332 	addw	r3, r5, #1074	; 0x432
 8002644:	2b20      	cmp	r3, #32
 8002646:	bfc1      	itttt	gt
 8002648:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 800264c:	fa08 f803 	lslgt.w	r8, r8, r3
 8002650:	f205 4312 	addwgt	r3, r5, #1042	; 0x412
 8002654:	fa26 f303 	lsrgt.w	r3, r6, r3
 8002658:	bfd6      	itet	le
 800265a:	f1c3 0320 	rsble	r3, r3, #32
 800265e:	ea48 0003 	orrgt.w	r0, r8, r3
 8002662:	fa06 f003 	lslle.w	r0, r6, r3
 8002666:	f7fd ff55 	bl	8000514 <__aeabi_ui2d>
 800266a:	2201      	movs	r2, #1
 800266c:	f1a1 73f8 	sub.w	r3, r1, #32505856	; 0x1f00000
 8002670:	3d01      	subs	r5, #1
 8002672:	920e      	str	r2, [sp, #56]	; 0x38
 8002674:	e76f      	b.n	8002556 <_dtoa_r+0x126>
 8002676:	2301      	movs	r3, #1
 8002678:	e7b3      	b.n	80025e2 <_dtoa_r+0x1b2>
 800267a:	900c      	str	r0, [sp, #48]	; 0x30
 800267c:	e7b2      	b.n	80025e4 <_dtoa_r+0x1b4>
 800267e:	9b05      	ldr	r3, [sp, #20]
 8002680:	eba3 030b 	sub.w	r3, r3, fp
 8002684:	9305      	str	r3, [sp, #20]
 8002686:	f1cb 0300 	rsb	r3, fp, #0
 800268a:	9308      	str	r3, [sp, #32]
 800268c:	2300      	movs	r3, #0
 800268e:	930b      	str	r3, [sp, #44]	; 0x2c
 8002690:	e7bf      	b.n	8002612 <_dtoa_r+0x1e2>
 8002692:	2300      	movs	r3, #0
 8002694:	9309      	str	r3, [sp, #36]	; 0x24
 8002696:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002698:	2b00      	cmp	r3, #0
 800269a:	dc52      	bgt.n	8002742 <_dtoa_r+0x312>
 800269c:	2301      	movs	r3, #1
 800269e:	9301      	str	r3, [sp, #4]
 80026a0:	9304      	str	r3, [sp, #16]
 80026a2:	461a      	mov	r2, r3
 80026a4:	920a      	str	r2, [sp, #40]	; 0x28
 80026a6:	e00b      	b.n	80026c0 <_dtoa_r+0x290>
 80026a8:	2301      	movs	r3, #1
 80026aa:	e7f3      	b.n	8002694 <_dtoa_r+0x264>
 80026ac:	2300      	movs	r3, #0
 80026ae:	9309      	str	r3, [sp, #36]	; 0x24
 80026b0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80026b2:	445b      	add	r3, fp
 80026b4:	9301      	str	r3, [sp, #4]
 80026b6:	3301      	adds	r3, #1
 80026b8:	2b01      	cmp	r3, #1
 80026ba:	9304      	str	r3, [sp, #16]
 80026bc:	bfb8      	it	lt
 80026be:	2301      	movlt	r3, #1
 80026c0:	69e0      	ldr	r0, [r4, #28]
 80026c2:	2100      	movs	r1, #0
 80026c4:	2204      	movs	r2, #4
 80026c6:	f102 0614 	add.w	r6, r2, #20
 80026ca:	429e      	cmp	r6, r3
 80026cc:	d93d      	bls.n	800274a <_dtoa_r+0x31a>
 80026ce:	6041      	str	r1, [r0, #4]
 80026d0:	4620      	mov	r0, r4
 80026d2:	f000 fceb 	bl	80030ac <_Balloc>
 80026d6:	9000      	str	r0, [sp, #0]
 80026d8:	2800      	cmp	r0, #0
 80026da:	d139      	bne.n	8002750 <_dtoa_r+0x320>
 80026dc:	4b16      	ldr	r3, [pc, #88]	; (8002738 <_dtoa_r+0x308>)
 80026de:	4602      	mov	r2, r0
 80026e0:	f240 11af 	movw	r1, #431	; 0x1af
 80026e4:	e6bd      	b.n	8002462 <_dtoa_r+0x32>
 80026e6:	2301      	movs	r3, #1
 80026e8:	e7e1      	b.n	80026ae <_dtoa_r+0x27e>
 80026ea:	2501      	movs	r5, #1
 80026ec:	2300      	movs	r3, #0
 80026ee:	9307      	str	r3, [sp, #28]
 80026f0:	9509      	str	r5, [sp, #36]	; 0x24
 80026f2:	f04f 33ff 	mov.w	r3, #4294967295
 80026f6:	9301      	str	r3, [sp, #4]
 80026f8:	9304      	str	r3, [sp, #16]
 80026fa:	2200      	movs	r2, #0
 80026fc:	2312      	movs	r3, #18
 80026fe:	e7d1      	b.n	80026a4 <_dtoa_r+0x274>
 8002700:	636f4361 	.word	0x636f4361
 8002704:	3fd287a7 	.word	0x3fd287a7
 8002708:	8b60c8b3 	.word	0x8b60c8b3
 800270c:	3fc68a28 	.word	0x3fc68a28
 8002710:	509f79fb 	.word	0x509f79fb
 8002714:	3fd34413 	.word	0x3fd34413
 8002718:	08003fb4 	.word	0x08003fb4
 800271c:	08003fcb 	.word	0x08003fcb
 8002720:	7ff00000 	.word	0x7ff00000
 8002724:	08003fb0 	.word	0x08003fb0
 8002728:	08003fa7 	.word	0x08003fa7
 800272c:	08003f48 	.word	0x08003f48
 8002730:	3ff80000 	.word	0x3ff80000
 8002734:	080040b8 	.word	0x080040b8
 8002738:	08004023 	.word	0x08004023
 800273c:	2301      	movs	r3, #1
 800273e:	9309      	str	r3, [sp, #36]	; 0x24
 8002740:	e7d7      	b.n	80026f2 <_dtoa_r+0x2c2>
 8002742:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002744:	9301      	str	r3, [sp, #4]
 8002746:	9304      	str	r3, [sp, #16]
 8002748:	e7ba      	b.n	80026c0 <_dtoa_r+0x290>
 800274a:	3101      	adds	r1, #1
 800274c:	0052      	lsls	r2, r2, #1
 800274e:	e7ba      	b.n	80026c6 <_dtoa_r+0x296>
 8002750:	69e3      	ldr	r3, [r4, #28]
 8002752:	9a00      	ldr	r2, [sp, #0]
 8002754:	601a      	str	r2, [r3, #0]
 8002756:	9b04      	ldr	r3, [sp, #16]
 8002758:	2b0e      	cmp	r3, #14
 800275a:	f200 80a8 	bhi.w	80028ae <_dtoa_r+0x47e>
 800275e:	2d00      	cmp	r5, #0
 8002760:	f000 80a5 	beq.w	80028ae <_dtoa_r+0x47e>
 8002764:	f1bb 0f00 	cmp.w	fp, #0
 8002768:	dd38      	ble.n	80027dc <_dtoa_r+0x3ac>
 800276a:	4bc0      	ldr	r3, [pc, #768]	; (8002a6c <_dtoa_r+0x63c>)
 800276c:	f00b 020f 	and.w	r2, fp, #15
 8002770:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8002774:	f41b 7f80 	tst.w	fp, #256	; 0x100
 8002778:	e9d3 6700 	ldrd	r6, r7, [r3]
 800277c:	ea4f 182b 	mov.w	r8, fp, asr #4
 8002780:	d019      	beq.n	80027b6 <_dtoa_r+0x386>
 8002782:	4bbb      	ldr	r3, [pc, #748]	; (8002a70 <_dtoa_r+0x640>)
 8002784:	ec51 0b18 	vmov	r0, r1, d8
 8002788:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 800278c:	f7fe f866 	bl	800085c <__aeabi_ddiv>
 8002790:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002794:	f008 080f 	and.w	r8, r8, #15
 8002798:	2503      	movs	r5, #3
 800279a:	f8df 92d4 	ldr.w	r9, [pc, #724]	; 8002a70 <_dtoa_r+0x640>
 800279e:	f1b8 0f00 	cmp.w	r8, #0
 80027a2:	d10a      	bne.n	80027ba <_dtoa_r+0x38a>
 80027a4:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80027a8:	4632      	mov	r2, r6
 80027aa:	463b      	mov	r3, r7
 80027ac:	f7fe f856 	bl	800085c <__aeabi_ddiv>
 80027b0:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80027b4:	e02b      	b.n	800280e <_dtoa_r+0x3de>
 80027b6:	2502      	movs	r5, #2
 80027b8:	e7ef      	b.n	800279a <_dtoa_r+0x36a>
 80027ba:	f018 0f01 	tst.w	r8, #1
 80027be:	d008      	beq.n	80027d2 <_dtoa_r+0x3a2>
 80027c0:	4630      	mov	r0, r6
 80027c2:	4639      	mov	r1, r7
 80027c4:	e9d9 2300 	ldrd	r2, r3, [r9]
 80027c8:	f7fd ff1e 	bl	8000608 <__aeabi_dmul>
 80027cc:	3501      	adds	r5, #1
 80027ce:	4606      	mov	r6, r0
 80027d0:	460f      	mov	r7, r1
 80027d2:	ea4f 0868 	mov.w	r8, r8, asr #1
 80027d6:	f109 0908 	add.w	r9, r9, #8
 80027da:	e7e0      	b.n	800279e <_dtoa_r+0x36e>
 80027dc:	f000 809f 	beq.w	800291e <_dtoa_r+0x4ee>
 80027e0:	f1cb 0600 	rsb	r6, fp, #0
 80027e4:	4ba1      	ldr	r3, [pc, #644]	; (8002a6c <_dtoa_r+0x63c>)
 80027e6:	4fa2      	ldr	r7, [pc, #648]	; (8002a70 <_dtoa_r+0x640>)
 80027e8:	f006 020f 	and.w	r2, r6, #15
 80027ec:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80027f0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80027f4:	ec51 0b18 	vmov	r0, r1, d8
 80027f8:	f7fd ff06 	bl	8000608 <__aeabi_dmul>
 80027fc:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002800:	1136      	asrs	r6, r6, #4
 8002802:	2300      	movs	r3, #0
 8002804:	2502      	movs	r5, #2
 8002806:	2e00      	cmp	r6, #0
 8002808:	d17e      	bne.n	8002908 <_dtoa_r+0x4d8>
 800280a:	2b00      	cmp	r3, #0
 800280c:	d1d0      	bne.n	80027b0 <_dtoa_r+0x380>
 800280e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8002810:	e9dd 8902 	ldrd	r8, r9, [sp, #8]
 8002814:	2b00      	cmp	r3, #0
 8002816:	f000 8084 	beq.w	8002922 <_dtoa_r+0x4f2>
 800281a:	4b96      	ldr	r3, [pc, #600]	; (8002a74 <_dtoa_r+0x644>)
 800281c:	2200      	movs	r2, #0
 800281e:	4640      	mov	r0, r8
 8002820:	4649      	mov	r1, r9
 8002822:	f7fe f963 	bl	8000aec <__aeabi_dcmplt>
 8002826:	2800      	cmp	r0, #0
 8002828:	d07b      	beq.n	8002922 <_dtoa_r+0x4f2>
 800282a:	9b04      	ldr	r3, [sp, #16]
 800282c:	2b00      	cmp	r3, #0
 800282e:	d078      	beq.n	8002922 <_dtoa_r+0x4f2>
 8002830:	9b01      	ldr	r3, [sp, #4]
 8002832:	2b00      	cmp	r3, #0
 8002834:	dd39      	ble.n	80028aa <_dtoa_r+0x47a>
 8002836:	4b90      	ldr	r3, [pc, #576]	; (8002a78 <_dtoa_r+0x648>)
 8002838:	2200      	movs	r2, #0
 800283a:	4640      	mov	r0, r8
 800283c:	4649      	mov	r1, r9
 800283e:	f7fd fee3 	bl	8000608 <__aeabi_dmul>
 8002842:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002846:	9e01      	ldr	r6, [sp, #4]
 8002848:	f10b 37ff 	add.w	r7, fp, #4294967295
 800284c:	3501      	adds	r5, #1
 800284e:	e9dd 8902 	ldrd	r8, r9, [sp, #8]
 8002852:	4628      	mov	r0, r5
 8002854:	f7fd fe6e 	bl	8000534 <__aeabi_i2d>
 8002858:	4642      	mov	r2, r8
 800285a:	464b      	mov	r3, r9
 800285c:	f7fd fed4 	bl	8000608 <__aeabi_dmul>
 8002860:	4b86      	ldr	r3, [pc, #536]	; (8002a7c <_dtoa_r+0x64c>)
 8002862:	2200      	movs	r2, #0
 8002864:	f7fd fd1a 	bl	800029c <__adddf3>
 8002868:	f1a1 7350 	sub.w	r3, r1, #54525952	; 0x3400000
 800286c:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8002870:	9303      	str	r3, [sp, #12]
 8002872:	2e00      	cmp	r6, #0
 8002874:	d158      	bne.n	8002928 <_dtoa_r+0x4f8>
 8002876:	4b82      	ldr	r3, [pc, #520]	; (8002a80 <_dtoa_r+0x650>)
 8002878:	2200      	movs	r2, #0
 800287a:	4640      	mov	r0, r8
 800287c:	4649      	mov	r1, r9
 800287e:	f7fd fd0b 	bl	8000298 <__aeabi_dsub>
 8002882:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8002886:	4680      	mov	r8, r0
 8002888:	4689      	mov	r9, r1
 800288a:	f7fe f94d 	bl	8000b28 <__aeabi_dcmpgt>
 800288e:	2800      	cmp	r0, #0
 8002890:	f040 8296 	bne.w	8002dc0 <_dtoa_r+0x990>
 8002894:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 8002898:	4640      	mov	r0, r8
 800289a:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800289e:	4649      	mov	r1, r9
 80028a0:	f7fe f924 	bl	8000aec <__aeabi_dcmplt>
 80028a4:	2800      	cmp	r0, #0
 80028a6:	f040 8289 	bne.w	8002dbc <_dtoa_r+0x98c>
 80028aa:	ed8d 8b02 	vstr	d8, [sp, #8]
 80028ae:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80028b0:	2b00      	cmp	r3, #0
 80028b2:	f2c0 814e 	blt.w	8002b52 <_dtoa_r+0x722>
 80028b6:	f1bb 0f0e 	cmp.w	fp, #14
 80028ba:	f300 814a 	bgt.w	8002b52 <_dtoa_r+0x722>
 80028be:	4b6b      	ldr	r3, [pc, #428]	; (8002a6c <_dtoa_r+0x63c>)
 80028c0:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 80028c4:	e9d3 8900 	ldrd	r8, r9, [r3]
 80028c8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80028ca:	2b00      	cmp	r3, #0
 80028cc:	f280 80dc 	bge.w	8002a88 <_dtoa_r+0x658>
 80028d0:	9b04      	ldr	r3, [sp, #16]
 80028d2:	2b00      	cmp	r3, #0
 80028d4:	f300 80d8 	bgt.w	8002a88 <_dtoa_r+0x658>
 80028d8:	f040 826f 	bne.w	8002dba <_dtoa_r+0x98a>
 80028dc:	4b68      	ldr	r3, [pc, #416]	; (8002a80 <_dtoa_r+0x650>)
 80028de:	2200      	movs	r2, #0
 80028e0:	4640      	mov	r0, r8
 80028e2:	4649      	mov	r1, r9
 80028e4:	f7fd fe90 	bl	8000608 <__aeabi_dmul>
 80028e8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80028ec:	f7fe f912 	bl	8000b14 <__aeabi_dcmpge>
 80028f0:	9e04      	ldr	r6, [sp, #16]
 80028f2:	4637      	mov	r7, r6
 80028f4:	2800      	cmp	r0, #0
 80028f6:	f040 8245 	bne.w	8002d84 <_dtoa_r+0x954>
 80028fa:	9d00      	ldr	r5, [sp, #0]
 80028fc:	2331      	movs	r3, #49	; 0x31
 80028fe:	f805 3b01 	strb.w	r3, [r5], #1
 8002902:	f10b 0b01 	add.w	fp, fp, #1
 8002906:	e241      	b.n	8002d8c <_dtoa_r+0x95c>
 8002908:	07f2      	lsls	r2, r6, #31
 800290a:	d505      	bpl.n	8002918 <_dtoa_r+0x4e8>
 800290c:	e9d7 2300 	ldrd	r2, r3, [r7]
 8002910:	f7fd fe7a 	bl	8000608 <__aeabi_dmul>
 8002914:	3501      	adds	r5, #1
 8002916:	2301      	movs	r3, #1
 8002918:	1076      	asrs	r6, r6, #1
 800291a:	3708      	adds	r7, #8
 800291c:	e773      	b.n	8002806 <_dtoa_r+0x3d6>
 800291e:	2502      	movs	r5, #2
 8002920:	e775      	b.n	800280e <_dtoa_r+0x3de>
 8002922:	9e04      	ldr	r6, [sp, #16]
 8002924:	465f      	mov	r7, fp
 8002926:	e792      	b.n	800284e <_dtoa_r+0x41e>
 8002928:	9900      	ldr	r1, [sp, #0]
 800292a:	4b50      	ldr	r3, [pc, #320]	; (8002a6c <_dtoa_r+0x63c>)
 800292c:	ed9d 7b02 	vldr	d7, [sp, #8]
 8002930:	4431      	add	r1, r6
 8002932:	9102      	str	r1, [sp, #8]
 8002934:	9909      	ldr	r1, [sp, #36]	; 0x24
 8002936:	eeb0 9a47 	vmov.f32	s18, s14
 800293a:	eef0 9a67 	vmov.f32	s19, s15
 800293e:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 8002942:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8002946:	2900      	cmp	r1, #0
 8002948:	d044      	beq.n	80029d4 <_dtoa_r+0x5a4>
 800294a:	494e      	ldr	r1, [pc, #312]	; (8002a84 <_dtoa_r+0x654>)
 800294c:	2000      	movs	r0, #0
 800294e:	f7fd ff85 	bl	800085c <__aeabi_ddiv>
 8002952:	ec53 2b19 	vmov	r2, r3, d9
 8002956:	f7fd fc9f 	bl	8000298 <__aeabi_dsub>
 800295a:	9d00      	ldr	r5, [sp, #0]
 800295c:	ec41 0b19 	vmov	d9, r0, r1
 8002960:	4649      	mov	r1, r9
 8002962:	4640      	mov	r0, r8
 8002964:	f7fe f900 	bl	8000b68 <__aeabi_d2iz>
 8002968:	4606      	mov	r6, r0
 800296a:	f7fd fde3 	bl	8000534 <__aeabi_i2d>
 800296e:	4602      	mov	r2, r0
 8002970:	460b      	mov	r3, r1
 8002972:	4640      	mov	r0, r8
 8002974:	4649      	mov	r1, r9
 8002976:	f7fd fc8f 	bl	8000298 <__aeabi_dsub>
 800297a:	3630      	adds	r6, #48	; 0x30
 800297c:	f805 6b01 	strb.w	r6, [r5], #1
 8002980:	ec53 2b19 	vmov	r2, r3, d9
 8002984:	4680      	mov	r8, r0
 8002986:	4689      	mov	r9, r1
 8002988:	f7fe f8b0 	bl	8000aec <__aeabi_dcmplt>
 800298c:	2800      	cmp	r0, #0
 800298e:	d164      	bne.n	8002a5a <_dtoa_r+0x62a>
 8002990:	4642      	mov	r2, r8
 8002992:	464b      	mov	r3, r9
 8002994:	4937      	ldr	r1, [pc, #220]	; (8002a74 <_dtoa_r+0x644>)
 8002996:	2000      	movs	r0, #0
 8002998:	f7fd fc7e 	bl	8000298 <__aeabi_dsub>
 800299c:	ec53 2b19 	vmov	r2, r3, d9
 80029a0:	f7fe f8a4 	bl	8000aec <__aeabi_dcmplt>
 80029a4:	2800      	cmp	r0, #0
 80029a6:	f040 80b6 	bne.w	8002b16 <_dtoa_r+0x6e6>
 80029aa:	9b02      	ldr	r3, [sp, #8]
 80029ac:	429d      	cmp	r5, r3
 80029ae:	f43f af7c 	beq.w	80028aa <_dtoa_r+0x47a>
 80029b2:	4b31      	ldr	r3, [pc, #196]	; (8002a78 <_dtoa_r+0x648>)
 80029b4:	ec51 0b19 	vmov	r0, r1, d9
 80029b8:	2200      	movs	r2, #0
 80029ba:	f7fd fe25 	bl	8000608 <__aeabi_dmul>
 80029be:	4b2e      	ldr	r3, [pc, #184]	; (8002a78 <_dtoa_r+0x648>)
 80029c0:	ec41 0b19 	vmov	d9, r0, r1
 80029c4:	2200      	movs	r2, #0
 80029c6:	4640      	mov	r0, r8
 80029c8:	4649      	mov	r1, r9
 80029ca:	f7fd fe1d 	bl	8000608 <__aeabi_dmul>
 80029ce:	4680      	mov	r8, r0
 80029d0:	4689      	mov	r9, r1
 80029d2:	e7c5      	b.n	8002960 <_dtoa_r+0x530>
 80029d4:	ec51 0b17 	vmov	r0, r1, d7
 80029d8:	f7fd fe16 	bl	8000608 <__aeabi_dmul>
 80029dc:	9b02      	ldr	r3, [sp, #8]
 80029de:	9d00      	ldr	r5, [sp, #0]
 80029e0:	930f      	str	r3, [sp, #60]	; 0x3c
 80029e2:	ec41 0b19 	vmov	d9, r0, r1
 80029e6:	4649      	mov	r1, r9
 80029e8:	4640      	mov	r0, r8
 80029ea:	f7fe f8bd 	bl	8000b68 <__aeabi_d2iz>
 80029ee:	4606      	mov	r6, r0
 80029f0:	f7fd fda0 	bl	8000534 <__aeabi_i2d>
 80029f4:	3630      	adds	r6, #48	; 0x30
 80029f6:	4602      	mov	r2, r0
 80029f8:	460b      	mov	r3, r1
 80029fa:	4640      	mov	r0, r8
 80029fc:	4649      	mov	r1, r9
 80029fe:	f7fd fc4b 	bl	8000298 <__aeabi_dsub>
 8002a02:	f805 6b01 	strb.w	r6, [r5], #1
 8002a06:	9b02      	ldr	r3, [sp, #8]
 8002a08:	429d      	cmp	r5, r3
 8002a0a:	4680      	mov	r8, r0
 8002a0c:	4689      	mov	r9, r1
 8002a0e:	f04f 0200 	mov.w	r2, #0
 8002a12:	d124      	bne.n	8002a5e <_dtoa_r+0x62e>
 8002a14:	4b1b      	ldr	r3, [pc, #108]	; (8002a84 <_dtoa_r+0x654>)
 8002a16:	ec51 0b19 	vmov	r0, r1, d9
 8002a1a:	f7fd fc3f 	bl	800029c <__adddf3>
 8002a1e:	4602      	mov	r2, r0
 8002a20:	460b      	mov	r3, r1
 8002a22:	4640      	mov	r0, r8
 8002a24:	4649      	mov	r1, r9
 8002a26:	f7fe f87f 	bl	8000b28 <__aeabi_dcmpgt>
 8002a2a:	2800      	cmp	r0, #0
 8002a2c:	d173      	bne.n	8002b16 <_dtoa_r+0x6e6>
 8002a2e:	ec53 2b19 	vmov	r2, r3, d9
 8002a32:	4914      	ldr	r1, [pc, #80]	; (8002a84 <_dtoa_r+0x654>)
 8002a34:	2000      	movs	r0, #0
 8002a36:	f7fd fc2f 	bl	8000298 <__aeabi_dsub>
 8002a3a:	4602      	mov	r2, r0
 8002a3c:	460b      	mov	r3, r1
 8002a3e:	4640      	mov	r0, r8
 8002a40:	4649      	mov	r1, r9
 8002a42:	f7fe f853 	bl	8000aec <__aeabi_dcmplt>
 8002a46:	2800      	cmp	r0, #0
 8002a48:	f43f af2f 	beq.w	80028aa <_dtoa_r+0x47a>
 8002a4c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8002a4e:	1e6b      	subs	r3, r5, #1
 8002a50:	930f      	str	r3, [sp, #60]	; 0x3c
 8002a52:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 8002a56:	2b30      	cmp	r3, #48	; 0x30
 8002a58:	d0f8      	beq.n	8002a4c <_dtoa_r+0x61c>
 8002a5a:	46bb      	mov	fp, r7
 8002a5c:	e04a      	b.n	8002af4 <_dtoa_r+0x6c4>
 8002a5e:	4b06      	ldr	r3, [pc, #24]	; (8002a78 <_dtoa_r+0x648>)
 8002a60:	f7fd fdd2 	bl	8000608 <__aeabi_dmul>
 8002a64:	4680      	mov	r8, r0
 8002a66:	4689      	mov	r9, r1
 8002a68:	e7bd      	b.n	80029e6 <_dtoa_r+0x5b6>
 8002a6a:	bf00      	nop
 8002a6c:	080040b8 	.word	0x080040b8
 8002a70:	08004090 	.word	0x08004090
 8002a74:	3ff00000 	.word	0x3ff00000
 8002a78:	40240000 	.word	0x40240000
 8002a7c:	401c0000 	.word	0x401c0000
 8002a80:	40140000 	.word	0x40140000
 8002a84:	3fe00000 	.word	0x3fe00000
 8002a88:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 8002a8c:	9d00      	ldr	r5, [sp, #0]
 8002a8e:	4642      	mov	r2, r8
 8002a90:	464b      	mov	r3, r9
 8002a92:	4630      	mov	r0, r6
 8002a94:	4639      	mov	r1, r7
 8002a96:	f7fd fee1 	bl	800085c <__aeabi_ddiv>
 8002a9a:	f7fe f865 	bl	8000b68 <__aeabi_d2iz>
 8002a9e:	9001      	str	r0, [sp, #4]
 8002aa0:	f7fd fd48 	bl	8000534 <__aeabi_i2d>
 8002aa4:	4642      	mov	r2, r8
 8002aa6:	464b      	mov	r3, r9
 8002aa8:	f7fd fdae 	bl	8000608 <__aeabi_dmul>
 8002aac:	4602      	mov	r2, r0
 8002aae:	460b      	mov	r3, r1
 8002ab0:	4630      	mov	r0, r6
 8002ab2:	4639      	mov	r1, r7
 8002ab4:	f7fd fbf0 	bl	8000298 <__aeabi_dsub>
 8002ab8:	9e01      	ldr	r6, [sp, #4]
 8002aba:	9f04      	ldr	r7, [sp, #16]
 8002abc:	3630      	adds	r6, #48	; 0x30
 8002abe:	f805 6b01 	strb.w	r6, [r5], #1
 8002ac2:	9e00      	ldr	r6, [sp, #0]
 8002ac4:	1bae      	subs	r6, r5, r6
 8002ac6:	42b7      	cmp	r7, r6
 8002ac8:	4602      	mov	r2, r0
 8002aca:	460b      	mov	r3, r1
 8002acc:	d134      	bne.n	8002b38 <_dtoa_r+0x708>
 8002ace:	f7fd fbe5 	bl	800029c <__adddf3>
 8002ad2:	4642      	mov	r2, r8
 8002ad4:	464b      	mov	r3, r9
 8002ad6:	4606      	mov	r6, r0
 8002ad8:	460f      	mov	r7, r1
 8002ada:	f7fe f825 	bl	8000b28 <__aeabi_dcmpgt>
 8002ade:	b9c8      	cbnz	r0, 8002b14 <_dtoa_r+0x6e4>
 8002ae0:	4642      	mov	r2, r8
 8002ae2:	464b      	mov	r3, r9
 8002ae4:	4630      	mov	r0, r6
 8002ae6:	4639      	mov	r1, r7
 8002ae8:	f7fd fff6 	bl	8000ad8 <__aeabi_dcmpeq>
 8002aec:	b110      	cbz	r0, 8002af4 <_dtoa_r+0x6c4>
 8002aee:	9b01      	ldr	r3, [sp, #4]
 8002af0:	07db      	lsls	r3, r3, #31
 8002af2:	d40f      	bmi.n	8002b14 <_dtoa_r+0x6e4>
 8002af4:	4651      	mov	r1, sl
 8002af6:	4620      	mov	r0, r4
 8002af8:	f000 fb18 	bl	800312c <_Bfree>
 8002afc:	2300      	movs	r3, #0
 8002afe:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8002b00:	702b      	strb	r3, [r5, #0]
 8002b02:	f10b 0301 	add.w	r3, fp, #1
 8002b06:	6013      	str	r3, [r2, #0]
 8002b08:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8002b0a:	2b00      	cmp	r3, #0
 8002b0c:	f43f ace2 	beq.w	80024d4 <_dtoa_r+0xa4>
 8002b10:	601d      	str	r5, [r3, #0]
 8002b12:	e4df      	b.n	80024d4 <_dtoa_r+0xa4>
 8002b14:	465f      	mov	r7, fp
 8002b16:	462b      	mov	r3, r5
 8002b18:	461d      	mov	r5, r3
 8002b1a:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8002b1e:	2a39      	cmp	r2, #57	; 0x39
 8002b20:	d106      	bne.n	8002b30 <_dtoa_r+0x700>
 8002b22:	9a00      	ldr	r2, [sp, #0]
 8002b24:	429a      	cmp	r2, r3
 8002b26:	d1f7      	bne.n	8002b18 <_dtoa_r+0x6e8>
 8002b28:	9900      	ldr	r1, [sp, #0]
 8002b2a:	2230      	movs	r2, #48	; 0x30
 8002b2c:	3701      	adds	r7, #1
 8002b2e:	700a      	strb	r2, [r1, #0]
 8002b30:	781a      	ldrb	r2, [r3, #0]
 8002b32:	3201      	adds	r2, #1
 8002b34:	701a      	strb	r2, [r3, #0]
 8002b36:	e790      	b.n	8002a5a <_dtoa_r+0x62a>
 8002b38:	4ba3      	ldr	r3, [pc, #652]	; (8002dc8 <_dtoa_r+0x998>)
 8002b3a:	2200      	movs	r2, #0
 8002b3c:	f7fd fd64 	bl	8000608 <__aeabi_dmul>
 8002b40:	2200      	movs	r2, #0
 8002b42:	2300      	movs	r3, #0
 8002b44:	4606      	mov	r6, r0
 8002b46:	460f      	mov	r7, r1
 8002b48:	f7fd ffc6 	bl	8000ad8 <__aeabi_dcmpeq>
 8002b4c:	2800      	cmp	r0, #0
 8002b4e:	d09e      	beq.n	8002a8e <_dtoa_r+0x65e>
 8002b50:	e7d0      	b.n	8002af4 <_dtoa_r+0x6c4>
 8002b52:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8002b54:	2a00      	cmp	r2, #0
 8002b56:	f000 80ca 	beq.w	8002cee <_dtoa_r+0x8be>
 8002b5a:	9a07      	ldr	r2, [sp, #28]
 8002b5c:	2a01      	cmp	r2, #1
 8002b5e:	f300 80ad 	bgt.w	8002cbc <_dtoa_r+0x88c>
 8002b62:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8002b64:	2a00      	cmp	r2, #0
 8002b66:	f000 80a5 	beq.w	8002cb4 <_dtoa_r+0x884>
 8002b6a:	f203 4333 	addw	r3, r3, #1075	; 0x433
 8002b6e:	9e08      	ldr	r6, [sp, #32]
 8002b70:	9d05      	ldr	r5, [sp, #20]
 8002b72:	9a05      	ldr	r2, [sp, #20]
 8002b74:	441a      	add	r2, r3
 8002b76:	9205      	str	r2, [sp, #20]
 8002b78:	9a06      	ldr	r2, [sp, #24]
 8002b7a:	2101      	movs	r1, #1
 8002b7c:	441a      	add	r2, r3
 8002b7e:	4620      	mov	r0, r4
 8002b80:	9206      	str	r2, [sp, #24]
 8002b82:	f000 fb89 	bl	8003298 <__i2b>
 8002b86:	4607      	mov	r7, r0
 8002b88:	b165      	cbz	r5, 8002ba4 <_dtoa_r+0x774>
 8002b8a:	9b06      	ldr	r3, [sp, #24]
 8002b8c:	2b00      	cmp	r3, #0
 8002b8e:	dd09      	ble.n	8002ba4 <_dtoa_r+0x774>
 8002b90:	42ab      	cmp	r3, r5
 8002b92:	9a05      	ldr	r2, [sp, #20]
 8002b94:	bfa8      	it	ge
 8002b96:	462b      	movge	r3, r5
 8002b98:	1ad2      	subs	r2, r2, r3
 8002b9a:	9205      	str	r2, [sp, #20]
 8002b9c:	9a06      	ldr	r2, [sp, #24]
 8002b9e:	1aed      	subs	r5, r5, r3
 8002ba0:	1ad3      	subs	r3, r2, r3
 8002ba2:	9306      	str	r3, [sp, #24]
 8002ba4:	9b08      	ldr	r3, [sp, #32]
 8002ba6:	b1f3      	cbz	r3, 8002be6 <_dtoa_r+0x7b6>
 8002ba8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002baa:	2b00      	cmp	r3, #0
 8002bac:	f000 80a3 	beq.w	8002cf6 <_dtoa_r+0x8c6>
 8002bb0:	2e00      	cmp	r6, #0
 8002bb2:	dd10      	ble.n	8002bd6 <_dtoa_r+0x7a6>
 8002bb4:	4639      	mov	r1, r7
 8002bb6:	4632      	mov	r2, r6
 8002bb8:	4620      	mov	r0, r4
 8002bba:	f000 fc2d 	bl	8003418 <__pow5mult>
 8002bbe:	4652      	mov	r2, sl
 8002bc0:	4601      	mov	r1, r0
 8002bc2:	4607      	mov	r7, r0
 8002bc4:	4620      	mov	r0, r4
 8002bc6:	f000 fb7d 	bl	80032c4 <__multiply>
 8002bca:	4651      	mov	r1, sl
 8002bcc:	4680      	mov	r8, r0
 8002bce:	4620      	mov	r0, r4
 8002bd0:	f000 faac 	bl	800312c <_Bfree>
 8002bd4:	46c2      	mov	sl, r8
 8002bd6:	9b08      	ldr	r3, [sp, #32]
 8002bd8:	1b9a      	subs	r2, r3, r6
 8002bda:	d004      	beq.n	8002be6 <_dtoa_r+0x7b6>
 8002bdc:	4651      	mov	r1, sl
 8002bde:	4620      	mov	r0, r4
 8002be0:	f000 fc1a 	bl	8003418 <__pow5mult>
 8002be4:	4682      	mov	sl, r0
 8002be6:	2101      	movs	r1, #1
 8002be8:	4620      	mov	r0, r4
 8002bea:	f000 fb55 	bl	8003298 <__i2b>
 8002bee:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8002bf0:	2b00      	cmp	r3, #0
 8002bf2:	4606      	mov	r6, r0
 8002bf4:	f340 8081 	ble.w	8002cfa <_dtoa_r+0x8ca>
 8002bf8:	461a      	mov	r2, r3
 8002bfa:	4601      	mov	r1, r0
 8002bfc:	4620      	mov	r0, r4
 8002bfe:	f000 fc0b 	bl	8003418 <__pow5mult>
 8002c02:	9b07      	ldr	r3, [sp, #28]
 8002c04:	2b01      	cmp	r3, #1
 8002c06:	4606      	mov	r6, r0
 8002c08:	dd7a      	ble.n	8002d00 <_dtoa_r+0x8d0>
 8002c0a:	f04f 0800 	mov.w	r8, #0
 8002c0e:	6933      	ldr	r3, [r6, #16]
 8002c10:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 8002c14:	6918      	ldr	r0, [r3, #16]
 8002c16:	f000 faf1 	bl	80031fc <__hi0bits>
 8002c1a:	f1c0 0020 	rsb	r0, r0, #32
 8002c1e:	9b06      	ldr	r3, [sp, #24]
 8002c20:	4418      	add	r0, r3
 8002c22:	f010 001f 	ands.w	r0, r0, #31
 8002c26:	f000 8094 	beq.w	8002d52 <_dtoa_r+0x922>
 8002c2a:	f1c0 0320 	rsb	r3, r0, #32
 8002c2e:	2b04      	cmp	r3, #4
 8002c30:	f340 8085 	ble.w	8002d3e <_dtoa_r+0x90e>
 8002c34:	9b05      	ldr	r3, [sp, #20]
 8002c36:	f1c0 001c 	rsb	r0, r0, #28
 8002c3a:	4403      	add	r3, r0
 8002c3c:	9305      	str	r3, [sp, #20]
 8002c3e:	9b06      	ldr	r3, [sp, #24]
 8002c40:	4403      	add	r3, r0
 8002c42:	4405      	add	r5, r0
 8002c44:	9306      	str	r3, [sp, #24]
 8002c46:	9b05      	ldr	r3, [sp, #20]
 8002c48:	2b00      	cmp	r3, #0
 8002c4a:	dd05      	ble.n	8002c58 <_dtoa_r+0x828>
 8002c4c:	4651      	mov	r1, sl
 8002c4e:	461a      	mov	r2, r3
 8002c50:	4620      	mov	r0, r4
 8002c52:	f000 fc3b 	bl	80034cc <__lshift>
 8002c56:	4682      	mov	sl, r0
 8002c58:	9b06      	ldr	r3, [sp, #24]
 8002c5a:	2b00      	cmp	r3, #0
 8002c5c:	dd05      	ble.n	8002c6a <_dtoa_r+0x83a>
 8002c5e:	4631      	mov	r1, r6
 8002c60:	461a      	mov	r2, r3
 8002c62:	4620      	mov	r0, r4
 8002c64:	f000 fc32 	bl	80034cc <__lshift>
 8002c68:	4606      	mov	r6, r0
 8002c6a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8002c6c:	2b00      	cmp	r3, #0
 8002c6e:	d072      	beq.n	8002d56 <_dtoa_r+0x926>
 8002c70:	4631      	mov	r1, r6
 8002c72:	4650      	mov	r0, sl
 8002c74:	f000 fc96 	bl	80035a4 <__mcmp>
 8002c78:	2800      	cmp	r0, #0
 8002c7a:	da6c      	bge.n	8002d56 <_dtoa_r+0x926>
 8002c7c:	2300      	movs	r3, #0
 8002c7e:	4651      	mov	r1, sl
 8002c80:	220a      	movs	r2, #10
 8002c82:	4620      	mov	r0, r4
 8002c84:	f000 fa74 	bl	8003170 <__multadd>
 8002c88:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002c8a:	f10b 3bff 	add.w	fp, fp, #4294967295
 8002c8e:	4682      	mov	sl, r0
 8002c90:	2b00      	cmp	r3, #0
 8002c92:	f000 81b0 	beq.w	8002ff6 <_dtoa_r+0xbc6>
 8002c96:	2300      	movs	r3, #0
 8002c98:	4639      	mov	r1, r7
 8002c9a:	220a      	movs	r2, #10
 8002c9c:	4620      	mov	r0, r4
 8002c9e:	f000 fa67 	bl	8003170 <__multadd>
 8002ca2:	9b01      	ldr	r3, [sp, #4]
 8002ca4:	2b00      	cmp	r3, #0
 8002ca6:	4607      	mov	r7, r0
 8002ca8:	f300 8096 	bgt.w	8002dd8 <_dtoa_r+0x9a8>
 8002cac:	9b07      	ldr	r3, [sp, #28]
 8002cae:	2b02      	cmp	r3, #2
 8002cb0:	dc59      	bgt.n	8002d66 <_dtoa_r+0x936>
 8002cb2:	e091      	b.n	8002dd8 <_dtoa_r+0x9a8>
 8002cb4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8002cb6:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 8002cba:	e758      	b.n	8002b6e <_dtoa_r+0x73e>
 8002cbc:	9b04      	ldr	r3, [sp, #16]
 8002cbe:	1e5e      	subs	r6, r3, #1
 8002cc0:	9b08      	ldr	r3, [sp, #32]
 8002cc2:	42b3      	cmp	r3, r6
 8002cc4:	bfbf      	itttt	lt
 8002cc6:	9b08      	ldrlt	r3, [sp, #32]
 8002cc8:	9a0b      	ldrlt	r2, [sp, #44]	; 0x2c
 8002cca:	9608      	strlt	r6, [sp, #32]
 8002ccc:	1af3      	sublt	r3, r6, r3
 8002cce:	bfb4      	ite	lt
 8002cd0:	18d2      	addlt	r2, r2, r3
 8002cd2:	1b9e      	subge	r6, r3, r6
 8002cd4:	9b04      	ldr	r3, [sp, #16]
 8002cd6:	bfbc      	itt	lt
 8002cd8:	920b      	strlt	r2, [sp, #44]	; 0x2c
 8002cda:	2600      	movlt	r6, #0
 8002cdc:	2b00      	cmp	r3, #0
 8002cde:	bfb7      	itett	lt
 8002ce0:	e9dd 2304 	ldrdlt	r2, r3, [sp, #16]
 8002ce4:	e9dd 3504 	ldrdge	r3, r5, [sp, #16]
 8002ce8:	1a9d      	sublt	r5, r3, r2
 8002cea:	2300      	movlt	r3, #0
 8002cec:	e741      	b.n	8002b72 <_dtoa_r+0x742>
 8002cee:	9e08      	ldr	r6, [sp, #32]
 8002cf0:	9d05      	ldr	r5, [sp, #20]
 8002cf2:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8002cf4:	e748      	b.n	8002b88 <_dtoa_r+0x758>
 8002cf6:	9a08      	ldr	r2, [sp, #32]
 8002cf8:	e770      	b.n	8002bdc <_dtoa_r+0x7ac>
 8002cfa:	9b07      	ldr	r3, [sp, #28]
 8002cfc:	2b01      	cmp	r3, #1
 8002cfe:	dc19      	bgt.n	8002d34 <_dtoa_r+0x904>
 8002d00:	9b02      	ldr	r3, [sp, #8]
 8002d02:	b9bb      	cbnz	r3, 8002d34 <_dtoa_r+0x904>
 8002d04:	9b03      	ldr	r3, [sp, #12]
 8002d06:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8002d0a:	b99b      	cbnz	r3, 8002d34 <_dtoa_r+0x904>
 8002d0c:	9b03      	ldr	r3, [sp, #12]
 8002d0e:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8002d12:	0d1b      	lsrs	r3, r3, #20
 8002d14:	051b      	lsls	r3, r3, #20
 8002d16:	b183      	cbz	r3, 8002d3a <_dtoa_r+0x90a>
 8002d18:	9b05      	ldr	r3, [sp, #20]
 8002d1a:	3301      	adds	r3, #1
 8002d1c:	9305      	str	r3, [sp, #20]
 8002d1e:	9b06      	ldr	r3, [sp, #24]
 8002d20:	3301      	adds	r3, #1
 8002d22:	9306      	str	r3, [sp, #24]
 8002d24:	f04f 0801 	mov.w	r8, #1
 8002d28:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8002d2a:	2b00      	cmp	r3, #0
 8002d2c:	f47f af6f 	bne.w	8002c0e <_dtoa_r+0x7de>
 8002d30:	2001      	movs	r0, #1
 8002d32:	e774      	b.n	8002c1e <_dtoa_r+0x7ee>
 8002d34:	f04f 0800 	mov.w	r8, #0
 8002d38:	e7f6      	b.n	8002d28 <_dtoa_r+0x8f8>
 8002d3a:	4698      	mov	r8, r3
 8002d3c:	e7f4      	b.n	8002d28 <_dtoa_r+0x8f8>
 8002d3e:	d082      	beq.n	8002c46 <_dtoa_r+0x816>
 8002d40:	9a05      	ldr	r2, [sp, #20]
 8002d42:	331c      	adds	r3, #28
 8002d44:	441a      	add	r2, r3
 8002d46:	9205      	str	r2, [sp, #20]
 8002d48:	9a06      	ldr	r2, [sp, #24]
 8002d4a:	441a      	add	r2, r3
 8002d4c:	441d      	add	r5, r3
 8002d4e:	9206      	str	r2, [sp, #24]
 8002d50:	e779      	b.n	8002c46 <_dtoa_r+0x816>
 8002d52:	4603      	mov	r3, r0
 8002d54:	e7f4      	b.n	8002d40 <_dtoa_r+0x910>
 8002d56:	9b04      	ldr	r3, [sp, #16]
 8002d58:	2b00      	cmp	r3, #0
 8002d5a:	dc37      	bgt.n	8002dcc <_dtoa_r+0x99c>
 8002d5c:	9b07      	ldr	r3, [sp, #28]
 8002d5e:	2b02      	cmp	r3, #2
 8002d60:	dd34      	ble.n	8002dcc <_dtoa_r+0x99c>
 8002d62:	9b04      	ldr	r3, [sp, #16]
 8002d64:	9301      	str	r3, [sp, #4]
 8002d66:	9b01      	ldr	r3, [sp, #4]
 8002d68:	b963      	cbnz	r3, 8002d84 <_dtoa_r+0x954>
 8002d6a:	4631      	mov	r1, r6
 8002d6c:	2205      	movs	r2, #5
 8002d6e:	4620      	mov	r0, r4
 8002d70:	f000 f9fe 	bl	8003170 <__multadd>
 8002d74:	4601      	mov	r1, r0
 8002d76:	4606      	mov	r6, r0
 8002d78:	4650      	mov	r0, sl
 8002d7a:	f000 fc13 	bl	80035a4 <__mcmp>
 8002d7e:	2800      	cmp	r0, #0
 8002d80:	f73f adbb 	bgt.w	80028fa <_dtoa_r+0x4ca>
 8002d84:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8002d86:	9d00      	ldr	r5, [sp, #0]
 8002d88:	ea6f 0b03 	mvn.w	fp, r3
 8002d8c:	f04f 0800 	mov.w	r8, #0
 8002d90:	4631      	mov	r1, r6
 8002d92:	4620      	mov	r0, r4
 8002d94:	f000 f9ca 	bl	800312c <_Bfree>
 8002d98:	2f00      	cmp	r7, #0
 8002d9a:	f43f aeab 	beq.w	8002af4 <_dtoa_r+0x6c4>
 8002d9e:	f1b8 0f00 	cmp.w	r8, #0
 8002da2:	d005      	beq.n	8002db0 <_dtoa_r+0x980>
 8002da4:	45b8      	cmp	r8, r7
 8002da6:	d003      	beq.n	8002db0 <_dtoa_r+0x980>
 8002da8:	4641      	mov	r1, r8
 8002daa:	4620      	mov	r0, r4
 8002dac:	f000 f9be 	bl	800312c <_Bfree>
 8002db0:	4639      	mov	r1, r7
 8002db2:	4620      	mov	r0, r4
 8002db4:	f000 f9ba 	bl	800312c <_Bfree>
 8002db8:	e69c      	b.n	8002af4 <_dtoa_r+0x6c4>
 8002dba:	2600      	movs	r6, #0
 8002dbc:	4637      	mov	r7, r6
 8002dbe:	e7e1      	b.n	8002d84 <_dtoa_r+0x954>
 8002dc0:	46bb      	mov	fp, r7
 8002dc2:	4637      	mov	r7, r6
 8002dc4:	e599      	b.n	80028fa <_dtoa_r+0x4ca>
 8002dc6:	bf00      	nop
 8002dc8:	40240000 	.word	0x40240000
 8002dcc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002dce:	2b00      	cmp	r3, #0
 8002dd0:	f000 80c8 	beq.w	8002f64 <_dtoa_r+0xb34>
 8002dd4:	9b04      	ldr	r3, [sp, #16]
 8002dd6:	9301      	str	r3, [sp, #4]
 8002dd8:	2d00      	cmp	r5, #0
 8002dda:	dd05      	ble.n	8002de8 <_dtoa_r+0x9b8>
 8002ddc:	4639      	mov	r1, r7
 8002dde:	462a      	mov	r2, r5
 8002de0:	4620      	mov	r0, r4
 8002de2:	f000 fb73 	bl	80034cc <__lshift>
 8002de6:	4607      	mov	r7, r0
 8002de8:	f1b8 0f00 	cmp.w	r8, #0
 8002dec:	d05b      	beq.n	8002ea6 <_dtoa_r+0xa76>
 8002dee:	6879      	ldr	r1, [r7, #4]
 8002df0:	4620      	mov	r0, r4
 8002df2:	f000 f95b 	bl	80030ac <_Balloc>
 8002df6:	4605      	mov	r5, r0
 8002df8:	b928      	cbnz	r0, 8002e06 <_dtoa_r+0x9d6>
 8002dfa:	4b83      	ldr	r3, [pc, #524]	; (8003008 <_dtoa_r+0xbd8>)
 8002dfc:	4602      	mov	r2, r0
 8002dfe:	f240 21ef 	movw	r1, #751	; 0x2ef
 8002e02:	f7ff bb2e 	b.w	8002462 <_dtoa_r+0x32>
 8002e06:	693a      	ldr	r2, [r7, #16]
 8002e08:	3202      	adds	r2, #2
 8002e0a:	0092      	lsls	r2, r2, #2
 8002e0c:	f107 010c 	add.w	r1, r7, #12
 8002e10:	300c      	adds	r0, #12
 8002e12:	f7ff fa58 	bl	80022c6 <memcpy>
 8002e16:	2201      	movs	r2, #1
 8002e18:	4629      	mov	r1, r5
 8002e1a:	4620      	mov	r0, r4
 8002e1c:	f000 fb56 	bl	80034cc <__lshift>
 8002e20:	9b00      	ldr	r3, [sp, #0]
 8002e22:	3301      	adds	r3, #1
 8002e24:	9304      	str	r3, [sp, #16]
 8002e26:	e9dd 2300 	ldrd	r2, r3, [sp]
 8002e2a:	4413      	add	r3, r2
 8002e2c:	9308      	str	r3, [sp, #32]
 8002e2e:	9b02      	ldr	r3, [sp, #8]
 8002e30:	f003 0301 	and.w	r3, r3, #1
 8002e34:	46b8      	mov	r8, r7
 8002e36:	9306      	str	r3, [sp, #24]
 8002e38:	4607      	mov	r7, r0
 8002e3a:	9b04      	ldr	r3, [sp, #16]
 8002e3c:	4631      	mov	r1, r6
 8002e3e:	3b01      	subs	r3, #1
 8002e40:	4650      	mov	r0, sl
 8002e42:	9301      	str	r3, [sp, #4]
 8002e44:	f7ff fa6c 	bl	8002320 <quorem>
 8002e48:	4641      	mov	r1, r8
 8002e4a:	9002      	str	r0, [sp, #8]
 8002e4c:	f100 0930 	add.w	r9, r0, #48	; 0x30
 8002e50:	4650      	mov	r0, sl
 8002e52:	f000 fba7 	bl	80035a4 <__mcmp>
 8002e56:	463a      	mov	r2, r7
 8002e58:	9005      	str	r0, [sp, #20]
 8002e5a:	4631      	mov	r1, r6
 8002e5c:	4620      	mov	r0, r4
 8002e5e:	f000 fbbd 	bl	80035dc <__mdiff>
 8002e62:	68c2      	ldr	r2, [r0, #12]
 8002e64:	4605      	mov	r5, r0
 8002e66:	bb02      	cbnz	r2, 8002eaa <_dtoa_r+0xa7a>
 8002e68:	4601      	mov	r1, r0
 8002e6a:	4650      	mov	r0, sl
 8002e6c:	f000 fb9a 	bl	80035a4 <__mcmp>
 8002e70:	4602      	mov	r2, r0
 8002e72:	4629      	mov	r1, r5
 8002e74:	4620      	mov	r0, r4
 8002e76:	9209      	str	r2, [sp, #36]	; 0x24
 8002e78:	f000 f958 	bl	800312c <_Bfree>
 8002e7c:	9b07      	ldr	r3, [sp, #28]
 8002e7e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8002e80:	9d04      	ldr	r5, [sp, #16]
 8002e82:	ea43 0102 	orr.w	r1, r3, r2
 8002e86:	9b06      	ldr	r3, [sp, #24]
 8002e88:	4319      	orrs	r1, r3
 8002e8a:	d110      	bne.n	8002eae <_dtoa_r+0xa7e>
 8002e8c:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 8002e90:	d029      	beq.n	8002ee6 <_dtoa_r+0xab6>
 8002e92:	9b05      	ldr	r3, [sp, #20]
 8002e94:	2b00      	cmp	r3, #0
 8002e96:	dd02      	ble.n	8002e9e <_dtoa_r+0xa6e>
 8002e98:	9b02      	ldr	r3, [sp, #8]
 8002e9a:	f103 0931 	add.w	r9, r3, #49	; 0x31
 8002e9e:	9b01      	ldr	r3, [sp, #4]
 8002ea0:	f883 9000 	strb.w	r9, [r3]
 8002ea4:	e774      	b.n	8002d90 <_dtoa_r+0x960>
 8002ea6:	4638      	mov	r0, r7
 8002ea8:	e7ba      	b.n	8002e20 <_dtoa_r+0x9f0>
 8002eaa:	2201      	movs	r2, #1
 8002eac:	e7e1      	b.n	8002e72 <_dtoa_r+0xa42>
 8002eae:	9b05      	ldr	r3, [sp, #20]
 8002eb0:	2b00      	cmp	r3, #0
 8002eb2:	db04      	blt.n	8002ebe <_dtoa_r+0xa8e>
 8002eb4:	9907      	ldr	r1, [sp, #28]
 8002eb6:	430b      	orrs	r3, r1
 8002eb8:	9906      	ldr	r1, [sp, #24]
 8002eba:	430b      	orrs	r3, r1
 8002ebc:	d120      	bne.n	8002f00 <_dtoa_r+0xad0>
 8002ebe:	2a00      	cmp	r2, #0
 8002ec0:	dded      	ble.n	8002e9e <_dtoa_r+0xa6e>
 8002ec2:	4651      	mov	r1, sl
 8002ec4:	2201      	movs	r2, #1
 8002ec6:	4620      	mov	r0, r4
 8002ec8:	f000 fb00 	bl	80034cc <__lshift>
 8002ecc:	4631      	mov	r1, r6
 8002ece:	4682      	mov	sl, r0
 8002ed0:	f000 fb68 	bl	80035a4 <__mcmp>
 8002ed4:	2800      	cmp	r0, #0
 8002ed6:	dc03      	bgt.n	8002ee0 <_dtoa_r+0xab0>
 8002ed8:	d1e1      	bne.n	8002e9e <_dtoa_r+0xa6e>
 8002eda:	f019 0f01 	tst.w	r9, #1
 8002ede:	d0de      	beq.n	8002e9e <_dtoa_r+0xa6e>
 8002ee0:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 8002ee4:	d1d8      	bne.n	8002e98 <_dtoa_r+0xa68>
 8002ee6:	9a01      	ldr	r2, [sp, #4]
 8002ee8:	2339      	movs	r3, #57	; 0x39
 8002eea:	7013      	strb	r3, [r2, #0]
 8002eec:	462b      	mov	r3, r5
 8002eee:	461d      	mov	r5, r3
 8002ef0:	3b01      	subs	r3, #1
 8002ef2:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 8002ef6:	2a39      	cmp	r2, #57	; 0x39
 8002ef8:	d06c      	beq.n	8002fd4 <_dtoa_r+0xba4>
 8002efa:	3201      	adds	r2, #1
 8002efc:	701a      	strb	r2, [r3, #0]
 8002efe:	e747      	b.n	8002d90 <_dtoa_r+0x960>
 8002f00:	2a00      	cmp	r2, #0
 8002f02:	dd07      	ble.n	8002f14 <_dtoa_r+0xae4>
 8002f04:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 8002f08:	d0ed      	beq.n	8002ee6 <_dtoa_r+0xab6>
 8002f0a:	9a01      	ldr	r2, [sp, #4]
 8002f0c:	f109 0301 	add.w	r3, r9, #1
 8002f10:	7013      	strb	r3, [r2, #0]
 8002f12:	e73d      	b.n	8002d90 <_dtoa_r+0x960>
 8002f14:	9b04      	ldr	r3, [sp, #16]
 8002f16:	9a08      	ldr	r2, [sp, #32]
 8002f18:	f803 9c01 	strb.w	r9, [r3, #-1]
 8002f1c:	4293      	cmp	r3, r2
 8002f1e:	d043      	beq.n	8002fa8 <_dtoa_r+0xb78>
 8002f20:	4651      	mov	r1, sl
 8002f22:	2300      	movs	r3, #0
 8002f24:	220a      	movs	r2, #10
 8002f26:	4620      	mov	r0, r4
 8002f28:	f000 f922 	bl	8003170 <__multadd>
 8002f2c:	45b8      	cmp	r8, r7
 8002f2e:	4682      	mov	sl, r0
 8002f30:	f04f 0300 	mov.w	r3, #0
 8002f34:	f04f 020a 	mov.w	r2, #10
 8002f38:	4641      	mov	r1, r8
 8002f3a:	4620      	mov	r0, r4
 8002f3c:	d107      	bne.n	8002f4e <_dtoa_r+0xb1e>
 8002f3e:	f000 f917 	bl	8003170 <__multadd>
 8002f42:	4680      	mov	r8, r0
 8002f44:	4607      	mov	r7, r0
 8002f46:	9b04      	ldr	r3, [sp, #16]
 8002f48:	3301      	adds	r3, #1
 8002f4a:	9304      	str	r3, [sp, #16]
 8002f4c:	e775      	b.n	8002e3a <_dtoa_r+0xa0a>
 8002f4e:	f000 f90f 	bl	8003170 <__multadd>
 8002f52:	4639      	mov	r1, r7
 8002f54:	4680      	mov	r8, r0
 8002f56:	2300      	movs	r3, #0
 8002f58:	220a      	movs	r2, #10
 8002f5a:	4620      	mov	r0, r4
 8002f5c:	f000 f908 	bl	8003170 <__multadd>
 8002f60:	4607      	mov	r7, r0
 8002f62:	e7f0      	b.n	8002f46 <_dtoa_r+0xb16>
 8002f64:	9b04      	ldr	r3, [sp, #16]
 8002f66:	9301      	str	r3, [sp, #4]
 8002f68:	9d00      	ldr	r5, [sp, #0]
 8002f6a:	4631      	mov	r1, r6
 8002f6c:	4650      	mov	r0, sl
 8002f6e:	f7ff f9d7 	bl	8002320 <quorem>
 8002f72:	f100 0930 	add.w	r9, r0, #48	; 0x30
 8002f76:	9b00      	ldr	r3, [sp, #0]
 8002f78:	f805 9b01 	strb.w	r9, [r5], #1
 8002f7c:	1aea      	subs	r2, r5, r3
 8002f7e:	9b01      	ldr	r3, [sp, #4]
 8002f80:	4293      	cmp	r3, r2
 8002f82:	dd07      	ble.n	8002f94 <_dtoa_r+0xb64>
 8002f84:	4651      	mov	r1, sl
 8002f86:	2300      	movs	r3, #0
 8002f88:	220a      	movs	r2, #10
 8002f8a:	4620      	mov	r0, r4
 8002f8c:	f000 f8f0 	bl	8003170 <__multadd>
 8002f90:	4682      	mov	sl, r0
 8002f92:	e7ea      	b.n	8002f6a <_dtoa_r+0xb3a>
 8002f94:	9b01      	ldr	r3, [sp, #4]
 8002f96:	2b00      	cmp	r3, #0
 8002f98:	bfc8      	it	gt
 8002f9a:	461d      	movgt	r5, r3
 8002f9c:	9b00      	ldr	r3, [sp, #0]
 8002f9e:	bfd8      	it	le
 8002fa0:	2501      	movle	r5, #1
 8002fa2:	441d      	add	r5, r3
 8002fa4:	f04f 0800 	mov.w	r8, #0
 8002fa8:	4651      	mov	r1, sl
 8002faa:	2201      	movs	r2, #1
 8002fac:	4620      	mov	r0, r4
 8002fae:	f000 fa8d 	bl	80034cc <__lshift>
 8002fb2:	4631      	mov	r1, r6
 8002fb4:	4682      	mov	sl, r0
 8002fb6:	f000 faf5 	bl	80035a4 <__mcmp>
 8002fba:	2800      	cmp	r0, #0
 8002fbc:	dc96      	bgt.n	8002eec <_dtoa_r+0xabc>
 8002fbe:	d102      	bne.n	8002fc6 <_dtoa_r+0xb96>
 8002fc0:	f019 0f01 	tst.w	r9, #1
 8002fc4:	d192      	bne.n	8002eec <_dtoa_r+0xabc>
 8002fc6:	462b      	mov	r3, r5
 8002fc8:	461d      	mov	r5, r3
 8002fca:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8002fce:	2a30      	cmp	r2, #48	; 0x30
 8002fd0:	d0fa      	beq.n	8002fc8 <_dtoa_r+0xb98>
 8002fd2:	e6dd      	b.n	8002d90 <_dtoa_r+0x960>
 8002fd4:	9a00      	ldr	r2, [sp, #0]
 8002fd6:	429a      	cmp	r2, r3
 8002fd8:	d189      	bne.n	8002eee <_dtoa_r+0xabe>
 8002fda:	f10b 0b01 	add.w	fp, fp, #1
 8002fde:	2331      	movs	r3, #49	; 0x31
 8002fe0:	e796      	b.n	8002f10 <_dtoa_r+0xae0>
 8002fe2:	4b0a      	ldr	r3, [pc, #40]	; (800300c <_dtoa_r+0xbdc>)
 8002fe4:	f7ff ba99 	b.w	800251a <_dtoa_r+0xea>
 8002fe8:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8002fea:	2b00      	cmp	r3, #0
 8002fec:	f47f aa6d 	bne.w	80024ca <_dtoa_r+0x9a>
 8002ff0:	4b07      	ldr	r3, [pc, #28]	; (8003010 <_dtoa_r+0xbe0>)
 8002ff2:	f7ff ba92 	b.w	800251a <_dtoa_r+0xea>
 8002ff6:	9b01      	ldr	r3, [sp, #4]
 8002ff8:	2b00      	cmp	r3, #0
 8002ffa:	dcb5      	bgt.n	8002f68 <_dtoa_r+0xb38>
 8002ffc:	9b07      	ldr	r3, [sp, #28]
 8002ffe:	2b02      	cmp	r3, #2
 8003000:	f73f aeb1 	bgt.w	8002d66 <_dtoa_r+0x936>
 8003004:	e7b0      	b.n	8002f68 <_dtoa_r+0xb38>
 8003006:	bf00      	nop
 8003008:	08004023 	.word	0x08004023
 800300c:	08003f47 	.word	0x08003f47
 8003010:	08003fa7 	.word	0x08003fa7

08003014 <_free_r>:
 8003014:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8003016:	2900      	cmp	r1, #0
 8003018:	d044      	beq.n	80030a4 <_free_r+0x90>
 800301a:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800301e:	9001      	str	r0, [sp, #4]
 8003020:	2b00      	cmp	r3, #0
 8003022:	f1a1 0404 	sub.w	r4, r1, #4
 8003026:	bfb8      	it	lt
 8003028:	18e4      	addlt	r4, r4, r3
 800302a:	f7fe fab1 	bl	8001590 <__malloc_lock>
 800302e:	4a1e      	ldr	r2, [pc, #120]	; (80030a8 <_free_r+0x94>)
 8003030:	9801      	ldr	r0, [sp, #4]
 8003032:	6813      	ldr	r3, [r2, #0]
 8003034:	b933      	cbnz	r3, 8003044 <_free_r+0x30>
 8003036:	6063      	str	r3, [r4, #4]
 8003038:	6014      	str	r4, [r2, #0]
 800303a:	b003      	add	sp, #12
 800303c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8003040:	f7fe baac 	b.w	800159c <__malloc_unlock>
 8003044:	42a3      	cmp	r3, r4
 8003046:	d908      	bls.n	800305a <_free_r+0x46>
 8003048:	6825      	ldr	r5, [r4, #0]
 800304a:	1961      	adds	r1, r4, r5
 800304c:	428b      	cmp	r3, r1
 800304e:	bf01      	itttt	eq
 8003050:	6819      	ldreq	r1, [r3, #0]
 8003052:	685b      	ldreq	r3, [r3, #4]
 8003054:	1949      	addeq	r1, r1, r5
 8003056:	6021      	streq	r1, [r4, #0]
 8003058:	e7ed      	b.n	8003036 <_free_r+0x22>
 800305a:	461a      	mov	r2, r3
 800305c:	685b      	ldr	r3, [r3, #4]
 800305e:	b10b      	cbz	r3, 8003064 <_free_r+0x50>
 8003060:	42a3      	cmp	r3, r4
 8003062:	d9fa      	bls.n	800305a <_free_r+0x46>
 8003064:	6811      	ldr	r1, [r2, #0]
 8003066:	1855      	adds	r5, r2, r1
 8003068:	42a5      	cmp	r5, r4
 800306a:	d10b      	bne.n	8003084 <_free_r+0x70>
 800306c:	6824      	ldr	r4, [r4, #0]
 800306e:	4421      	add	r1, r4
 8003070:	1854      	adds	r4, r2, r1
 8003072:	42a3      	cmp	r3, r4
 8003074:	6011      	str	r1, [r2, #0]
 8003076:	d1e0      	bne.n	800303a <_free_r+0x26>
 8003078:	681c      	ldr	r4, [r3, #0]
 800307a:	685b      	ldr	r3, [r3, #4]
 800307c:	6053      	str	r3, [r2, #4]
 800307e:	440c      	add	r4, r1
 8003080:	6014      	str	r4, [r2, #0]
 8003082:	e7da      	b.n	800303a <_free_r+0x26>
 8003084:	d902      	bls.n	800308c <_free_r+0x78>
 8003086:	230c      	movs	r3, #12
 8003088:	6003      	str	r3, [r0, #0]
 800308a:	e7d6      	b.n	800303a <_free_r+0x26>
 800308c:	6825      	ldr	r5, [r4, #0]
 800308e:	1961      	adds	r1, r4, r5
 8003090:	428b      	cmp	r3, r1
 8003092:	bf04      	itt	eq
 8003094:	6819      	ldreq	r1, [r3, #0]
 8003096:	685b      	ldreq	r3, [r3, #4]
 8003098:	6063      	str	r3, [r4, #4]
 800309a:	bf04      	itt	eq
 800309c:	1949      	addeq	r1, r1, r5
 800309e:	6021      	streq	r1, [r4, #0]
 80030a0:	6054      	str	r4, [r2, #4]
 80030a2:	e7ca      	b.n	800303a <_free_r+0x26>
 80030a4:	b003      	add	sp, #12
 80030a6:	bd30      	pop	{r4, r5, pc}
 80030a8:	20000224 	.word	0x20000224

080030ac <_Balloc>:
 80030ac:	b570      	push	{r4, r5, r6, lr}
 80030ae:	69c6      	ldr	r6, [r0, #28]
 80030b0:	4604      	mov	r4, r0
 80030b2:	460d      	mov	r5, r1
 80030b4:	b976      	cbnz	r6, 80030d4 <_Balloc+0x28>
 80030b6:	2010      	movs	r0, #16
 80030b8:	f7fe f9c2 	bl	8001440 <malloc>
 80030bc:	4602      	mov	r2, r0
 80030be:	61e0      	str	r0, [r4, #28]
 80030c0:	b920      	cbnz	r0, 80030cc <_Balloc+0x20>
 80030c2:	4b18      	ldr	r3, [pc, #96]	; (8003124 <_Balloc+0x78>)
 80030c4:	4818      	ldr	r0, [pc, #96]	; (8003128 <_Balloc+0x7c>)
 80030c6:	216b      	movs	r1, #107	; 0x6b
 80030c8:	f7ff f90c 	bl	80022e4 <__assert_func>
 80030cc:	e9c0 6601 	strd	r6, r6, [r0, #4]
 80030d0:	6006      	str	r6, [r0, #0]
 80030d2:	60c6      	str	r6, [r0, #12]
 80030d4:	69e6      	ldr	r6, [r4, #28]
 80030d6:	68f3      	ldr	r3, [r6, #12]
 80030d8:	b183      	cbz	r3, 80030fc <_Balloc+0x50>
 80030da:	69e3      	ldr	r3, [r4, #28]
 80030dc:	68db      	ldr	r3, [r3, #12]
 80030de:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 80030e2:	b9b8      	cbnz	r0, 8003114 <_Balloc+0x68>
 80030e4:	2101      	movs	r1, #1
 80030e6:	fa01 f605 	lsl.w	r6, r1, r5
 80030ea:	1d72      	adds	r2, r6, #5
 80030ec:	0092      	lsls	r2, r2, #2
 80030ee:	4620      	mov	r0, r4
 80030f0:	f000 fde7 	bl	8003cc2 <_calloc_r>
 80030f4:	b160      	cbz	r0, 8003110 <_Balloc+0x64>
 80030f6:	e9c0 5601 	strd	r5, r6, [r0, #4]
 80030fa:	e00e      	b.n	800311a <_Balloc+0x6e>
 80030fc:	2221      	movs	r2, #33	; 0x21
 80030fe:	2104      	movs	r1, #4
 8003100:	4620      	mov	r0, r4
 8003102:	f000 fdde 	bl	8003cc2 <_calloc_r>
 8003106:	69e3      	ldr	r3, [r4, #28]
 8003108:	60f0      	str	r0, [r6, #12]
 800310a:	68db      	ldr	r3, [r3, #12]
 800310c:	2b00      	cmp	r3, #0
 800310e:	d1e4      	bne.n	80030da <_Balloc+0x2e>
 8003110:	2000      	movs	r0, #0
 8003112:	bd70      	pop	{r4, r5, r6, pc}
 8003114:	6802      	ldr	r2, [r0, #0]
 8003116:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 800311a:	2300      	movs	r3, #0
 800311c:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8003120:	e7f7      	b.n	8003112 <_Balloc+0x66>
 8003122:	bf00      	nop
 8003124:	08003fb4 	.word	0x08003fb4
 8003128:	08004034 	.word	0x08004034

0800312c <_Bfree>:
 800312c:	b570      	push	{r4, r5, r6, lr}
 800312e:	69c6      	ldr	r6, [r0, #28]
 8003130:	4605      	mov	r5, r0
 8003132:	460c      	mov	r4, r1
 8003134:	b976      	cbnz	r6, 8003154 <_Bfree+0x28>
 8003136:	2010      	movs	r0, #16
 8003138:	f7fe f982 	bl	8001440 <malloc>
 800313c:	4602      	mov	r2, r0
 800313e:	61e8      	str	r0, [r5, #28]
 8003140:	b920      	cbnz	r0, 800314c <_Bfree+0x20>
 8003142:	4b09      	ldr	r3, [pc, #36]	; (8003168 <_Bfree+0x3c>)
 8003144:	4809      	ldr	r0, [pc, #36]	; (800316c <_Bfree+0x40>)
 8003146:	218f      	movs	r1, #143	; 0x8f
 8003148:	f7ff f8cc 	bl	80022e4 <__assert_func>
 800314c:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8003150:	6006      	str	r6, [r0, #0]
 8003152:	60c6      	str	r6, [r0, #12]
 8003154:	b13c      	cbz	r4, 8003166 <_Bfree+0x3a>
 8003156:	69eb      	ldr	r3, [r5, #28]
 8003158:	6862      	ldr	r2, [r4, #4]
 800315a:	68db      	ldr	r3, [r3, #12]
 800315c:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8003160:	6021      	str	r1, [r4, #0]
 8003162:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8003166:	bd70      	pop	{r4, r5, r6, pc}
 8003168:	08003fb4 	.word	0x08003fb4
 800316c:	08004034 	.word	0x08004034

08003170 <__multadd>:
 8003170:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003174:	690d      	ldr	r5, [r1, #16]
 8003176:	4607      	mov	r7, r0
 8003178:	460c      	mov	r4, r1
 800317a:	461e      	mov	r6, r3
 800317c:	f101 0c14 	add.w	ip, r1, #20
 8003180:	2000      	movs	r0, #0
 8003182:	f8dc 3000 	ldr.w	r3, [ip]
 8003186:	b299      	uxth	r1, r3
 8003188:	fb02 6101 	mla	r1, r2, r1, r6
 800318c:	0c1e      	lsrs	r6, r3, #16
 800318e:	0c0b      	lsrs	r3, r1, #16
 8003190:	fb02 3306 	mla	r3, r2, r6, r3
 8003194:	b289      	uxth	r1, r1
 8003196:	3001      	adds	r0, #1
 8003198:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 800319c:	4285      	cmp	r5, r0
 800319e:	f84c 1b04 	str.w	r1, [ip], #4
 80031a2:	ea4f 4613 	mov.w	r6, r3, lsr #16
 80031a6:	dcec      	bgt.n	8003182 <__multadd+0x12>
 80031a8:	b30e      	cbz	r6, 80031ee <__multadd+0x7e>
 80031aa:	68a3      	ldr	r3, [r4, #8]
 80031ac:	42ab      	cmp	r3, r5
 80031ae:	dc19      	bgt.n	80031e4 <__multadd+0x74>
 80031b0:	6861      	ldr	r1, [r4, #4]
 80031b2:	4638      	mov	r0, r7
 80031b4:	3101      	adds	r1, #1
 80031b6:	f7ff ff79 	bl	80030ac <_Balloc>
 80031ba:	4680      	mov	r8, r0
 80031bc:	b928      	cbnz	r0, 80031ca <__multadd+0x5a>
 80031be:	4602      	mov	r2, r0
 80031c0:	4b0c      	ldr	r3, [pc, #48]	; (80031f4 <__multadd+0x84>)
 80031c2:	480d      	ldr	r0, [pc, #52]	; (80031f8 <__multadd+0x88>)
 80031c4:	21ba      	movs	r1, #186	; 0xba
 80031c6:	f7ff f88d 	bl	80022e4 <__assert_func>
 80031ca:	6922      	ldr	r2, [r4, #16]
 80031cc:	3202      	adds	r2, #2
 80031ce:	f104 010c 	add.w	r1, r4, #12
 80031d2:	0092      	lsls	r2, r2, #2
 80031d4:	300c      	adds	r0, #12
 80031d6:	f7ff f876 	bl	80022c6 <memcpy>
 80031da:	4621      	mov	r1, r4
 80031dc:	4638      	mov	r0, r7
 80031de:	f7ff ffa5 	bl	800312c <_Bfree>
 80031e2:	4644      	mov	r4, r8
 80031e4:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 80031e8:	3501      	adds	r5, #1
 80031ea:	615e      	str	r6, [r3, #20]
 80031ec:	6125      	str	r5, [r4, #16]
 80031ee:	4620      	mov	r0, r4
 80031f0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80031f4:	08004023 	.word	0x08004023
 80031f8:	08004034 	.word	0x08004034

080031fc <__hi0bits>:
 80031fc:	0c03      	lsrs	r3, r0, #16
 80031fe:	041b      	lsls	r3, r3, #16
 8003200:	b9d3      	cbnz	r3, 8003238 <__hi0bits+0x3c>
 8003202:	0400      	lsls	r0, r0, #16
 8003204:	2310      	movs	r3, #16
 8003206:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 800320a:	bf04      	itt	eq
 800320c:	0200      	lsleq	r0, r0, #8
 800320e:	3308      	addeq	r3, #8
 8003210:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
 8003214:	bf04      	itt	eq
 8003216:	0100      	lsleq	r0, r0, #4
 8003218:	3304      	addeq	r3, #4
 800321a:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
 800321e:	bf04      	itt	eq
 8003220:	0080      	lsleq	r0, r0, #2
 8003222:	3302      	addeq	r3, #2
 8003224:	2800      	cmp	r0, #0
 8003226:	db05      	blt.n	8003234 <__hi0bits+0x38>
 8003228:	f010 4f80 	tst.w	r0, #1073741824	; 0x40000000
 800322c:	f103 0301 	add.w	r3, r3, #1
 8003230:	bf08      	it	eq
 8003232:	2320      	moveq	r3, #32
 8003234:	4618      	mov	r0, r3
 8003236:	4770      	bx	lr
 8003238:	2300      	movs	r3, #0
 800323a:	e7e4      	b.n	8003206 <__hi0bits+0xa>

0800323c <__lo0bits>:
 800323c:	6803      	ldr	r3, [r0, #0]
 800323e:	f013 0207 	ands.w	r2, r3, #7
 8003242:	d00c      	beq.n	800325e <__lo0bits+0x22>
 8003244:	07d9      	lsls	r1, r3, #31
 8003246:	d422      	bmi.n	800328e <__lo0bits+0x52>
 8003248:	079a      	lsls	r2, r3, #30
 800324a:	bf49      	itett	mi
 800324c:	085b      	lsrmi	r3, r3, #1
 800324e:	089b      	lsrpl	r3, r3, #2
 8003250:	6003      	strmi	r3, [r0, #0]
 8003252:	2201      	movmi	r2, #1
 8003254:	bf5c      	itt	pl
 8003256:	6003      	strpl	r3, [r0, #0]
 8003258:	2202      	movpl	r2, #2
 800325a:	4610      	mov	r0, r2
 800325c:	4770      	bx	lr
 800325e:	b299      	uxth	r1, r3
 8003260:	b909      	cbnz	r1, 8003266 <__lo0bits+0x2a>
 8003262:	0c1b      	lsrs	r3, r3, #16
 8003264:	2210      	movs	r2, #16
 8003266:	b2d9      	uxtb	r1, r3
 8003268:	b909      	cbnz	r1, 800326e <__lo0bits+0x32>
 800326a:	3208      	adds	r2, #8
 800326c:	0a1b      	lsrs	r3, r3, #8
 800326e:	0719      	lsls	r1, r3, #28
 8003270:	bf04      	itt	eq
 8003272:	091b      	lsreq	r3, r3, #4
 8003274:	3204      	addeq	r2, #4
 8003276:	0799      	lsls	r1, r3, #30
 8003278:	bf04      	itt	eq
 800327a:	089b      	lsreq	r3, r3, #2
 800327c:	3202      	addeq	r2, #2
 800327e:	07d9      	lsls	r1, r3, #31
 8003280:	d403      	bmi.n	800328a <__lo0bits+0x4e>
 8003282:	085b      	lsrs	r3, r3, #1
 8003284:	f102 0201 	add.w	r2, r2, #1
 8003288:	d003      	beq.n	8003292 <__lo0bits+0x56>
 800328a:	6003      	str	r3, [r0, #0]
 800328c:	e7e5      	b.n	800325a <__lo0bits+0x1e>
 800328e:	2200      	movs	r2, #0
 8003290:	e7e3      	b.n	800325a <__lo0bits+0x1e>
 8003292:	2220      	movs	r2, #32
 8003294:	e7e1      	b.n	800325a <__lo0bits+0x1e>
	...

08003298 <__i2b>:
 8003298:	b510      	push	{r4, lr}
 800329a:	460c      	mov	r4, r1
 800329c:	2101      	movs	r1, #1
 800329e:	f7ff ff05 	bl	80030ac <_Balloc>
 80032a2:	4602      	mov	r2, r0
 80032a4:	b928      	cbnz	r0, 80032b2 <__i2b+0x1a>
 80032a6:	4b05      	ldr	r3, [pc, #20]	; (80032bc <__i2b+0x24>)
 80032a8:	4805      	ldr	r0, [pc, #20]	; (80032c0 <__i2b+0x28>)
 80032aa:	f240 1145 	movw	r1, #325	; 0x145
 80032ae:	f7ff f819 	bl	80022e4 <__assert_func>
 80032b2:	2301      	movs	r3, #1
 80032b4:	6144      	str	r4, [r0, #20]
 80032b6:	6103      	str	r3, [r0, #16]
 80032b8:	bd10      	pop	{r4, pc}
 80032ba:	bf00      	nop
 80032bc:	08004023 	.word	0x08004023
 80032c0:	08004034 	.word	0x08004034

080032c4 <__multiply>:
 80032c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80032c8:	4691      	mov	r9, r2
 80032ca:	690a      	ldr	r2, [r1, #16]
 80032cc:	f8d9 3010 	ldr.w	r3, [r9, #16]
 80032d0:	429a      	cmp	r2, r3
 80032d2:	bfb8      	it	lt
 80032d4:	460b      	movlt	r3, r1
 80032d6:	460c      	mov	r4, r1
 80032d8:	bfbc      	itt	lt
 80032da:	464c      	movlt	r4, r9
 80032dc:	4699      	movlt	r9, r3
 80032de:	6927      	ldr	r7, [r4, #16]
 80032e0:	f8d9 a010 	ldr.w	sl, [r9, #16]
 80032e4:	68a3      	ldr	r3, [r4, #8]
 80032e6:	6861      	ldr	r1, [r4, #4]
 80032e8:	eb07 060a 	add.w	r6, r7, sl
 80032ec:	42b3      	cmp	r3, r6
 80032ee:	b085      	sub	sp, #20
 80032f0:	bfb8      	it	lt
 80032f2:	3101      	addlt	r1, #1
 80032f4:	f7ff feda 	bl	80030ac <_Balloc>
 80032f8:	b930      	cbnz	r0, 8003308 <__multiply+0x44>
 80032fa:	4602      	mov	r2, r0
 80032fc:	4b44      	ldr	r3, [pc, #272]	; (8003410 <__multiply+0x14c>)
 80032fe:	4845      	ldr	r0, [pc, #276]	; (8003414 <__multiply+0x150>)
 8003300:	f44f 71b1 	mov.w	r1, #354	; 0x162
 8003304:	f7fe ffee 	bl	80022e4 <__assert_func>
 8003308:	f100 0514 	add.w	r5, r0, #20
 800330c:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 8003310:	462b      	mov	r3, r5
 8003312:	2200      	movs	r2, #0
 8003314:	4543      	cmp	r3, r8
 8003316:	d321      	bcc.n	800335c <__multiply+0x98>
 8003318:	f104 0314 	add.w	r3, r4, #20
 800331c:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 8003320:	f109 0314 	add.w	r3, r9, #20
 8003324:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 8003328:	9202      	str	r2, [sp, #8]
 800332a:	1b3a      	subs	r2, r7, r4
 800332c:	3a15      	subs	r2, #21
 800332e:	f022 0203 	bic.w	r2, r2, #3
 8003332:	3204      	adds	r2, #4
 8003334:	f104 0115 	add.w	r1, r4, #21
 8003338:	428f      	cmp	r7, r1
 800333a:	bf38      	it	cc
 800333c:	2204      	movcc	r2, #4
 800333e:	9201      	str	r2, [sp, #4]
 8003340:	9a02      	ldr	r2, [sp, #8]
 8003342:	9303      	str	r3, [sp, #12]
 8003344:	429a      	cmp	r2, r3
 8003346:	d80c      	bhi.n	8003362 <__multiply+0x9e>
 8003348:	2e00      	cmp	r6, #0
 800334a:	dd03      	ble.n	8003354 <__multiply+0x90>
 800334c:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 8003350:	2b00      	cmp	r3, #0
 8003352:	d05b      	beq.n	800340c <__multiply+0x148>
 8003354:	6106      	str	r6, [r0, #16]
 8003356:	b005      	add	sp, #20
 8003358:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800335c:	f843 2b04 	str.w	r2, [r3], #4
 8003360:	e7d8      	b.n	8003314 <__multiply+0x50>
 8003362:	f8b3 a000 	ldrh.w	sl, [r3]
 8003366:	f1ba 0f00 	cmp.w	sl, #0
 800336a:	d024      	beq.n	80033b6 <__multiply+0xf2>
 800336c:	f104 0e14 	add.w	lr, r4, #20
 8003370:	46a9      	mov	r9, r5
 8003372:	f04f 0c00 	mov.w	ip, #0
 8003376:	f85e 2b04 	ldr.w	r2, [lr], #4
 800337a:	f8d9 1000 	ldr.w	r1, [r9]
 800337e:	fa1f fb82 	uxth.w	fp, r2
 8003382:	b289      	uxth	r1, r1
 8003384:	fb0a 110b 	mla	r1, sl, fp, r1
 8003388:	ea4f 4b12 	mov.w	fp, r2, lsr #16
 800338c:	f8d9 2000 	ldr.w	r2, [r9]
 8003390:	4461      	add	r1, ip
 8003392:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 8003396:	fb0a c20b 	mla	r2, sl, fp, ip
 800339a:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 800339e:	b289      	uxth	r1, r1
 80033a0:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 80033a4:	4577      	cmp	r7, lr
 80033a6:	f849 1b04 	str.w	r1, [r9], #4
 80033aa:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 80033ae:	d8e2      	bhi.n	8003376 <__multiply+0xb2>
 80033b0:	9a01      	ldr	r2, [sp, #4]
 80033b2:	f845 c002 	str.w	ip, [r5, r2]
 80033b6:	9a03      	ldr	r2, [sp, #12]
 80033b8:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 80033bc:	3304      	adds	r3, #4
 80033be:	f1b9 0f00 	cmp.w	r9, #0
 80033c2:	d021      	beq.n	8003408 <__multiply+0x144>
 80033c4:	6829      	ldr	r1, [r5, #0]
 80033c6:	f104 0c14 	add.w	ip, r4, #20
 80033ca:	46ae      	mov	lr, r5
 80033cc:	f04f 0a00 	mov.w	sl, #0
 80033d0:	f8bc b000 	ldrh.w	fp, [ip]
 80033d4:	f8be 2002 	ldrh.w	r2, [lr, #2]
 80033d8:	fb09 220b 	mla	r2, r9, fp, r2
 80033dc:	4452      	add	r2, sl
 80033de:	b289      	uxth	r1, r1
 80033e0:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 80033e4:	f84e 1b04 	str.w	r1, [lr], #4
 80033e8:	f85c 1b04 	ldr.w	r1, [ip], #4
 80033ec:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 80033f0:	f8be 1000 	ldrh.w	r1, [lr]
 80033f4:	fb09 110a 	mla	r1, r9, sl, r1
 80033f8:	eb01 4112 	add.w	r1, r1, r2, lsr #16
 80033fc:	4567      	cmp	r7, ip
 80033fe:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8003402:	d8e5      	bhi.n	80033d0 <__multiply+0x10c>
 8003404:	9a01      	ldr	r2, [sp, #4]
 8003406:	50a9      	str	r1, [r5, r2]
 8003408:	3504      	adds	r5, #4
 800340a:	e799      	b.n	8003340 <__multiply+0x7c>
 800340c:	3e01      	subs	r6, #1
 800340e:	e79b      	b.n	8003348 <__multiply+0x84>
 8003410:	08004023 	.word	0x08004023
 8003414:	08004034 	.word	0x08004034

08003418 <__pow5mult>:
 8003418:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800341c:	4615      	mov	r5, r2
 800341e:	f012 0203 	ands.w	r2, r2, #3
 8003422:	4606      	mov	r6, r0
 8003424:	460f      	mov	r7, r1
 8003426:	d007      	beq.n	8003438 <__pow5mult+0x20>
 8003428:	4c25      	ldr	r4, [pc, #148]	; (80034c0 <__pow5mult+0xa8>)
 800342a:	3a01      	subs	r2, #1
 800342c:	2300      	movs	r3, #0
 800342e:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8003432:	f7ff fe9d 	bl	8003170 <__multadd>
 8003436:	4607      	mov	r7, r0
 8003438:	10ad      	asrs	r5, r5, #2
 800343a:	d03d      	beq.n	80034b8 <__pow5mult+0xa0>
 800343c:	69f4      	ldr	r4, [r6, #28]
 800343e:	b97c      	cbnz	r4, 8003460 <__pow5mult+0x48>
 8003440:	2010      	movs	r0, #16
 8003442:	f7fd fffd 	bl	8001440 <malloc>
 8003446:	4602      	mov	r2, r0
 8003448:	61f0      	str	r0, [r6, #28]
 800344a:	b928      	cbnz	r0, 8003458 <__pow5mult+0x40>
 800344c:	4b1d      	ldr	r3, [pc, #116]	; (80034c4 <__pow5mult+0xac>)
 800344e:	481e      	ldr	r0, [pc, #120]	; (80034c8 <__pow5mult+0xb0>)
 8003450:	f240 11b3 	movw	r1, #435	; 0x1b3
 8003454:	f7fe ff46 	bl	80022e4 <__assert_func>
 8003458:	e9c0 4401 	strd	r4, r4, [r0, #4]
 800345c:	6004      	str	r4, [r0, #0]
 800345e:	60c4      	str	r4, [r0, #12]
 8003460:	f8d6 801c 	ldr.w	r8, [r6, #28]
 8003464:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8003468:	b94c      	cbnz	r4, 800347e <__pow5mult+0x66>
 800346a:	f240 2171 	movw	r1, #625	; 0x271
 800346e:	4630      	mov	r0, r6
 8003470:	f7ff ff12 	bl	8003298 <__i2b>
 8003474:	2300      	movs	r3, #0
 8003476:	f8c8 0008 	str.w	r0, [r8, #8]
 800347a:	4604      	mov	r4, r0
 800347c:	6003      	str	r3, [r0, #0]
 800347e:	f04f 0900 	mov.w	r9, #0
 8003482:	07eb      	lsls	r3, r5, #31
 8003484:	d50a      	bpl.n	800349c <__pow5mult+0x84>
 8003486:	4639      	mov	r1, r7
 8003488:	4622      	mov	r2, r4
 800348a:	4630      	mov	r0, r6
 800348c:	f7ff ff1a 	bl	80032c4 <__multiply>
 8003490:	4639      	mov	r1, r7
 8003492:	4680      	mov	r8, r0
 8003494:	4630      	mov	r0, r6
 8003496:	f7ff fe49 	bl	800312c <_Bfree>
 800349a:	4647      	mov	r7, r8
 800349c:	106d      	asrs	r5, r5, #1
 800349e:	d00b      	beq.n	80034b8 <__pow5mult+0xa0>
 80034a0:	6820      	ldr	r0, [r4, #0]
 80034a2:	b938      	cbnz	r0, 80034b4 <__pow5mult+0x9c>
 80034a4:	4622      	mov	r2, r4
 80034a6:	4621      	mov	r1, r4
 80034a8:	4630      	mov	r0, r6
 80034aa:	f7ff ff0b 	bl	80032c4 <__multiply>
 80034ae:	6020      	str	r0, [r4, #0]
 80034b0:	f8c0 9000 	str.w	r9, [r0]
 80034b4:	4604      	mov	r4, r0
 80034b6:	e7e4      	b.n	8003482 <__pow5mult+0x6a>
 80034b8:	4638      	mov	r0, r7
 80034ba:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80034be:	bf00      	nop
 80034c0:	08004180 	.word	0x08004180
 80034c4:	08003fb4 	.word	0x08003fb4
 80034c8:	08004034 	.word	0x08004034

080034cc <__lshift>:
 80034cc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80034d0:	460c      	mov	r4, r1
 80034d2:	6849      	ldr	r1, [r1, #4]
 80034d4:	6923      	ldr	r3, [r4, #16]
 80034d6:	eb03 1862 	add.w	r8, r3, r2, asr #5
 80034da:	68a3      	ldr	r3, [r4, #8]
 80034dc:	4607      	mov	r7, r0
 80034de:	4691      	mov	r9, r2
 80034e0:	ea4f 1a62 	mov.w	sl, r2, asr #5
 80034e4:	f108 0601 	add.w	r6, r8, #1
 80034e8:	42b3      	cmp	r3, r6
 80034ea:	db0b      	blt.n	8003504 <__lshift+0x38>
 80034ec:	4638      	mov	r0, r7
 80034ee:	f7ff fddd 	bl	80030ac <_Balloc>
 80034f2:	4605      	mov	r5, r0
 80034f4:	b948      	cbnz	r0, 800350a <__lshift+0x3e>
 80034f6:	4602      	mov	r2, r0
 80034f8:	4b28      	ldr	r3, [pc, #160]	; (800359c <__lshift+0xd0>)
 80034fa:	4829      	ldr	r0, [pc, #164]	; (80035a0 <__lshift+0xd4>)
 80034fc:	f44f 71ef 	mov.w	r1, #478	; 0x1de
 8003500:	f7fe fef0 	bl	80022e4 <__assert_func>
 8003504:	3101      	adds	r1, #1
 8003506:	005b      	lsls	r3, r3, #1
 8003508:	e7ee      	b.n	80034e8 <__lshift+0x1c>
 800350a:	2300      	movs	r3, #0
 800350c:	f100 0114 	add.w	r1, r0, #20
 8003510:	f100 0210 	add.w	r2, r0, #16
 8003514:	4618      	mov	r0, r3
 8003516:	4553      	cmp	r3, sl
 8003518:	db33      	blt.n	8003582 <__lshift+0xb6>
 800351a:	6920      	ldr	r0, [r4, #16]
 800351c:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8003520:	f104 0314 	add.w	r3, r4, #20
 8003524:	f019 091f 	ands.w	r9, r9, #31
 8003528:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 800352c:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8003530:	d02b      	beq.n	800358a <__lshift+0xbe>
 8003532:	f1c9 0e20 	rsb	lr, r9, #32
 8003536:	468a      	mov	sl, r1
 8003538:	2200      	movs	r2, #0
 800353a:	6818      	ldr	r0, [r3, #0]
 800353c:	fa00 f009 	lsl.w	r0, r0, r9
 8003540:	4310      	orrs	r0, r2
 8003542:	f84a 0b04 	str.w	r0, [sl], #4
 8003546:	f853 2b04 	ldr.w	r2, [r3], #4
 800354a:	459c      	cmp	ip, r3
 800354c:	fa22 f20e 	lsr.w	r2, r2, lr
 8003550:	d8f3      	bhi.n	800353a <__lshift+0x6e>
 8003552:	ebac 0304 	sub.w	r3, ip, r4
 8003556:	3b15      	subs	r3, #21
 8003558:	f023 0303 	bic.w	r3, r3, #3
 800355c:	3304      	adds	r3, #4
 800355e:	f104 0015 	add.w	r0, r4, #21
 8003562:	4584      	cmp	ip, r0
 8003564:	bf38      	it	cc
 8003566:	2304      	movcc	r3, #4
 8003568:	50ca      	str	r2, [r1, r3]
 800356a:	b10a      	cbz	r2, 8003570 <__lshift+0xa4>
 800356c:	f108 0602 	add.w	r6, r8, #2
 8003570:	3e01      	subs	r6, #1
 8003572:	4638      	mov	r0, r7
 8003574:	612e      	str	r6, [r5, #16]
 8003576:	4621      	mov	r1, r4
 8003578:	f7ff fdd8 	bl	800312c <_Bfree>
 800357c:	4628      	mov	r0, r5
 800357e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003582:	f842 0f04 	str.w	r0, [r2, #4]!
 8003586:	3301      	adds	r3, #1
 8003588:	e7c5      	b.n	8003516 <__lshift+0x4a>
 800358a:	3904      	subs	r1, #4
 800358c:	f853 2b04 	ldr.w	r2, [r3], #4
 8003590:	f841 2f04 	str.w	r2, [r1, #4]!
 8003594:	459c      	cmp	ip, r3
 8003596:	d8f9      	bhi.n	800358c <__lshift+0xc0>
 8003598:	e7ea      	b.n	8003570 <__lshift+0xa4>
 800359a:	bf00      	nop
 800359c:	08004023 	.word	0x08004023
 80035a0:	08004034 	.word	0x08004034

080035a4 <__mcmp>:
 80035a4:	b530      	push	{r4, r5, lr}
 80035a6:	6902      	ldr	r2, [r0, #16]
 80035a8:	690c      	ldr	r4, [r1, #16]
 80035aa:	1b12      	subs	r2, r2, r4
 80035ac:	d10e      	bne.n	80035cc <__mcmp+0x28>
 80035ae:	f100 0314 	add.w	r3, r0, #20
 80035b2:	3114      	adds	r1, #20
 80035b4:	eb03 0084 	add.w	r0, r3, r4, lsl #2
 80035b8:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 80035bc:	f850 5d04 	ldr.w	r5, [r0, #-4]!
 80035c0:	f851 4d04 	ldr.w	r4, [r1, #-4]!
 80035c4:	42a5      	cmp	r5, r4
 80035c6:	d003      	beq.n	80035d0 <__mcmp+0x2c>
 80035c8:	d305      	bcc.n	80035d6 <__mcmp+0x32>
 80035ca:	2201      	movs	r2, #1
 80035cc:	4610      	mov	r0, r2
 80035ce:	bd30      	pop	{r4, r5, pc}
 80035d0:	4283      	cmp	r3, r0
 80035d2:	d3f3      	bcc.n	80035bc <__mcmp+0x18>
 80035d4:	e7fa      	b.n	80035cc <__mcmp+0x28>
 80035d6:	f04f 32ff 	mov.w	r2, #4294967295
 80035da:	e7f7      	b.n	80035cc <__mcmp+0x28>

080035dc <__mdiff>:
 80035dc:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80035e0:	460c      	mov	r4, r1
 80035e2:	4606      	mov	r6, r0
 80035e4:	4611      	mov	r1, r2
 80035e6:	4620      	mov	r0, r4
 80035e8:	4690      	mov	r8, r2
 80035ea:	f7ff ffdb 	bl	80035a4 <__mcmp>
 80035ee:	1e05      	subs	r5, r0, #0
 80035f0:	d110      	bne.n	8003614 <__mdiff+0x38>
 80035f2:	4629      	mov	r1, r5
 80035f4:	4630      	mov	r0, r6
 80035f6:	f7ff fd59 	bl	80030ac <_Balloc>
 80035fa:	b930      	cbnz	r0, 800360a <__mdiff+0x2e>
 80035fc:	4b3a      	ldr	r3, [pc, #232]	; (80036e8 <__mdiff+0x10c>)
 80035fe:	4602      	mov	r2, r0
 8003600:	f240 2137 	movw	r1, #567	; 0x237
 8003604:	4839      	ldr	r0, [pc, #228]	; (80036ec <__mdiff+0x110>)
 8003606:	f7fe fe6d 	bl	80022e4 <__assert_func>
 800360a:	2301      	movs	r3, #1
 800360c:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8003610:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003614:	bfa4      	itt	ge
 8003616:	4643      	movge	r3, r8
 8003618:	46a0      	movge	r8, r4
 800361a:	4630      	mov	r0, r6
 800361c:	f8d8 1004 	ldr.w	r1, [r8, #4]
 8003620:	bfa6      	itte	ge
 8003622:	461c      	movge	r4, r3
 8003624:	2500      	movge	r5, #0
 8003626:	2501      	movlt	r5, #1
 8003628:	f7ff fd40 	bl	80030ac <_Balloc>
 800362c:	b920      	cbnz	r0, 8003638 <__mdiff+0x5c>
 800362e:	4b2e      	ldr	r3, [pc, #184]	; (80036e8 <__mdiff+0x10c>)
 8003630:	4602      	mov	r2, r0
 8003632:	f240 2145 	movw	r1, #581	; 0x245
 8003636:	e7e5      	b.n	8003604 <__mdiff+0x28>
 8003638:	f8d8 7010 	ldr.w	r7, [r8, #16]
 800363c:	6926      	ldr	r6, [r4, #16]
 800363e:	60c5      	str	r5, [r0, #12]
 8003640:	f104 0914 	add.w	r9, r4, #20
 8003644:	f108 0514 	add.w	r5, r8, #20
 8003648:	f100 0e14 	add.w	lr, r0, #20
 800364c:	eb05 0c87 	add.w	ip, r5, r7, lsl #2
 8003650:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 8003654:	f108 0210 	add.w	r2, r8, #16
 8003658:	46f2      	mov	sl, lr
 800365a:	2100      	movs	r1, #0
 800365c:	f859 3b04 	ldr.w	r3, [r9], #4
 8003660:	f852 bf04 	ldr.w	fp, [r2, #4]!
 8003664:	fa11 f88b 	uxtah	r8, r1, fp
 8003668:	b299      	uxth	r1, r3
 800366a:	0c1b      	lsrs	r3, r3, #16
 800366c:	eba8 0801 	sub.w	r8, r8, r1
 8003670:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 8003674:	eb03 4328 	add.w	r3, r3, r8, asr #16
 8003678:	fa1f f888 	uxth.w	r8, r8
 800367c:	1419      	asrs	r1, r3, #16
 800367e:	454e      	cmp	r6, r9
 8003680:	ea48 4303 	orr.w	r3, r8, r3, lsl #16
 8003684:	f84a 3b04 	str.w	r3, [sl], #4
 8003688:	d8e8      	bhi.n	800365c <__mdiff+0x80>
 800368a:	1b33      	subs	r3, r6, r4
 800368c:	3b15      	subs	r3, #21
 800368e:	f023 0303 	bic.w	r3, r3, #3
 8003692:	3304      	adds	r3, #4
 8003694:	3415      	adds	r4, #21
 8003696:	42a6      	cmp	r6, r4
 8003698:	bf38      	it	cc
 800369a:	2304      	movcc	r3, #4
 800369c:	441d      	add	r5, r3
 800369e:	4473      	add	r3, lr
 80036a0:	469e      	mov	lr, r3
 80036a2:	462e      	mov	r6, r5
 80036a4:	4566      	cmp	r6, ip
 80036a6:	d30e      	bcc.n	80036c6 <__mdiff+0xea>
 80036a8:	f10c 0203 	add.w	r2, ip, #3
 80036ac:	1b52      	subs	r2, r2, r5
 80036ae:	f022 0203 	bic.w	r2, r2, #3
 80036b2:	3d03      	subs	r5, #3
 80036b4:	45ac      	cmp	ip, r5
 80036b6:	bf38      	it	cc
 80036b8:	2200      	movcc	r2, #0
 80036ba:	4413      	add	r3, r2
 80036bc:	f853 2d04 	ldr.w	r2, [r3, #-4]!
 80036c0:	b17a      	cbz	r2, 80036e2 <__mdiff+0x106>
 80036c2:	6107      	str	r7, [r0, #16]
 80036c4:	e7a4      	b.n	8003610 <__mdiff+0x34>
 80036c6:	f856 8b04 	ldr.w	r8, [r6], #4
 80036ca:	fa11 f288 	uxtah	r2, r1, r8
 80036ce:	1414      	asrs	r4, r2, #16
 80036d0:	eb04 4418 	add.w	r4, r4, r8, lsr #16
 80036d4:	b292      	uxth	r2, r2
 80036d6:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 80036da:	f84e 2b04 	str.w	r2, [lr], #4
 80036de:	1421      	asrs	r1, r4, #16
 80036e0:	e7e0      	b.n	80036a4 <__mdiff+0xc8>
 80036e2:	3f01      	subs	r7, #1
 80036e4:	e7ea      	b.n	80036bc <__mdiff+0xe0>
 80036e6:	bf00      	nop
 80036e8:	08004023 	.word	0x08004023
 80036ec:	08004034 	.word	0x08004034

080036f0 <__d2b>:
 80036f0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80036f4:	460f      	mov	r7, r1
 80036f6:	2101      	movs	r1, #1
 80036f8:	ec59 8b10 	vmov	r8, r9, d0
 80036fc:	4616      	mov	r6, r2
 80036fe:	f7ff fcd5 	bl	80030ac <_Balloc>
 8003702:	4604      	mov	r4, r0
 8003704:	b930      	cbnz	r0, 8003714 <__d2b+0x24>
 8003706:	4602      	mov	r2, r0
 8003708:	4b24      	ldr	r3, [pc, #144]	; (800379c <__d2b+0xac>)
 800370a:	4825      	ldr	r0, [pc, #148]	; (80037a0 <__d2b+0xb0>)
 800370c:	f240 310f 	movw	r1, #783	; 0x30f
 8003710:	f7fe fde8 	bl	80022e4 <__assert_func>
 8003714:	f3c9 550a 	ubfx	r5, r9, #20, #11
 8003718:	f3c9 0313 	ubfx	r3, r9, #0, #20
 800371c:	bb2d      	cbnz	r5, 800376a <__d2b+0x7a>
 800371e:	9301      	str	r3, [sp, #4]
 8003720:	f1b8 0300 	subs.w	r3, r8, #0
 8003724:	d026      	beq.n	8003774 <__d2b+0x84>
 8003726:	4668      	mov	r0, sp
 8003728:	9300      	str	r3, [sp, #0]
 800372a:	f7ff fd87 	bl	800323c <__lo0bits>
 800372e:	e9dd 1200 	ldrd	r1, r2, [sp]
 8003732:	b1e8      	cbz	r0, 8003770 <__d2b+0x80>
 8003734:	f1c0 0320 	rsb	r3, r0, #32
 8003738:	fa02 f303 	lsl.w	r3, r2, r3
 800373c:	430b      	orrs	r3, r1
 800373e:	40c2      	lsrs	r2, r0
 8003740:	6163      	str	r3, [r4, #20]
 8003742:	9201      	str	r2, [sp, #4]
 8003744:	9b01      	ldr	r3, [sp, #4]
 8003746:	61a3      	str	r3, [r4, #24]
 8003748:	2b00      	cmp	r3, #0
 800374a:	bf14      	ite	ne
 800374c:	2202      	movne	r2, #2
 800374e:	2201      	moveq	r2, #1
 8003750:	6122      	str	r2, [r4, #16]
 8003752:	b1bd      	cbz	r5, 8003784 <__d2b+0x94>
 8003754:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 8003758:	4405      	add	r5, r0
 800375a:	603d      	str	r5, [r7, #0]
 800375c:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 8003760:	6030      	str	r0, [r6, #0]
 8003762:	4620      	mov	r0, r4
 8003764:	b003      	add	sp, #12
 8003766:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800376a:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800376e:	e7d6      	b.n	800371e <__d2b+0x2e>
 8003770:	6161      	str	r1, [r4, #20]
 8003772:	e7e7      	b.n	8003744 <__d2b+0x54>
 8003774:	a801      	add	r0, sp, #4
 8003776:	f7ff fd61 	bl	800323c <__lo0bits>
 800377a:	9b01      	ldr	r3, [sp, #4]
 800377c:	6163      	str	r3, [r4, #20]
 800377e:	3020      	adds	r0, #32
 8003780:	2201      	movs	r2, #1
 8003782:	e7e5      	b.n	8003750 <__d2b+0x60>
 8003784:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8003788:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 800378c:	6038      	str	r0, [r7, #0]
 800378e:	6918      	ldr	r0, [r3, #16]
 8003790:	f7ff fd34 	bl	80031fc <__hi0bits>
 8003794:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 8003798:	e7e2      	b.n	8003760 <__d2b+0x70>
 800379a:	bf00      	nop
 800379c:	08004023 	.word	0x08004023
 80037a0:	08004034 	.word	0x08004034

080037a4 <__sfputc_r>:
 80037a4:	6893      	ldr	r3, [r2, #8]
 80037a6:	3b01      	subs	r3, #1
 80037a8:	2b00      	cmp	r3, #0
 80037aa:	b410      	push	{r4}
 80037ac:	6093      	str	r3, [r2, #8]
 80037ae:	da08      	bge.n	80037c2 <__sfputc_r+0x1e>
 80037b0:	6994      	ldr	r4, [r2, #24]
 80037b2:	42a3      	cmp	r3, r4
 80037b4:	db01      	blt.n	80037ba <__sfputc_r+0x16>
 80037b6:	290a      	cmp	r1, #10
 80037b8:	d103      	bne.n	80037c2 <__sfputc_r+0x1e>
 80037ba:	f85d 4b04 	ldr.w	r4, [sp], #4
 80037be:	f7fe bc5e 	b.w	800207e <__swbuf_r>
 80037c2:	6813      	ldr	r3, [r2, #0]
 80037c4:	1c58      	adds	r0, r3, #1
 80037c6:	6010      	str	r0, [r2, #0]
 80037c8:	7019      	strb	r1, [r3, #0]
 80037ca:	4608      	mov	r0, r1
 80037cc:	f85d 4b04 	ldr.w	r4, [sp], #4
 80037d0:	4770      	bx	lr

080037d2 <__sfputs_r>:
 80037d2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80037d4:	4606      	mov	r6, r0
 80037d6:	460f      	mov	r7, r1
 80037d8:	4614      	mov	r4, r2
 80037da:	18d5      	adds	r5, r2, r3
 80037dc:	42ac      	cmp	r4, r5
 80037de:	d101      	bne.n	80037e4 <__sfputs_r+0x12>
 80037e0:	2000      	movs	r0, #0
 80037e2:	e007      	b.n	80037f4 <__sfputs_r+0x22>
 80037e4:	f814 1b01 	ldrb.w	r1, [r4], #1
 80037e8:	463a      	mov	r2, r7
 80037ea:	4630      	mov	r0, r6
 80037ec:	f7ff ffda 	bl	80037a4 <__sfputc_r>
 80037f0:	1c43      	adds	r3, r0, #1
 80037f2:	d1f3      	bne.n	80037dc <__sfputs_r+0xa>
 80037f4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080037f8 <_vfiprintf_r>:
 80037f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80037fc:	460d      	mov	r5, r1
 80037fe:	b09d      	sub	sp, #116	; 0x74
 8003800:	4614      	mov	r4, r2
 8003802:	4698      	mov	r8, r3
 8003804:	4606      	mov	r6, r0
 8003806:	b118      	cbz	r0, 8003810 <_vfiprintf_r+0x18>
 8003808:	6a03      	ldr	r3, [r0, #32]
 800380a:	b90b      	cbnz	r3, 8003810 <_vfiprintf_r+0x18>
 800380c:	f7fe fbbe 	bl	8001f8c <__sinit>
 8003810:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8003812:	07d9      	lsls	r1, r3, #31
 8003814:	d405      	bmi.n	8003822 <_vfiprintf_r+0x2a>
 8003816:	89ab      	ldrh	r3, [r5, #12]
 8003818:	059a      	lsls	r2, r3, #22
 800381a:	d402      	bmi.n	8003822 <_vfiprintf_r+0x2a>
 800381c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800381e:	f7fe fd50 	bl	80022c2 <__retarget_lock_acquire_recursive>
 8003822:	89ab      	ldrh	r3, [r5, #12]
 8003824:	071b      	lsls	r3, r3, #28
 8003826:	d501      	bpl.n	800382c <_vfiprintf_r+0x34>
 8003828:	692b      	ldr	r3, [r5, #16]
 800382a:	b99b      	cbnz	r3, 8003854 <_vfiprintf_r+0x5c>
 800382c:	4629      	mov	r1, r5
 800382e:	4630      	mov	r0, r6
 8003830:	f7fe fc62 	bl	80020f8 <__swsetup_r>
 8003834:	b170      	cbz	r0, 8003854 <_vfiprintf_r+0x5c>
 8003836:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8003838:	07dc      	lsls	r4, r3, #31
 800383a:	d504      	bpl.n	8003846 <_vfiprintf_r+0x4e>
 800383c:	f04f 30ff 	mov.w	r0, #4294967295
 8003840:	b01d      	add	sp, #116	; 0x74
 8003842:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003846:	89ab      	ldrh	r3, [r5, #12]
 8003848:	0598      	lsls	r0, r3, #22
 800384a:	d4f7      	bmi.n	800383c <_vfiprintf_r+0x44>
 800384c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800384e:	f7fe fd39 	bl	80022c4 <__retarget_lock_release_recursive>
 8003852:	e7f3      	b.n	800383c <_vfiprintf_r+0x44>
 8003854:	2300      	movs	r3, #0
 8003856:	9309      	str	r3, [sp, #36]	; 0x24
 8003858:	2320      	movs	r3, #32
 800385a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800385e:	f8cd 800c 	str.w	r8, [sp, #12]
 8003862:	2330      	movs	r3, #48	; 0x30
 8003864:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 8003a18 <_vfiprintf_r+0x220>
 8003868:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800386c:	f04f 0901 	mov.w	r9, #1
 8003870:	4623      	mov	r3, r4
 8003872:	469a      	mov	sl, r3
 8003874:	f813 2b01 	ldrb.w	r2, [r3], #1
 8003878:	b10a      	cbz	r2, 800387e <_vfiprintf_r+0x86>
 800387a:	2a25      	cmp	r2, #37	; 0x25
 800387c:	d1f9      	bne.n	8003872 <_vfiprintf_r+0x7a>
 800387e:	ebba 0b04 	subs.w	fp, sl, r4
 8003882:	d00b      	beq.n	800389c <_vfiprintf_r+0xa4>
 8003884:	465b      	mov	r3, fp
 8003886:	4622      	mov	r2, r4
 8003888:	4629      	mov	r1, r5
 800388a:	4630      	mov	r0, r6
 800388c:	f7ff ffa1 	bl	80037d2 <__sfputs_r>
 8003890:	3001      	adds	r0, #1
 8003892:	f000 80a9 	beq.w	80039e8 <_vfiprintf_r+0x1f0>
 8003896:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003898:	445a      	add	r2, fp
 800389a:	9209      	str	r2, [sp, #36]	; 0x24
 800389c:	f89a 3000 	ldrb.w	r3, [sl]
 80038a0:	2b00      	cmp	r3, #0
 80038a2:	f000 80a1 	beq.w	80039e8 <_vfiprintf_r+0x1f0>
 80038a6:	2300      	movs	r3, #0
 80038a8:	f04f 32ff 	mov.w	r2, #4294967295
 80038ac:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80038b0:	f10a 0a01 	add.w	sl, sl, #1
 80038b4:	9304      	str	r3, [sp, #16]
 80038b6:	9307      	str	r3, [sp, #28]
 80038b8:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80038bc:	931a      	str	r3, [sp, #104]	; 0x68
 80038be:	4654      	mov	r4, sl
 80038c0:	2205      	movs	r2, #5
 80038c2:	f814 1b01 	ldrb.w	r1, [r4], #1
 80038c6:	4854      	ldr	r0, [pc, #336]	; (8003a18 <_vfiprintf_r+0x220>)
 80038c8:	f7fc fc8a 	bl	80001e0 <memchr>
 80038cc:	9a04      	ldr	r2, [sp, #16]
 80038ce:	b9d8      	cbnz	r0, 8003908 <_vfiprintf_r+0x110>
 80038d0:	06d1      	lsls	r1, r2, #27
 80038d2:	bf44      	itt	mi
 80038d4:	2320      	movmi	r3, #32
 80038d6:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80038da:	0713      	lsls	r3, r2, #28
 80038dc:	bf44      	itt	mi
 80038de:	232b      	movmi	r3, #43	; 0x2b
 80038e0:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80038e4:	f89a 3000 	ldrb.w	r3, [sl]
 80038e8:	2b2a      	cmp	r3, #42	; 0x2a
 80038ea:	d015      	beq.n	8003918 <_vfiprintf_r+0x120>
 80038ec:	9a07      	ldr	r2, [sp, #28]
 80038ee:	4654      	mov	r4, sl
 80038f0:	2000      	movs	r0, #0
 80038f2:	f04f 0c0a 	mov.w	ip, #10
 80038f6:	4621      	mov	r1, r4
 80038f8:	f811 3b01 	ldrb.w	r3, [r1], #1
 80038fc:	3b30      	subs	r3, #48	; 0x30
 80038fe:	2b09      	cmp	r3, #9
 8003900:	d94d      	bls.n	800399e <_vfiprintf_r+0x1a6>
 8003902:	b1b0      	cbz	r0, 8003932 <_vfiprintf_r+0x13a>
 8003904:	9207      	str	r2, [sp, #28]
 8003906:	e014      	b.n	8003932 <_vfiprintf_r+0x13a>
 8003908:	eba0 0308 	sub.w	r3, r0, r8
 800390c:	fa09 f303 	lsl.w	r3, r9, r3
 8003910:	4313      	orrs	r3, r2
 8003912:	9304      	str	r3, [sp, #16]
 8003914:	46a2      	mov	sl, r4
 8003916:	e7d2      	b.n	80038be <_vfiprintf_r+0xc6>
 8003918:	9b03      	ldr	r3, [sp, #12]
 800391a:	1d19      	adds	r1, r3, #4
 800391c:	681b      	ldr	r3, [r3, #0]
 800391e:	9103      	str	r1, [sp, #12]
 8003920:	2b00      	cmp	r3, #0
 8003922:	bfbb      	ittet	lt
 8003924:	425b      	neglt	r3, r3
 8003926:	f042 0202 	orrlt.w	r2, r2, #2
 800392a:	9307      	strge	r3, [sp, #28]
 800392c:	9307      	strlt	r3, [sp, #28]
 800392e:	bfb8      	it	lt
 8003930:	9204      	strlt	r2, [sp, #16]
 8003932:	7823      	ldrb	r3, [r4, #0]
 8003934:	2b2e      	cmp	r3, #46	; 0x2e
 8003936:	d10c      	bne.n	8003952 <_vfiprintf_r+0x15a>
 8003938:	7863      	ldrb	r3, [r4, #1]
 800393a:	2b2a      	cmp	r3, #42	; 0x2a
 800393c:	d134      	bne.n	80039a8 <_vfiprintf_r+0x1b0>
 800393e:	9b03      	ldr	r3, [sp, #12]
 8003940:	1d1a      	adds	r2, r3, #4
 8003942:	681b      	ldr	r3, [r3, #0]
 8003944:	9203      	str	r2, [sp, #12]
 8003946:	2b00      	cmp	r3, #0
 8003948:	bfb8      	it	lt
 800394a:	f04f 33ff 	movlt.w	r3, #4294967295
 800394e:	3402      	adds	r4, #2
 8003950:	9305      	str	r3, [sp, #20]
 8003952:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 8003a28 <_vfiprintf_r+0x230>
 8003956:	7821      	ldrb	r1, [r4, #0]
 8003958:	2203      	movs	r2, #3
 800395a:	4650      	mov	r0, sl
 800395c:	f7fc fc40 	bl	80001e0 <memchr>
 8003960:	b138      	cbz	r0, 8003972 <_vfiprintf_r+0x17a>
 8003962:	9b04      	ldr	r3, [sp, #16]
 8003964:	eba0 000a 	sub.w	r0, r0, sl
 8003968:	2240      	movs	r2, #64	; 0x40
 800396a:	4082      	lsls	r2, r0
 800396c:	4313      	orrs	r3, r2
 800396e:	3401      	adds	r4, #1
 8003970:	9304      	str	r3, [sp, #16]
 8003972:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003976:	4829      	ldr	r0, [pc, #164]	; (8003a1c <_vfiprintf_r+0x224>)
 8003978:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800397c:	2206      	movs	r2, #6
 800397e:	f7fc fc2f 	bl	80001e0 <memchr>
 8003982:	2800      	cmp	r0, #0
 8003984:	d03f      	beq.n	8003a06 <_vfiprintf_r+0x20e>
 8003986:	4b26      	ldr	r3, [pc, #152]	; (8003a20 <_vfiprintf_r+0x228>)
 8003988:	bb1b      	cbnz	r3, 80039d2 <_vfiprintf_r+0x1da>
 800398a:	9b03      	ldr	r3, [sp, #12]
 800398c:	3307      	adds	r3, #7
 800398e:	f023 0307 	bic.w	r3, r3, #7
 8003992:	3308      	adds	r3, #8
 8003994:	9303      	str	r3, [sp, #12]
 8003996:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003998:	443b      	add	r3, r7
 800399a:	9309      	str	r3, [sp, #36]	; 0x24
 800399c:	e768      	b.n	8003870 <_vfiprintf_r+0x78>
 800399e:	fb0c 3202 	mla	r2, ip, r2, r3
 80039a2:	460c      	mov	r4, r1
 80039a4:	2001      	movs	r0, #1
 80039a6:	e7a6      	b.n	80038f6 <_vfiprintf_r+0xfe>
 80039a8:	2300      	movs	r3, #0
 80039aa:	3401      	adds	r4, #1
 80039ac:	9305      	str	r3, [sp, #20]
 80039ae:	4619      	mov	r1, r3
 80039b0:	f04f 0c0a 	mov.w	ip, #10
 80039b4:	4620      	mov	r0, r4
 80039b6:	f810 2b01 	ldrb.w	r2, [r0], #1
 80039ba:	3a30      	subs	r2, #48	; 0x30
 80039bc:	2a09      	cmp	r2, #9
 80039be:	d903      	bls.n	80039c8 <_vfiprintf_r+0x1d0>
 80039c0:	2b00      	cmp	r3, #0
 80039c2:	d0c6      	beq.n	8003952 <_vfiprintf_r+0x15a>
 80039c4:	9105      	str	r1, [sp, #20]
 80039c6:	e7c4      	b.n	8003952 <_vfiprintf_r+0x15a>
 80039c8:	fb0c 2101 	mla	r1, ip, r1, r2
 80039cc:	4604      	mov	r4, r0
 80039ce:	2301      	movs	r3, #1
 80039d0:	e7f0      	b.n	80039b4 <_vfiprintf_r+0x1bc>
 80039d2:	ab03      	add	r3, sp, #12
 80039d4:	9300      	str	r3, [sp, #0]
 80039d6:	462a      	mov	r2, r5
 80039d8:	4b12      	ldr	r3, [pc, #72]	; (8003a24 <_vfiprintf_r+0x22c>)
 80039da:	a904      	add	r1, sp, #16
 80039dc:	4630      	mov	r0, r6
 80039de:	f7fd fe83 	bl	80016e8 <_printf_float>
 80039e2:	4607      	mov	r7, r0
 80039e4:	1c78      	adds	r0, r7, #1
 80039e6:	d1d6      	bne.n	8003996 <_vfiprintf_r+0x19e>
 80039e8:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80039ea:	07d9      	lsls	r1, r3, #31
 80039ec:	d405      	bmi.n	80039fa <_vfiprintf_r+0x202>
 80039ee:	89ab      	ldrh	r3, [r5, #12]
 80039f0:	059a      	lsls	r2, r3, #22
 80039f2:	d402      	bmi.n	80039fa <_vfiprintf_r+0x202>
 80039f4:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80039f6:	f7fe fc65 	bl	80022c4 <__retarget_lock_release_recursive>
 80039fa:	89ab      	ldrh	r3, [r5, #12]
 80039fc:	065b      	lsls	r3, r3, #25
 80039fe:	f53f af1d 	bmi.w	800383c <_vfiprintf_r+0x44>
 8003a02:	9809      	ldr	r0, [sp, #36]	; 0x24
 8003a04:	e71c      	b.n	8003840 <_vfiprintf_r+0x48>
 8003a06:	ab03      	add	r3, sp, #12
 8003a08:	9300      	str	r3, [sp, #0]
 8003a0a:	462a      	mov	r2, r5
 8003a0c:	4b05      	ldr	r3, [pc, #20]	; (8003a24 <_vfiprintf_r+0x22c>)
 8003a0e:	a904      	add	r1, sp, #16
 8003a10:	4630      	mov	r0, r6
 8003a12:	f7fe f90d 	bl	8001c30 <_printf_i>
 8003a16:	e7e4      	b.n	80039e2 <_vfiprintf_r+0x1ea>
 8003a18:	0800418c 	.word	0x0800418c
 8003a1c:	08004196 	.word	0x08004196
 8003a20:	080016e9 	.word	0x080016e9
 8003a24:	080037d3 	.word	0x080037d3
 8003a28:	08004192 	.word	0x08004192

08003a2c <__sflush_r>:
 8003a2c:	898a      	ldrh	r2, [r1, #12]
 8003a2e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003a32:	4605      	mov	r5, r0
 8003a34:	0710      	lsls	r0, r2, #28
 8003a36:	460c      	mov	r4, r1
 8003a38:	d458      	bmi.n	8003aec <__sflush_r+0xc0>
 8003a3a:	684b      	ldr	r3, [r1, #4]
 8003a3c:	2b00      	cmp	r3, #0
 8003a3e:	dc05      	bgt.n	8003a4c <__sflush_r+0x20>
 8003a40:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8003a42:	2b00      	cmp	r3, #0
 8003a44:	dc02      	bgt.n	8003a4c <__sflush_r+0x20>
 8003a46:	2000      	movs	r0, #0
 8003a48:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003a4c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8003a4e:	2e00      	cmp	r6, #0
 8003a50:	d0f9      	beq.n	8003a46 <__sflush_r+0x1a>
 8003a52:	2300      	movs	r3, #0
 8003a54:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8003a58:	682f      	ldr	r7, [r5, #0]
 8003a5a:	6a21      	ldr	r1, [r4, #32]
 8003a5c:	602b      	str	r3, [r5, #0]
 8003a5e:	d032      	beq.n	8003ac6 <__sflush_r+0x9a>
 8003a60:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8003a62:	89a3      	ldrh	r3, [r4, #12]
 8003a64:	075a      	lsls	r2, r3, #29
 8003a66:	d505      	bpl.n	8003a74 <__sflush_r+0x48>
 8003a68:	6863      	ldr	r3, [r4, #4]
 8003a6a:	1ac0      	subs	r0, r0, r3
 8003a6c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8003a6e:	b10b      	cbz	r3, 8003a74 <__sflush_r+0x48>
 8003a70:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8003a72:	1ac0      	subs	r0, r0, r3
 8003a74:	2300      	movs	r3, #0
 8003a76:	4602      	mov	r2, r0
 8003a78:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8003a7a:	6a21      	ldr	r1, [r4, #32]
 8003a7c:	4628      	mov	r0, r5
 8003a7e:	47b0      	blx	r6
 8003a80:	1c43      	adds	r3, r0, #1
 8003a82:	89a3      	ldrh	r3, [r4, #12]
 8003a84:	d106      	bne.n	8003a94 <__sflush_r+0x68>
 8003a86:	6829      	ldr	r1, [r5, #0]
 8003a88:	291d      	cmp	r1, #29
 8003a8a:	d82b      	bhi.n	8003ae4 <__sflush_r+0xb8>
 8003a8c:	4a29      	ldr	r2, [pc, #164]	; (8003b34 <__sflush_r+0x108>)
 8003a8e:	410a      	asrs	r2, r1
 8003a90:	07d6      	lsls	r6, r2, #31
 8003a92:	d427      	bmi.n	8003ae4 <__sflush_r+0xb8>
 8003a94:	2200      	movs	r2, #0
 8003a96:	6062      	str	r2, [r4, #4]
 8003a98:	04d9      	lsls	r1, r3, #19
 8003a9a:	6922      	ldr	r2, [r4, #16]
 8003a9c:	6022      	str	r2, [r4, #0]
 8003a9e:	d504      	bpl.n	8003aaa <__sflush_r+0x7e>
 8003aa0:	1c42      	adds	r2, r0, #1
 8003aa2:	d101      	bne.n	8003aa8 <__sflush_r+0x7c>
 8003aa4:	682b      	ldr	r3, [r5, #0]
 8003aa6:	b903      	cbnz	r3, 8003aaa <__sflush_r+0x7e>
 8003aa8:	6560      	str	r0, [r4, #84]	; 0x54
 8003aaa:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8003aac:	602f      	str	r7, [r5, #0]
 8003aae:	2900      	cmp	r1, #0
 8003ab0:	d0c9      	beq.n	8003a46 <__sflush_r+0x1a>
 8003ab2:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8003ab6:	4299      	cmp	r1, r3
 8003ab8:	d002      	beq.n	8003ac0 <__sflush_r+0x94>
 8003aba:	4628      	mov	r0, r5
 8003abc:	f7ff faaa 	bl	8003014 <_free_r>
 8003ac0:	2000      	movs	r0, #0
 8003ac2:	6360      	str	r0, [r4, #52]	; 0x34
 8003ac4:	e7c0      	b.n	8003a48 <__sflush_r+0x1c>
 8003ac6:	2301      	movs	r3, #1
 8003ac8:	4628      	mov	r0, r5
 8003aca:	47b0      	blx	r6
 8003acc:	1c41      	adds	r1, r0, #1
 8003ace:	d1c8      	bne.n	8003a62 <__sflush_r+0x36>
 8003ad0:	682b      	ldr	r3, [r5, #0]
 8003ad2:	2b00      	cmp	r3, #0
 8003ad4:	d0c5      	beq.n	8003a62 <__sflush_r+0x36>
 8003ad6:	2b1d      	cmp	r3, #29
 8003ad8:	d001      	beq.n	8003ade <__sflush_r+0xb2>
 8003ada:	2b16      	cmp	r3, #22
 8003adc:	d101      	bne.n	8003ae2 <__sflush_r+0xb6>
 8003ade:	602f      	str	r7, [r5, #0]
 8003ae0:	e7b1      	b.n	8003a46 <__sflush_r+0x1a>
 8003ae2:	89a3      	ldrh	r3, [r4, #12]
 8003ae4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003ae8:	81a3      	strh	r3, [r4, #12]
 8003aea:	e7ad      	b.n	8003a48 <__sflush_r+0x1c>
 8003aec:	690f      	ldr	r7, [r1, #16]
 8003aee:	2f00      	cmp	r7, #0
 8003af0:	d0a9      	beq.n	8003a46 <__sflush_r+0x1a>
 8003af2:	0793      	lsls	r3, r2, #30
 8003af4:	680e      	ldr	r6, [r1, #0]
 8003af6:	bf08      	it	eq
 8003af8:	694b      	ldreq	r3, [r1, #20]
 8003afa:	600f      	str	r7, [r1, #0]
 8003afc:	bf18      	it	ne
 8003afe:	2300      	movne	r3, #0
 8003b00:	eba6 0807 	sub.w	r8, r6, r7
 8003b04:	608b      	str	r3, [r1, #8]
 8003b06:	f1b8 0f00 	cmp.w	r8, #0
 8003b0a:	dd9c      	ble.n	8003a46 <__sflush_r+0x1a>
 8003b0c:	6a21      	ldr	r1, [r4, #32]
 8003b0e:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8003b10:	4643      	mov	r3, r8
 8003b12:	463a      	mov	r2, r7
 8003b14:	4628      	mov	r0, r5
 8003b16:	47b0      	blx	r6
 8003b18:	2800      	cmp	r0, #0
 8003b1a:	dc06      	bgt.n	8003b2a <__sflush_r+0xfe>
 8003b1c:	89a3      	ldrh	r3, [r4, #12]
 8003b1e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003b22:	81a3      	strh	r3, [r4, #12]
 8003b24:	f04f 30ff 	mov.w	r0, #4294967295
 8003b28:	e78e      	b.n	8003a48 <__sflush_r+0x1c>
 8003b2a:	4407      	add	r7, r0
 8003b2c:	eba8 0800 	sub.w	r8, r8, r0
 8003b30:	e7e9      	b.n	8003b06 <__sflush_r+0xda>
 8003b32:	bf00      	nop
 8003b34:	dfbffffe 	.word	0xdfbffffe

08003b38 <_fflush_r>:
 8003b38:	b538      	push	{r3, r4, r5, lr}
 8003b3a:	690b      	ldr	r3, [r1, #16]
 8003b3c:	4605      	mov	r5, r0
 8003b3e:	460c      	mov	r4, r1
 8003b40:	b913      	cbnz	r3, 8003b48 <_fflush_r+0x10>
 8003b42:	2500      	movs	r5, #0
 8003b44:	4628      	mov	r0, r5
 8003b46:	bd38      	pop	{r3, r4, r5, pc}
 8003b48:	b118      	cbz	r0, 8003b52 <_fflush_r+0x1a>
 8003b4a:	6a03      	ldr	r3, [r0, #32]
 8003b4c:	b90b      	cbnz	r3, 8003b52 <_fflush_r+0x1a>
 8003b4e:	f7fe fa1d 	bl	8001f8c <__sinit>
 8003b52:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003b56:	2b00      	cmp	r3, #0
 8003b58:	d0f3      	beq.n	8003b42 <_fflush_r+0xa>
 8003b5a:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8003b5c:	07d0      	lsls	r0, r2, #31
 8003b5e:	d404      	bmi.n	8003b6a <_fflush_r+0x32>
 8003b60:	0599      	lsls	r1, r3, #22
 8003b62:	d402      	bmi.n	8003b6a <_fflush_r+0x32>
 8003b64:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8003b66:	f7fe fbac 	bl	80022c2 <__retarget_lock_acquire_recursive>
 8003b6a:	4628      	mov	r0, r5
 8003b6c:	4621      	mov	r1, r4
 8003b6e:	f7ff ff5d 	bl	8003a2c <__sflush_r>
 8003b72:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8003b74:	07da      	lsls	r2, r3, #31
 8003b76:	4605      	mov	r5, r0
 8003b78:	d4e4      	bmi.n	8003b44 <_fflush_r+0xc>
 8003b7a:	89a3      	ldrh	r3, [r4, #12]
 8003b7c:	059b      	lsls	r3, r3, #22
 8003b7e:	d4e1      	bmi.n	8003b44 <_fflush_r+0xc>
 8003b80:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8003b82:	f7fe fb9f 	bl	80022c4 <__retarget_lock_release_recursive>
 8003b86:	e7dd      	b.n	8003b44 <_fflush_r+0xc>

08003b88 <fiprintf>:
 8003b88:	b40e      	push	{r1, r2, r3}
 8003b8a:	b503      	push	{r0, r1, lr}
 8003b8c:	4601      	mov	r1, r0
 8003b8e:	ab03      	add	r3, sp, #12
 8003b90:	4805      	ldr	r0, [pc, #20]	; (8003ba8 <fiprintf+0x20>)
 8003b92:	f853 2b04 	ldr.w	r2, [r3], #4
 8003b96:	6800      	ldr	r0, [r0, #0]
 8003b98:	9301      	str	r3, [sp, #4]
 8003b9a:	f7ff fe2d 	bl	80037f8 <_vfiprintf_r>
 8003b9e:	b002      	add	sp, #8
 8003ba0:	f85d eb04 	ldr.w	lr, [sp], #4
 8003ba4:	b003      	add	sp, #12
 8003ba6:	4770      	bx	lr
 8003ba8:	20000084 	.word	0x20000084

08003bac <__swhatbuf_r>:
 8003bac:	b570      	push	{r4, r5, r6, lr}
 8003bae:	460c      	mov	r4, r1
 8003bb0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003bb4:	2900      	cmp	r1, #0
 8003bb6:	b096      	sub	sp, #88	; 0x58
 8003bb8:	4615      	mov	r5, r2
 8003bba:	461e      	mov	r6, r3
 8003bbc:	da0d      	bge.n	8003bda <__swhatbuf_r+0x2e>
 8003bbe:	89a3      	ldrh	r3, [r4, #12]
 8003bc0:	f013 0f80 	tst.w	r3, #128	; 0x80
 8003bc4:	f04f 0100 	mov.w	r1, #0
 8003bc8:	bf0c      	ite	eq
 8003bca:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 8003bce:	2340      	movne	r3, #64	; 0x40
 8003bd0:	2000      	movs	r0, #0
 8003bd2:	6031      	str	r1, [r6, #0]
 8003bd4:	602b      	str	r3, [r5, #0]
 8003bd6:	b016      	add	sp, #88	; 0x58
 8003bd8:	bd70      	pop	{r4, r5, r6, pc}
 8003bda:	466a      	mov	r2, sp
 8003bdc:	f000 f848 	bl	8003c70 <_fstat_r>
 8003be0:	2800      	cmp	r0, #0
 8003be2:	dbec      	blt.n	8003bbe <__swhatbuf_r+0x12>
 8003be4:	9901      	ldr	r1, [sp, #4]
 8003be6:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 8003bea:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 8003bee:	4259      	negs	r1, r3
 8003bf0:	4159      	adcs	r1, r3
 8003bf2:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8003bf6:	e7eb      	b.n	8003bd0 <__swhatbuf_r+0x24>

08003bf8 <__smakebuf_r>:
 8003bf8:	898b      	ldrh	r3, [r1, #12]
 8003bfa:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8003bfc:	079d      	lsls	r5, r3, #30
 8003bfe:	4606      	mov	r6, r0
 8003c00:	460c      	mov	r4, r1
 8003c02:	d507      	bpl.n	8003c14 <__smakebuf_r+0x1c>
 8003c04:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8003c08:	6023      	str	r3, [r4, #0]
 8003c0a:	6123      	str	r3, [r4, #16]
 8003c0c:	2301      	movs	r3, #1
 8003c0e:	6163      	str	r3, [r4, #20]
 8003c10:	b002      	add	sp, #8
 8003c12:	bd70      	pop	{r4, r5, r6, pc}
 8003c14:	ab01      	add	r3, sp, #4
 8003c16:	466a      	mov	r2, sp
 8003c18:	f7ff ffc8 	bl	8003bac <__swhatbuf_r>
 8003c1c:	9900      	ldr	r1, [sp, #0]
 8003c1e:	4605      	mov	r5, r0
 8003c20:	4630      	mov	r0, r6
 8003c22:	f7fd fc35 	bl	8001490 <_malloc_r>
 8003c26:	b948      	cbnz	r0, 8003c3c <__smakebuf_r+0x44>
 8003c28:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003c2c:	059a      	lsls	r2, r3, #22
 8003c2e:	d4ef      	bmi.n	8003c10 <__smakebuf_r+0x18>
 8003c30:	f023 0303 	bic.w	r3, r3, #3
 8003c34:	f043 0302 	orr.w	r3, r3, #2
 8003c38:	81a3      	strh	r3, [r4, #12]
 8003c3a:	e7e3      	b.n	8003c04 <__smakebuf_r+0xc>
 8003c3c:	89a3      	ldrh	r3, [r4, #12]
 8003c3e:	6020      	str	r0, [r4, #0]
 8003c40:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8003c44:	81a3      	strh	r3, [r4, #12]
 8003c46:	9b00      	ldr	r3, [sp, #0]
 8003c48:	6163      	str	r3, [r4, #20]
 8003c4a:	9b01      	ldr	r3, [sp, #4]
 8003c4c:	6120      	str	r0, [r4, #16]
 8003c4e:	b15b      	cbz	r3, 8003c68 <__smakebuf_r+0x70>
 8003c50:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8003c54:	4630      	mov	r0, r6
 8003c56:	f000 f81d 	bl	8003c94 <_isatty_r>
 8003c5a:	b128      	cbz	r0, 8003c68 <__smakebuf_r+0x70>
 8003c5c:	89a3      	ldrh	r3, [r4, #12]
 8003c5e:	f023 0303 	bic.w	r3, r3, #3
 8003c62:	f043 0301 	orr.w	r3, r3, #1
 8003c66:	81a3      	strh	r3, [r4, #12]
 8003c68:	89a3      	ldrh	r3, [r4, #12]
 8003c6a:	431d      	orrs	r5, r3
 8003c6c:	81a5      	strh	r5, [r4, #12]
 8003c6e:	e7cf      	b.n	8003c10 <__smakebuf_r+0x18>

08003c70 <_fstat_r>:
 8003c70:	b538      	push	{r3, r4, r5, lr}
 8003c72:	4d07      	ldr	r5, [pc, #28]	; (8003c90 <_fstat_r+0x20>)
 8003c74:	2300      	movs	r3, #0
 8003c76:	4604      	mov	r4, r0
 8003c78:	4608      	mov	r0, r1
 8003c7a:	4611      	mov	r1, r2
 8003c7c:	602b      	str	r3, [r5, #0]
 8003c7e:	f7fd fb44 	bl	800130a <_fstat>
 8003c82:	1c43      	adds	r3, r0, #1
 8003c84:	d102      	bne.n	8003c8c <_fstat_r+0x1c>
 8003c86:	682b      	ldr	r3, [r5, #0]
 8003c88:	b103      	cbz	r3, 8003c8c <_fstat_r+0x1c>
 8003c8a:	6023      	str	r3, [r4, #0]
 8003c8c:	bd38      	pop	{r3, r4, r5, pc}
 8003c8e:	bf00      	nop
 8003c90:	20000368 	.word	0x20000368

08003c94 <_isatty_r>:
 8003c94:	b538      	push	{r3, r4, r5, lr}
 8003c96:	4d06      	ldr	r5, [pc, #24]	; (8003cb0 <_isatty_r+0x1c>)
 8003c98:	2300      	movs	r3, #0
 8003c9a:	4604      	mov	r4, r0
 8003c9c:	4608      	mov	r0, r1
 8003c9e:	602b      	str	r3, [r5, #0]
 8003ca0:	f7fd fb43 	bl	800132a <_isatty>
 8003ca4:	1c43      	adds	r3, r0, #1
 8003ca6:	d102      	bne.n	8003cae <_isatty_r+0x1a>
 8003ca8:	682b      	ldr	r3, [r5, #0]
 8003caa:	b103      	cbz	r3, 8003cae <_isatty_r+0x1a>
 8003cac:	6023      	str	r3, [r4, #0]
 8003cae:	bd38      	pop	{r3, r4, r5, pc}
 8003cb0:	20000368 	.word	0x20000368

08003cb4 <abort>:
 8003cb4:	b508      	push	{r3, lr}
 8003cb6:	2006      	movs	r0, #6
 8003cb8:	f000 f860 	bl	8003d7c <raise>
 8003cbc:	2001      	movs	r0, #1
 8003cbe:	f7fd fad5 	bl	800126c <_exit>

08003cc2 <_calloc_r>:
 8003cc2:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8003cc4:	fba1 2402 	umull	r2, r4, r1, r2
 8003cc8:	b94c      	cbnz	r4, 8003cde <_calloc_r+0x1c>
 8003cca:	4611      	mov	r1, r2
 8003ccc:	9201      	str	r2, [sp, #4]
 8003cce:	f7fd fbdf 	bl	8001490 <_malloc_r>
 8003cd2:	9a01      	ldr	r2, [sp, #4]
 8003cd4:	4605      	mov	r5, r0
 8003cd6:	b930      	cbnz	r0, 8003ce6 <_calloc_r+0x24>
 8003cd8:	4628      	mov	r0, r5
 8003cda:	b003      	add	sp, #12
 8003cdc:	bd30      	pop	{r4, r5, pc}
 8003cde:	220c      	movs	r2, #12
 8003ce0:	6002      	str	r2, [r0, #0]
 8003ce2:	2500      	movs	r5, #0
 8003ce4:	e7f8      	b.n	8003cd8 <_calloc_r+0x16>
 8003ce6:	4621      	mov	r1, r4
 8003ce8:	f7fe fa5e 	bl	80021a8 <memset>
 8003cec:	e7f4      	b.n	8003cd8 <_calloc_r+0x16>

08003cee <__ascii_mbtowc>:
 8003cee:	b082      	sub	sp, #8
 8003cf0:	b901      	cbnz	r1, 8003cf4 <__ascii_mbtowc+0x6>
 8003cf2:	a901      	add	r1, sp, #4
 8003cf4:	b142      	cbz	r2, 8003d08 <__ascii_mbtowc+0x1a>
 8003cf6:	b14b      	cbz	r3, 8003d0c <__ascii_mbtowc+0x1e>
 8003cf8:	7813      	ldrb	r3, [r2, #0]
 8003cfa:	600b      	str	r3, [r1, #0]
 8003cfc:	7812      	ldrb	r2, [r2, #0]
 8003cfe:	1e10      	subs	r0, r2, #0
 8003d00:	bf18      	it	ne
 8003d02:	2001      	movne	r0, #1
 8003d04:	b002      	add	sp, #8
 8003d06:	4770      	bx	lr
 8003d08:	4610      	mov	r0, r2
 8003d0a:	e7fb      	b.n	8003d04 <__ascii_mbtowc+0x16>
 8003d0c:	f06f 0001 	mvn.w	r0, #1
 8003d10:	e7f8      	b.n	8003d04 <__ascii_mbtowc+0x16>

08003d12 <__ascii_wctomb>:
 8003d12:	b149      	cbz	r1, 8003d28 <__ascii_wctomb+0x16>
 8003d14:	2aff      	cmp	r2, #255	; 0xff
 8003d16:	bf85      	ittet	hi
 8003d18:	238a      	movhi	r3, #138	; 0x8a
 8003d1a:	6003      	strhi	r3, [r0, #0]
 8003d1c:	700a      	strbls	r2, [r1, #0]
 8003d1e:	f04f 30ff 	movhi.w	r0, #4294967295
 8003d22:	bf98      	it	ls
 8003d24:	2001      	movls	r0, #1
 8003d26:	4770      	bx	lr
 8003d28:	4608      	mov	r0, r1
 8003d2a:	4770      	bx	lr

08003d2c <_raise_r>:
 8003d2c:	291f      	cmp	r1, #31
 8003d2e:	b538      	push	{r3, r4, r5, lr}
 8003d30:	4604      	mov	r4, r0
 8003d32:	460d      	mov	r5, r1
 8003d34:	d904      	bls.n	8003d40 <_raise_r+0x14>
 8003d36:	2316      	movs	r3, #22
 8003d38:	6003      	str	r3, [r0, #0]
 8003d3a:	f04f 30ff 	mov.w	r0, #4294967295
 8003d3e:	bd38      	pop	{r3, r4, r5, pc}
 8003d40:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 8003d42:	b112      	cbz	r2, 8003d4a <_raise_r+0x1e>
 8003d44:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8003d48:	b94b      	cbnz	r3, 8003d5e <_raise_r+0x32>
 8003d4a:	4620      	mov	r0, r4
 8003d4c:	f000 f830 	bl	8003db0 <_getpid_r>
 8003d50:	462a      	mov	r2, r5
 8003d52:	4601      	mov	r1, r0
 8003d54:	4620      	mov	r0, r4
 8003d56:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8003d5a:	f000 b817 	b.w	8003d8c <_kill_r>
 8003d5e:	2b01      	cmp	r3, #1
 8003d60:	d00a      	beq.n	8003d78 <_raise_r+0x4c>
 8003d62:	1c59      	adds	r1, r3, #1
 8003d64:	d103      	bne.n	8003d6e <_raise_r+0x42>
 8003d66:	2316      	movs	r3, #22
 8003d68:	6003      	str	r3, [r0, #0]
 8003d6a:	2001      	movs	r0, #1
 8003d6c:	e7e7      	b.n	8003d3e <_raise_r+0x12>
 8003d6e:	2400      	movs	r4, #0
 8003d70:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8003d74:	4628      	mov	r0, r5
 8003d76:	4798      	blx	r3
 8003d78:	2000      	movs	r0, #0
 8003d7a:	e7e0      	b.n	8003d3e <_raise_r+0x12>

08003d7c <raise>:
 8003d7c:	4b02      	ldr	r3, [pc, #8]	; (8003d88 <raise+0xc>)
 8003d7e:	4601      	mov	r1, r0
 8003d80:	6818      	ldr	r0, [r3, #0]
 8003d82:	f7ff bfd3 	b.w	8003d2c <_raise_r>
 8003d86:	bf00      	nop
 8003d88:	20000084 	.word	0x20000084

08003d8c <_kill_r>:
 8003d8c:	b538      	push	{r3, r4, r5, lr}
 8003d8e:	4d07      	ldr	r5, [pc, #28]	; (8003dac <_kill_r+0x20>)
 8003d90:	2300      	movs	r3, #0
 8003d92:	4604      	mov	r4, r0
 8003d94:	4608      	mov	r0, r1
 8003d96:	4611      	mov	r1, r2
 8003d98:	602b      	str	r3, [r5, #0]
 8003d9a:	f7fd fa57 	bl	800124c <_kill>
 8003d9e:	1c43      	adds	r3, r0, #1
 8003da0:	d102      	bne.n	8003da8 <_kill_r+0x1c>
 8003da2:	682b      	ldr	r3, [r5, #0]
 8003da4:	b103      	cbz	r3, 8003da8 <_kill_r+0x1c>
 8003da6:	6023      	str	r3, [r4, #0]
 8003da8:	bd38      	pop	{r3, r4, r5, pc}
 8003daa:	bf00      	nop
 8003dac:	20000368 	.word	0x20000368

08003db0 <_getpid_r>:
 8003db0:	f7fd ba44 	b.w	800123c <_getpid>

08003db4 <_init>:
 8003db4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003db6:	bf00      	nop
 8003db8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8003dba:	bc08      	pop	{r3}
 8003dbc:	469e      	mov	lr, r3
 8003dbe:	4770      	bx	lr

08003dc0 <_fini>:
 8003dc0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003dc2:	bf00      	nop
 8003dc4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8003dc6:	bc08      	pop	{r3}
 8003dc8:	469e      	mov	lr, r3
 8003dca:	4770      	bx	lr
